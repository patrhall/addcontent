#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIM.Business.AimNews
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aimit_Aim")]
	public partial class DataObjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAimNews_AimNew(AimNews_AimNew instance);
    partial void UpdateAimNews_AimNew(AimNews_AimNew instance);
    partial void DeleteAimNews_AimNew(AimNews_AimNew instance);
    partial void InsertAimNews_MailGroup(AimNews_MailGroup instance);
    partial void UpdateAimNews_MailGroup(AimNews_MailGroup instance);
    partial void DeleteAimNews_MailGroup(AimNews_MailGroup instance);
    partial void InsertAimNews_Group(AimNews_Group instance);
    partial void UpdateAimNews_Group(AimNews_Group instance);
    partial void DeleteAimNews_Group(AimNews_Group instance);
    partial void InsertAimNews_GroupUser(AimNews_GroupUser instance);
    partial void UpdateAimNews_GroupUser(AimNews_GroupUser instance);
    partial void DeleteAimNews_GroupUser(AimNews_GroupUser instance);
    partial void InsertAimNews_Link(AimNews_Link instance);
    partial void UpdateAimNews_Link(AimNews_Link instance);
    partial void DeleteAimNews_Link(AimNews_Link instance);
    partial void InsertAimNews_LinkedClicked(AimNews_LinkedClicked instance);
    partial void UpdateAimNews_LinkedClicked(AimNews_LinkedClicked instance);
    partial void DeleteAimNews_LinkedClicked(AimNews_LinkedClicked instance);
    partial void InsertAimNews_Log(AimNews_Log instance);
    partial void UpdateAimNews_Log(AimNews_Log instance);
    partial void DeleteAimNews_Log(AimNews_Log instance);
    partial void InsertAimNews_Mail(AimNews_Mail instance);
    partial void UpdateAimNews_Mail(AimNews_Mail instance);
    partial void DeleteAimNews_Mail(AimNews_Mail instance);
    partial void InsertAimNews_User(AimNews_User instance);
    partial void UpdateAimNews_User(AimNews_User instance);
    partial void DeleteAimNews_User(AimNews_User instance);
    partial void InsertAimNews_History(AimNews_History instance);
    partial void UpdateAimNews_History(AimNews_History instance);
    partial void DeleteAimNews_History(AimNews_History instance);
    partial void InsertAimNews_History_X_Group(AimNews_History_X_Group instance);
    partial void UpdateAimNews_History_X_Group(AimNews_History_X_Group instance);
    partial void DeleteAimNews_History_X_Group(AimNews_History_X_Group instance);
    #endregion
		
		public DataObjectsDataContext() : 
				base(global::AIM.Business.Properties.Settings.Default.Aimit_AimConnectionString11, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AimNews_AimNew> AimNews_AimNews
		{
			get
			{
				return this.GetTable<AimNews_AimNew>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Site> AimNews_Sites
		{
			get
			{
				return this.GetTable<AimNews_Site>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_MailGroup> AimNews_MailGroups
		{
			get
			{
				return this.GetTable<AimNews_MailGroup>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Group> AimNews_Groups
		{
			get
			{
				return this.GetTable<AimNews_Group>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_GroupUser> AimNews_GroupUsers
		{
			get
			{
				return this.GetTable<AimNews_GroupUser>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Link> AimNews_Links
		{
			get
			{
				return this.GetTable<AimNews_Link>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_LinkedClicked> AimNews_LinkedClickeds
		{
			get
			{
				return this.GetTable<AimNews_LinkedClicked>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Log> AimNews_Logs
		{
			get
			{
				return this.GetTable<AimNews_Log>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Mail> AimNews_Mails
		{
			get
			{
				return this.GetTable<AimNews_Mail>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_User> AimNews_Users
		{
			get
			{
				return this.GetTable<AimNews_User>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_History> AimNews_Histories
		{
			get
			{
				return this.GetTable<AimNews_History>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_History_X_Group> AimNews_History_X_Groups
		{
			get
			{
				return this.GetTable<AimNews_History_X_Group>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_AimNews")]
	public partial class AimNews_AimNew : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private EntitySet<AimNews_Group> _AimNews_Groups;
		
		private EntitySet<AimNews_Mail> _AimNews_Mails;
		
		private EntitySet<AimNews_User> _AimNews_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AimNews_AimNew()
		{
			this._AimNews_Groups = new EntitySet<AimNews_Group>(new Action<AimNews_Group>(this.attach_AimNews_Groups), new Action<AimNews_Group>(this.detach_AimNews_Groups));
			this._AimNews_Mails = new EntitySet<AimNews_Mail>(new Action<AimNews_Mail>(this.attach_AimNews_Mails), new Action<AimNews_Mail>(this.detach_AimNews_Mails));
			this._AimNews_Users = new EntitySet<AimNews_User>(new Action<AimNews_User>(this.attach_AimNews_Users), new Action<AimNews_User>(this.detach_AimNews_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_Group", Storage="_AimNews_Groups", ThisKey="ID", OtherKey="AimNewsID")]
		public EntitySet<AimNews_Group> AimNews_Groups
		{
			get
			{
				return this._AimNews_Groups;
			}
			set
			{
				this._AimNews_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_Mail", Storage="_AimNews_Mails", ThisKey="ID", OtherKey="AimNewsID")]
		public EntitySet<AimNews_Mail> AimNews_Mails
		{
			get
			{
				return this._AimNews_Mails;
			}
			set
			{
				this._AimNews_Mails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_User", Storage="_AimNews_Users", ThisKey="ID", OtherKey="AimNewsID")]
		public EntitySet<AimNews_User> AimNews_Users
		{
			get
			{
				return this._AimNews_Users;
			}
			set
			{
				this._AimNews_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_Groups(AimNews_Group entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = this;
		}
		
		private void detach_AimNews_Groups(AimNews_Group entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = null;
		}
		
		private void attach_AimNews_Mails(AimNews_Mail entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = this;
		}
		
		private void detach_AimNews_Mails(AimNews_Mail entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = null;
		}
		
		private void attach_AimNews_Users(AimNews_User entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = this;
		}
		
		private void detach_AimNews_Users(AimNews_User entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Site")]
	public partial class AimNews_Site
	{
		
		private int _ID;
		
		private int _SiteID;
		
		private int _AimNewsID;
		
		public AimNews_Site()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimNewsID", DbType="Int NOT NULL")]
		public int AimNewsID
		{
			get
			{
				return this._AimNewsID;
			}
			set
			{
				if ((this._AimNewsID != value))
				{
					this._AimNewsID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_MailGroup")]
	public partial class AimNews_MailGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MailID;
		
		private int _GroupID;
		
		private EntityRef<AimNews_Group> _AimNews_Group;
		
		private EntityRef<AimNews_Mail> _AimNews_Mail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMailIDChanging(int value);
    partial void OnMailIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    #endregion
		
		public AimNews_MailGroup()
		{
			this._AimNews_Group = default(EntityRef<AimNews_Group>);
			this._AimNews_Mail = default(EntityRef<AimNews_Mail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailID", DbType="Int NOT NULL")]
		public int MailID
		{
			get
			{
				return this._MailID;
			}
			set
			{
				if ((this._MailID != value))
				{
					if (this._AimNews_Mail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailIDChanging(value);
					this.SendPropertyChanging();
					this._MailID = value;
					this.SendPropertyChanged("MailID");
					this.OnMailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._AimNews_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Group_AimNews_MailGroup", Storage="_AimNews_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Group AimNews_Group
		{
			get
			{
				return this._AimNews_Group.Entity;
			}
			set
			{
				AimNews_Group previousValue = this._AimNews_Group.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Group.Entity = null;
						previousValue.AimNews_MailGroups.Remove(this);
					}
					this._AimNews_Group.Entity = value;
					if ((value != null))
					{
						value.AimNews_MailGroups.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("AimNews_Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Mail_AimNews_MailGroup", Storage="_AimNews_Mail", ThisKey="MailID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Mail AimNews_Mail
		{
			get
			{
				return this._AimNews_Mail.Entity;
			}
			set
			{
				AimNews_Mail previousValue = this._AimNews_Mail.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Mail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Mail.Entity = null;
						previousValue.AimNews_MailGroups.Remove(this);
					}
					this._AimNews_Mail.Entity = value;
					if ((value != null))
					{
						value.AimNews_MailGroups.Add(this);
						this._MailID = value.ID;
					}
					else
					{
						this._MailID = default(int);
					}
					this.SendPropertyChanged("AimNews_Mail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Group")]
	public partial class AimNews_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AimNewsID;
		
		private string _GroupName;
		
		private string _Description;
		
		private EntitySet<AimNews_MailGroup> _AimNews_MailGroups;
		
		private EntitySet<AimNews_GroupUser> _AimNews_GroupUsers;
		
		private EntitySet<AimNews_History_X_Group> _AimNews_History_X_Groups;
		
		private EntityRef<AimNews_AimNew> _AimNews_AimNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAimNewsIDChanging(int value);
    partial void OnAimNewsIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AimNews_Group()
		{
			this._AimNews_MailGroups = new EntitySet<AimNews_MailGroup>(new Action<AimNews_MailGroup>(this.attach_AimNews_MailGroups), new Action<AimNews_MailGroup>(this.detach_AimNews_MailGroups));
			this._AimNews_GroupUsers = new EntitySet<AimNews_GroupUser>(new Action<AimNews_GroupUser>(this.attach_AimNews_GroupUsers), new Action<AimNews_GroupUser>(this.detach_AimNews_GroupUsers));
			this._AimNews_History_X_Groups = new EntitySet<AimNews_History_X_Group>(new Action<AimNews_History_X_Group>(this.attach_AimNews_History_X_Groups), new Action<AimNews_History_X_Group>(this.detach_AimNews_History_X_Groups));
			this._AimNews_AimNew = default(EntityRef<AimNews_AimNew>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimNewsID", DbType="Int NOT NULL")]
		public int AimNewsID
		{
			get
			{
				return this._AimNewsID;
			}
			set
			{
				if ((this._AimNewsID != value))
				{
					if (this._AimNews_AimNew.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimNewsIDChanging(value);
					this.SendPropertyChanging();
					this._AimNewsID = value;
					this.SendPropertyChanged("AimNewsID");
					this.OnAimNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Group_AimNews_MailGroup", Storage="_AimNews_MailGroups", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<AimNews_MailGroup> AimNews_MailGroups
		{
			get
			{
				return this._AimNews_MailGroups;
			}
			set
			{
				this._AimNews_MailGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Group_AimNews_GroupUser", Storage="_AimNews_GroupUsers", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<AimNews_GroupUser> AimNews_GroupUsers
		{
			get
			{
				return this._AimNews_GroupUsers;
			}
			set
			{
				this._AimNews_GroupUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Group_AimNews_History_X_Group", Storage="_AimNews_History_X_Groups", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<AimNews_History_X_Group> AimNews_History_X_Groups
		{
			get
			{
				return this._AimNews_History_X_Groups;
			}
			set
			{
				this._AimNews_History_X_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_Group", Storage="_AimNews_AimNew", ThisKey="AimNewsID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_AimNew AimNews_AimNew
		{
			get
			{
				return this._AimNews_AimNew.Entity;
			}
			set
			{
				AimNews_AimNew previousValue = this._AimNews_AimNew.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_AimNew.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_AimNew.Entity = null;
						previousValue.AimNews_Groups.Remove(this);
					}
					this._AimNews_AimNew.Entity = value;
					if ((value != null))
					{
						value.AimNews_Groups.Add(this);
						this._AimNewsID = value.ID;
					}
					else
					{
						this._AimNewsID = default(int);
					}
					this.SendPropertyChanged("AimNews_AimNew");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_MailGroups(AimNews_MailGroup entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Group = this;
		}
		
		private void detach_AimNews_MailGroups(AimNews_MailGroup entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Group = null;
		}
		
		private void attach_AimNews_GroupUsers(AimNews_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Group = this;
		}
		
		private void detach_AimNews_GroupUsers(AimNews_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Group = null;
		}
		
		private void attach_AimNews_History_X_Groups(AimNews_History_X_Group entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Group = this;
		}
		
		private void detach_AimNews_History_X_Groups(AimNews_History_X_Group entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_GroupUser")]
	public partial class AimNews_GroupUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _GroupID;
		
		private int _UserID;
		
		private EntityRef<AimNews_Group> _AimNews_Group;
		
		private EntityRef<AimNews_User> _AimNews_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public AimNews_GroupUser()
		{
			this._AimNews_Group = default(EntityRef<AimNews_Group>);
			this._AimNews_User = default(EntityRef<AimNews_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._AimNews_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._AimNews_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Group_AimNews_GroupUser", Storage="_AimNews_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Group AimNews_Group
		{
			get
			{
				return this._AimNews_Group.Entity;
			}
			set
			{
				AimNews_Group previousValue = this._AimNews_Group.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Group.Entity = null;
						previousValue.AimNews_GroupUsers.Remove(this);
					}
					this._AimNews_Group.Entity = value;
					if ((value != null))
					{
						value.AimNews_GroupUsers.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("AimNews_Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_User_AimNews_GroupUser", Storage="_AimNews_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_User AimNews_User
		{
			get
			{
				return this._AimNews_User.Entity;
			}
			set
			{
				AimNews_User previousValue = this._AimNews_User.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_User.Entity = null;
						previousValue.AimNews_GroupUsers.Remove(this);
					}
					this._AimNews_User.Entity = value;
					if ((value != null))
					{
						value.AimNews_GroupUsers.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("AimNews_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Links")]
	public partial class AimNews_Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _HistoryID_FK;
		
		private string _Url;
		
		private EntitySet<AimNews_LinkedClicked> _AimNews_LinkedClickeds;
		
		private EntityRef<AimNews_History> _AimNews_History;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHistoryID_FKChanging(int value);
    partial void OnHistoryID_FKChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public AimNews_Link()
		{
			this._AimNews_LinkedClickeds = new EntitySet<AimNews_LinkedClicked>(new Action<AimNews_LinkedClicked>(this.attach_AimNews_LinkedClickeds), new Action<AimNews_LinkedClicked>(this.detach_AimNews_LinkedClickeds));
			this._AimNews_History = default(EntityRef<AimNews_History>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID_FK", DbType="Int NOT NULL")]
		public int HistoryID_FK
		{
			get
			{
				return this._HistoryID_FK;
			}
			set
			{
				if ((this._HistoryID_FK != value))
				{
					if (this._AimNews_History.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHistoryID_FKChanging(value);
					this.SendPropertyChanging();
					this._HistoryID_FK = value;
					this.SendPropertyChanged("HistoryID_FK");
					this.OnHistoryID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(400)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Link_AimNews_LinkedClicked", Storage="_AimNews_LinkedClickeds", ThisKey="ID", OtherKey="LinkID_FK")]
		public EntitySet<AimNews_LinkedClicked> AimNews_LinkedClickeds
		{
			get
			{
				return this._AimNews_LinkedClickeds;
			}
			set
			{
				this._AimNews_LinkedClickeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_History_AimNews_Link", Storage="_AimNews_History", ThisKey="HistoryID_FK", OtherKey="ID", IsForeignKey=true)]
		public AimNews_History AimNews_History
		{
			get
			{
				return this._AimNews_History.Entity;
			}
			set
			{
				AimNews_History previousValue = this._AimNews_History.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_History.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_History.Entity = null;
						previousValue.AimNews_Links.Remove(this);
					}
					this._AimNews_History.Entity = value;
					if ((value != null))
					{
						value.AimNews_Links.Add(this);
						this._HistoryID_FK = value.ID;
					}
					else
					{
						this._HistoryID_FK = default(int);
					}
					this.SendPropertyChanged("AimNews_History");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_LinkedClickeds(AimNews_LinkedClicked entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Link = this;
		}
		
		private void detach_AimNews_LinkedClickeds(AimNews_LinkedClicked entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Link = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_LinkedClicked")]
	public partial class AimNews_LinkedClicked : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID_FK;
		
		private int _LinkID_FK;
		
		private int _Count;
		
		private EntityRef<AimNews_Link> _AimNews_Link;
		
		private EntityRef<AimNews_Log> _AimNews_Log;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogID_FKChanging(int value);
    partial void OnLogID_FKChanged();
    partial void OnLinkID_FKChanging(int value);
    partial void OnLinkID_FKChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    #endregion
		
		public AimNews_LinkedClicked()
		{
			this._AimNews_Link = default(EntityRef<AimNews_Link>);
			this._AimNews_Log = default(EntityRef<AimNews_Log>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LogID_FK
		{
			get
			{
				return this._LogID_FK;
			}
			set
			{
				if ((this._LogID_FK != value))
				{
					if (this._AimNews_Log.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogID_FKChanging(value);
					this.SendPropertyChanging();
					this._LogID_FK = value;
					this.SendPropertyChanged("LogID_FK");
					this.OnLogID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LinkID_FK
		{
			get
			{
				return this._LinkID_FK;
			}
			set
			{
				if ((this._LinkID_FK != value))
				{
					if (this._AimNews_Link.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkID_FKChanging(value);
					this.SendPropertyChanging();
					this._LinkID_FK = value;
					this.SendPropertyChanged("LinkID_FK");
					this.OnLinkID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Link_AimNews_LinkedClicked", Storage="_AimNews_Link", ThisKey="LinkID_FK", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Link AimNews_Link
		{
			get
			{
				return this._AimNews_Link.Entity;
			}
			set
			{
				AimNews_Link previousValue = this._AimNews_Link.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Link.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Link.Entity = null;
						previousValue.AimNews_LinkedClickeds.Remove(this);
					}
					this._AimNews_Link.Entity = value;
					if ((value != null))
					{
						value.AimNews_LinkedClickeds.Add(this);
						this._LinkID_FK = value.ID;
					}
					else
					{
						this._LinkID_FK = default(int);
					}
					this.SendPropertyChanged("AimNews_Link");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Log_AimNews_LinkedClicked", Storage="_AimNews_Log", ThisKey="LogID_FK", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Log AimNews_Log
		{
			get
			{
				return this._AimNews_Log.Entity;
			}
			set
			{
				AimNews_Log previousValue = this._AimNews_Log.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Log.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Log.Entity = null;
						previousValue.AimNews_LinkedClickeds.Remove(this);
					}
					this._AimNews_Log.Entity = value;
					if ((value != null))
					{
						value.AimNews_LinkedClickeds.Add(this);
						this._LogID_FK = value.ID;
					}
					else
					{
						this._LogID_FK = default(int);
					}
					this.SendPropertyChanged("AimNews_Log");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Log")]
	public partial class AimNews_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _HistoryID;
		
		private int _UserID;
		
		private string _MailAdress;
		
		private bool _isOpened;
		
		private bool _isError;
		
		private string _ErrorMessage;
		
		private System.DateTime _DateTime;
		
		private System.Nullable<System.DateTime> _openDate;
		
		private EntitySet<AimNews_LinkedClicked> _AimNews_LinkedClickeds;
		
		private EntityRef<AimNews_History> _AimNews_History;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMailAdressChanging(string value);
    partial void OnMailAdressChanged();
    partial void OnisOpenedChanging(bool value);
    partial void OnisOpenedChanged();
    partial void OnisErrorChanging(bool value);
    partial void OnisErrorChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnopenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnopenDateChanged();
    #endregion
		
		public AimNews_Log()
		{
			this._AimNews_LinkedClickeds = new EntitySet<AimNews_LinkedClicked>(new Action<AimNews_LinkedClicked>(this.attach_AimNews_LinkedClickeds), new Action<AimNews_LinkedClicked>(this.detach_AimNews_LinkedClickeds));
			this._AimNews_History = default(EntityRef<AimNews_History>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", DbType="Int NOT NULL")]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					if (this._AimNews_History.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAdress", DbType="NVarChar(100)")]
		public string MailAdress
		{
			get
			{
				return this._MailAdress;
			}
			set
			{
				if ((this._MailAdress != value))
				{
					this.OnMailAdressChanging(value);
					this.SendPropertyChanging();
					this._MailAdress = value;
					this.SendPropertyChanged("MailAdress");
					this.OnMailAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOpened", DbType="Bit NOT NULL")]
		public bool isOpened
		{
			get
			{
				return this._isOpened;
			}
			set
			{
				if ((this._isOpened != value))
				{
					this.OnisOpenedChanging(value);
					this.SendPropertyChanging();
					this._isOpened = value;
					this.SendPropertyChanged("isOpened");
					this.OnisOpenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isError", DbType="Bit NOT NULL")]
		public bool isError
		{
			get
			{
				return this._isError;
			}
			set
			{
				if ((this._isError != value))
				{
					this.OnisErrorChanging(value);
					this.SendPropertyChanging();
					this._isError = value;
					this.SendPropertyChanged("isError");
					this.OnisErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> openDate
		{
			get
			{
				return this._openDate;
			}
			set
			{
				if ((this._openDate != value))
				{
					this.OnopenDateChanging(value);
					this.SendPropertyChanging();
					this._openDate = value;
					this.SendPropertyChanged("openDate");
					this.OnopenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Log_AimNews_LinkedClicked", Storage="_AimNews_LinkedClickeds", ThisKey="ID", OtherKey="LogID_FK")]
		public EntitySet<AimNews_LinkedClicked> AimNews_LinkedClickeds
		{
			get
			{
				return this._AimNews_LinkedClickeds;
			}
			set
			{
				this._AimNews_LinkedClickeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_History_AimNews_Log", Storage="_AimNews_History", ThisKey="HistoryID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_History AimNews_History
		{
			get
			{
				return this._AimNews_History.Entity;
			}
			set
			{
				AimNews_History previousValue = this._AimNews_History.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_History.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_History.Entity = null;
						previousValue.AimNews_Logs.Remove(this);
					}
					this._AimNews_History.Entity = value;
					if ((value != null))
					{
						value.AimNews_Logs.Add(this);
						this._HistoryID = value.ID;
					}
					else
					{
						this._HistoryID = default(int);
					}
					this.SendPropertyChanged("AimNews_History");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_LinkedClickeds(AimNews_LinkedClicked entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Log = this;
		}
		
		private void detach_AimNews_LinkedClickeds(AimNews_LinkedClicked entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Log = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Mail")]
	public partial class AimNews_Mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AimNewsID;
		
		private string _MailKey;
		
		private string _Header;
		
		private string _MailContent;
		
		private string _FromMail;
		
		private string _FromName;
		
		private System.Nullable<System.DateTime> _LastSendDate;
		
		private System.Nullable<bool> _isScheduled;
		
		private string _TestMailRecepient;
		
		private bool _hasWebLink;
		
		private bool _hasUnregisterLink;
		
		private string _UnregisterText;
		
		private EntitySet<AimNews_MailGroup> _AimNews_MailGroups;
		
		private EntitySet<AimNews_History> _AimNews_Histories;
		
		private EntityRef<AimNews_AimNew> _AimNews_AimNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAimNewsIDChanging(int value);
    partial void OnAimNewsIDChanged();
    partial void OnMailKeyChanging(string value);
    partial void OnMailKeyChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnMailContentChanging(string value);
    partial void OnMailContentChanged();
    partial void OnFromMailChanging(string value);
    partial void OnFromMailChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnLastSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSendDateChanged();
    partial void OnisScheduledChanging(System.Nullable<bool> value);
    partial void OnisScheduledChanged();
    partial void OnTestMailRecepientChanging(string value);
    partial void OnTestMailRecepientChanged();
    partial void OnhasWebLinkChanging(bool value);
    partial void OnhasWebLinkChanged();
    partial void OnhasUnregisterLinkChanging(bool value);
    partial void OnhasUnregisterLinkChanged();
    partial void OnUnregisterTextChanging(string value);
    partial void OnUnregisterTextChanged();
    #endregion
		
		public AimNews_Mail()
		{
			this._AimNews_MailGroups = new EntitySet<AimNews_MailGroup>(new Action<AimNews_MailGroup>(this.attach_AimNews_MailGroups), new Action<AimNews_MailGroup>(this.detach_AimNews_MailGroups));
			this._AimNews_Histories = new EntitySet<AimNews_History>(new Action<AimNews_History>(this.attach_AimNews_Histories), new Action<AimNews_History>(this.detach_AimNews_Histories));
			this._AimNews_AimNew = default(EntityRef<AimNews_AimNew>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimNewsID", DbType="Int NOT NULL")]
		public int AimNewsID
		{
			get
			{
				return this._AimNewsID;
			}
			set
			{
				if ((this._AimNewsID != value))
				{
					if (this._AimNews_AimNew.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimNewsIDChanging(value);
					this.SendPropertyChanging();
					this._AimNewsID = value;
					this.SendPropertyChanged("AimNewsID");
					this.OnAimNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailKey", DbType="NVarChar(12)")]
		public string MailKey
		{
			get
			{
				return this._MailKey;
			}
			set
			{
				if ((this._MailKey != value))
				{
					this.OnMailKeyChanging(value);
					this.SendPropertyChanging();
					this._MailKey = value;
					this.SendPropertyChanged("MailKey");
					this.OnMailKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(50)")]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailContent", DbType="NVarChar(MAX)")]
		public string MailContent
		{
			get
			{
				return this._MailContent;
			}
			set
			{
				if ((this._MailContent != value))
				{
					this.OnMailContentChanging(value);
					this.SendPropertyChanging();
					this._MailContent = value;
					this.SendPropertyChanged("MailContent");
					this.OnMailContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMail", DbType="NVarChar(200)")]
		public string FromMail
		{
			get
			{
				return this._FromMail;
			}
			set
			{
				if ((this._FromMail != value))
				{
					this.OnFromMailChanging(value);
					this.SendPropertyChanging();
					this._FromMail = value;
					this.SendPropertyChanged("FromMail");
					this.OnFromMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="NVarChar(200)")]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this.OnFromNameChanging(value);
					this.SendPropertyChanging();
					this._FromName = value;
					this.SendPropertyChanged("FromName");
					this.OnFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSendDate
		{
			get
			{
				return this._LastSendDate;
			}
			set
			{
				if ((this._LastSendDate != value))
				{
					this.OnLastSendDateChanging(value);
					this.SendPropertyChanging();
					this._LastSendDate = value;
					this.SendPropertyChanged("LastSendDate");
					this.OnLastSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isScheduled", DbType="Bit")]
		public System.Nullable<bool> isScheduled
		{
			get
			{
				return this._isScheduled;
			}
			set
			{
				if ((this._isScheduled != value))
				{
					this.OnisScheduledChanging(value);
					this.SendPropertyChanging();
					this._isScheduled = value;
					this.SendPropertyChanged("isScheduled");
					this.OnisScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestMailRecepient", DbType="NVarChar(100)")]
		public string TestMailRecepient
		{
			get
			{
				return this._TestMailRecepient;
			}
			set
			{
				if ((this._TestMailRecepient != value))
				{
					this.OnTestMailRecepientChanging(value);
					this.SendPropertyChanging();
					this._TestMailRecepient = value;
					this.SendPropertyChanged("TestMailRecepient");
					this.OnTestMailRecepientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasWebLink", DbType="Bit NOT NULL")]
		public bool hasWebLink
		{
			get
			{
				return this._hasWebLink;
			}
			set
			{
				if ((this._hasWebLink != value))
				{
					this.OnhasWebLinkChanging(value);
					this.SendPropertyChanging();
					this._hasWebLink = value;
					this.SendPropertyChanged("hasWebLink");
					this.OnhasWebLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasUnregisterLink", DbType="Bit NOT NULL")]
		public bool hasUnregisterLink
		{
			get
			{
				return this._hasUnregisterLink;
			}
			set
			{
				if ((this._hasUnregisterLink != value))
				{
					this.OnhasUnregisterLinkChanging(value);
					this.SendPropertyChanging();
					this._hasUnregisterLink = value;
					this.SendPropertyChanged("hasUnregisterLink");
					this.OnhasUnregisterLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnregisterText", DbType="NVarChar(255)")]
		public string UnregisterText
		{
			get
			{
				return this._UnregisterText;
			}
			set
			{
				if ((this._UnregisterText != value))
				{
					this.OnUnregisterTextChanging(value);
					this.SendPropertyChanging();
					this._UnregisterText = value;
					this.SendPropertyChanged("UnregisterText");
					this.OnUnregisterTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Mail_AimNews_MailGroup", Storage="_AimNews_MailGroups", ThisKey="ID", OtherKey="MailID")]
		public EntitySet<AimNews_MailGroup> AimNews_MailGroups
		{
			get
			{
				return this._AimNews_MailGroups;
			}
			set
			{
				this._AimNews_MailGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Mail_AimNews_History", Storage="_AimNews_Histories", ThisKey="ID", OtherKey="MailID")]
		public EntitySet<AimNews_History> AimNews_Histories
		{
			get
			{
				return this._AimNews_Histories;
			}
			set
			{
				this._AimNews_Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_Mail", Storage="_AimNews_AimNew", ThisKey="AimNewsID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_AimNew AimNews_AimNew
		{
			get
			{
				return this._AimNews_AimNew.Entity;
			}
			set
			{
				AimNews_AimNew previousValue = this._AimNews_AimNew.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_AimNew.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_AimNew.Entity = null;
						previousValue.AimNews_Mails.Remove(this);
					}
					this._AimNews_AimNew.Entity = value;
					if ((value != null))
					{
						value.AimNews_Mails.Add(this);
						this._AimNewsID = value.ID;
					}
					else
					{
						this._AimNewsID = default(int);
					}
					this.SendPropertyChanged("AimNews_AimNew");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_MailGroups(AimNews_MailGroup entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Mail = this;
		}
		
		private void detach_AimNews_MailGroups(AimNews_MailGroup entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Mail = null;
		}
		
		private void attach_AimNews_Histories(AimNews_History entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Mail = this;
		}
		
		private void detach_AimNews_Histories(AimNews_History entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Mail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Users")]
	public partial class AimNews_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AimNewsID;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Company;
		
		private string _Telephone;
		
		private string _Mobile;
		
		private string _Fax;
		
		private string _Address;
		
		private string _Postal;
		
		private string _City;
		
		private string _Country;
		
		private string _Orgnr;
		
		private System.Nullable<bool> _Unregistered;
		
		private EntitySet<AimNews_GroupUser> _AimNews_GroupUsers;
		
		private EntityRef<AimNews_AimNew> _AimNews_AimNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAimNewsIDChanging(int value);
    partial void OnAimNewsIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostalChanging(string value);
    partial void OnPostalChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnOrgnrChanging(string value);
    partial void OnOrgnrChanged();
    partial void OnUnregisteredChanging(System.Nullable<bool> value);
    partial void OnUnregisteredChanged();
    #endregion
		
		public AimNews_User()
		{
			this._AimNews_GroupUsers = new EntitySet<AimNews_GroupUser>(new Action<AimNews_GroupUser>(this.attach_AimNews_GroupUsers), new Action<AimNews_GroupUser>(this.detach_AimNews_GroupUsers));
			this._AimNews_AimNew = default(EntityRef<AimNews_AimNew>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimNewsID", DbType="Int NOT NULL")]
		public int AimNewsID
		{
			get
			{
				return this._AimNewsID;
			}
			set
			{
				if ((this._AimNewsID != value))
				{
					if (this._AimNews_AimNew.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimNewsIDChanging(value);
					this.SendPropertyChanging();
					this._AimNewsID = value;
					this.SendPropertyChanged("AimNewsID");
					this.OnAimNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(100)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal", DbType="NVarChar(50)")]
		public string Postal
		{
			get
			{
				return this._Postal;
			}
			set
			{
				if ((this._Postal != value))
				{
					this.OnPostalChanging(value);
					this.SendPropertyChanging();
					this._Postal = value;
					this.SendPropertyChanged("Postal");
					this.OnPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orgnr", DbType="NVarChar(100)")]
		public string Orgnr
		{
			get
			{
				return this._Orgnr;
			}
			set
			{
				if ((this._Orgnr != value))
				{
					this.OnOrgnrChanging(value);
					this.SendPropertyChanging();
					this._Orgnr = value;
					this.SendPropertyChanged("Orgnr");
					this.OnOrgnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unregistered", DbType="Bit")]
		public System.Nullable<bool> Unregistered
		{
			get
			{
				return this._Unregistered;
			}
			set
			{
				if ((this._Unregistered != value))
				{
					this.OnUnregisteredChanging(value);
					this.SendPropertyChanging();
					this._Unregistered = value;
					this.SendPropertyChanged("Unregistered");
					this.OnUnregisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_User_AimNews_GroupUser", Storage="_AimNews_GroupUsers", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<AimNews_GroupUser> AimNews_GroupUsers
		{
			get
			{
				return this._AimNews_GroupUsers;
			}
			set
			{
				this._AimNews_GroupUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_User", Storage="_AimNews_AimNew", ThisKey="AimNewsID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_AimNew AimNews_AimNew
		{
			get
			{
				return this._AimNews_AimNew.Entity;
			}
			set
			{
				AimNews_AimNew previousValue = this._AimNews_AimNew.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_AimNew.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_AimNew.Entity = null;
						previousValue.AimNews_Users.Remove(this);
					}
					this._AimNews_AimNew.Entity = value;
					if ((value != null))
					{
						value.AimNews_Users.Add(this);
						this._AimNewsID = value.ID;
					}
					else
					{
						this._AimNewsID = default(int);
					}
					this.SendPropertyChanged("AimNews_AimNew");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_GroupUsers(AimNews_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_User = this;
		}
		
		private void detach_AimNews_GroupUsers(AimNews_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_History")]
	public partial class AimNews_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MailID;
		
		private int _NbrRecipients;
		
		private int _NbrOpens;
		
		private string _ErrorMessage;
		
		private System.DateTime _SendTime;
		
		private bool _hasFinished;
		
		private System.Nullable<int> _NbrDuplicates;
		
		private EntitySet<AimNews_Link> _AimNews_Links;
		
		private EntitySet<AimNews_Log> _AimNews_Logs;
		
		private EntityRef<AimNews_Mail> _AimNews_Mail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMailIDChanging(int value);
    partial void OnMailIDChanged();
    partial void OnNbrRecipientsChanging(int value);
    partial void OnNbrRecipientsChanged();
    partial void OnNbrOpensChanging(int value);
    partial void OnNbrOpensChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnSendTimeChanging(System.DateTime value);
    partial void OnSendTimeChanged();
    partial void OnhasFinishedChanging(bool value);
    partial void OnhasFinishedChanged();
    partial void OnNbrDuplicatesChanging(System.Nullable<int> value);
    partial void OnNbrDuplicatesChanged();
    #endregion
		
		public AimNews_History()
		{
			this._AimNews_Links = new EntitySet<AimNews_Link>(new Action<AimNews_Link>(this.attach_AimNews_Links), new Action<AimNews_Link>(this.detach_AimNews_Links));
			this._AimNews_Logs = new EntitySet<AimNews_Log>(new Action<AimNews_Log>(this.attach_AimNews_Logs), new Action<AimNews_Log>(this.detach_AimNews_Logs));
			this._AimNews_Mail = default(EntityRef<AimNews_Mail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailID", DbType="Int NOT NULL")]
		public int MailID
		{
			get
			{
				return this._MailID;
			}
			set
			{
				if ((this._MailID != value))
				{
					if (this._AimNews_Mail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailIDChanging(value);
					this.SendPropertyChanging();
					this._MailID = value;
					this.SendPropertyChanged("MailID");
					this.OnMailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbrRecipients", DbType="Int NOT NULL")]
		public int NbrRecipients
		{
			get
			{
				return this._NbrRecipients;
			}
			set
			{
				if ((this._NbrRecipients != value))
				{
					this.OnNbrRecipientsChanging(value);
					this.SendPropertyChanging();
					this._NbrRecipients = value;
					this.SendPropertyChanged("NbrRecipients");
					this.OnNbrRecipientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbrOpens", DbType="Int NOT NULL")]
		public int NbrOpens
		{
			get
			{
				return this._NbrOpens;
			}
			set
			{
				if ((this._NbrOpens != value))
				{
					this.OnNbrOpensChanging(value);
					this.SendPropertyChanging();
					this._NbrOpens = value;
					this.SendPropertyChanged("NbrOpens");
					this.OnNbrOpensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendTime", DbType="DateTime NOT NULL")]
		public System.DateTime SendTime
		{
			get
			{
				return this._SendTime;
			}
			set
			{
				if ((this._SendTime != value))
				{
					this.OnSendTimeChanging(value);
					this.SendPropertyChanging();
					this._SendTime = value;
					this.SendPropertyChanged("SendTime");
					this.OnSendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasFinished", DbType="Bit NOT NULL")]
		public bool hasFinished
		{
			get
			{
				return this._hasFinished;
			}
			set
			{
				if ((this._hasFinished != value))
				{
					this.OnhasFinishedChanging(value);
					this.SendPropertyChanging();
					this._hasFinished = value;
					this.SendPropertyChanged("hasFinished");
					this.OnhasFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbrDuplicates", DbType="Int")]
		public System.Nullable<int> NbrDuplicates
		{
			get
			{
				return this._NbrDuplicates;
			}
			set
			{
				if ((this._NbrDuplicates != value))
				{
					this.OnNbrDuplicatesChanging(value);
					this.SendPropertyChanging();
					this._NbrDuplicates = value;
					this.SendPropertyChanged("NbrDuplicates");
					this.OnNbrDuplicatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_History_AimNews_Link", Storage="_AimNews_Links", ThisKey="ID", OtherKey="HistoryID_FK")]
		public EntitySet<AimNews_Link> AimNews_Links
		{
			get
			{
				return this._AimNews_Links;
			}
			set
			{
				this._AimNews_Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_History_AimNews_Log", Storage="_AimNews_Logs", ThisKey="ID", OtherKey="HistoryID")]
		public EntitySet<AimNews_Log> AimNews_Logs
		{
			get
			{
				return this._AimNews_Logs;
			}
			set
			{
				this._AimNews_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Mail_AimNews_History", Storage="_AimNews_Mail", ThisKey="MailID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Mail AimNews_Mail
		{
			get
			{
				return this._AimNews_Mail.Entity;
			}
			set
			{
				AimNews_Mail previousValue = this._AimNews_Mail.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Mail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Mail.Entity = null;
						previousValue.AimNews_Histories.Remove(this);
					}
					this._AimNews_Mail.Entity = value;
					if ((value != null))
					{
						value.AimNews_Histories.Add(this);
						this._MailID = value.ID;
					}
					else
					{
						this._MailID = default(int);
					}
					this.SendPropertyChanged("AimNews_Mail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_Links(AimNews_Link entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_History = this;
		}
		
		private void detach_AimNews_Links(AimNews_Link entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_History = null;
		}
		
		private void attach_AimNews_Logs(AimNews_Log entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_History = this;
		}
		
		private void detach_AimNews_Logs(AimNews_Log entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_History = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_History_X_Group")]
	public partial class AimNews_History_X_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _HistoryID;
		
		private int _GroupID;
		
		private EntityRef<AimNews_Group> _AimNews_Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    #endregion
		
		public AimNews_History_X_Group()
		{
			this._AimNews_Group = default(EntityRef<AimNews_Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", DbType="Int NOT NULL")]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._AimNews_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Group_AimNews_History_X_Group", Storage="_AimNews_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Group AimNews_Group
		{
			get
			{
				return this._AimNews_Group.Entity;
			}
			set
			{
				AimNews_Group previousValue = this._AimNews_Group.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Group.Entity = null;
						previousValue.AimNews_History_X_Groups.Remove(this);
					}
					this._AimNews_Group.Entity = value;
					if ((value != null))
					{
						value.AimNews_History_X_Groups.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("AimNews_Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

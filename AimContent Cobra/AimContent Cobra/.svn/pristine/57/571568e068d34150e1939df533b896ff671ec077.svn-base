#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIM.Business
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aimit_Aim")]
	public partial class DataObjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertForm_ExternalConnection(Form_ExternalConnection instance);
    partial void UpdateForm_ExternalConnection(Form_ExternalConnection instance);
    partial void DeleteForm_ExternalConnection(Form_ExternalConnection instance);
    partial void InsertVacation(Vacation instance);
    partial void UpdateVacation(Vacation instance);
    partial void DeleteVacation(Vacation instance);
    partial void InsertForm_ExternalConnections_Property(Form_ExternalConnections_Property instance);
    partial void UpdateForm_ExternalConnections_Property(Form_ExternalConnections_Property instance);
    partial void DeleteForm_ExternalConnections_Property(Form_ExternalConnections_Property instance);
    partial void InsertForm_ExternalConnections_ReturnProperty(Form_ExternalConnections_ReturnProperty instance);
    partial void UpdateForm_ExternalConnections_ReturnProperty(Form_ExternalConnections_ReturnProperty instance);
    partial void DeleteForm_ExternalConnections_ReturnProperty(Form_ExternalConnections_ReturnProperty instance);
    partial void InsertForm_ExternalConnections_ReturnValue(Form_ExternalConnections_ReturnValue instance);
    partial void UpdateForm_ExternalConnections_ReturnValue(Form_ExternalConnections_ReturnValue instance);
    partial void DeleteForm_ExternalConnections_ReturnValue(Form_ExternalConnections_ReturnValue instance);
    partial void InsertForm_ExternalConnections_Value(Form_ExternalConnections_Value instance);
    partial void UpdateForm_ExternalConnections_Value(Form_ExternalConnections_Value instance);
    partial void DeleteForm_ExternalConnections_Value(Form_ExternalConnections_Value instance);
    partial void InsertImageFrontPage(ImageFrontPage instance);
    partial void UpdateImageFrontPage(ImageFrontPage instance);
    partial void DeleteImageFrontPage(ImageFrontPage instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertAdminLanguage(AdminLanguage instance);
    partial void UpdateAdminLanguage(AdminLanguage instance);
    partial void DeleteAdminLanguage(AdminLanguage instance);
    partial void InsertAdminRole(AdminRole instance);
    partial void UpdateAdminRole(AdminRole instance);
    partial void DeleteAdminRole(AdminRole instance);
    partial void InsertAim_Dropdown__Area(Aim_Dropdown__Area instance);
    partial void UpdateAim_Dropdown__Area(Aim_Dropdown__Area instance);
    partial void DeleteAim_Dropdown__Area(Aim_Dropdown__Area instance);
    partial void InsertAim_Dropdown_Connection(Aim_Dropdown_Connection instance);
    partial void UpdateAim_Dropdown_Connection(Aim_Dropdown_Connection instance);
    partial void DeleteAim_Dropdown_Connection(Aim_Dropdown_Connection instance);
    partial void InsertAim_Dropdown_Page(Aim_Dropdown_Page instance);
    partial void UpdateAim_Dropdown_Page(Aim_Dropdown_Page instance);
    partial void DeleteAim_Dropdown_Page(Aim_Dropdown_Page instance);
    partial void InsertAim_Dropdown_PageConnection(Aim_Dropdown_PageConnection instance);
    partial void UpdateAim_Dropdown_PageConnection(Aim_Dropdown_PageConnection instance);
    partial void DeleteAim_Dropdown_PageConnection(Aim_Dropdown_PageConnection instance);
    partial void InsertAim_Dropdown_Value(Aim_Dropdown_Value instance);
    partial void UpdateAim_Dropdown_Value(Aim_Dropdown_Value instance);
    partial void DeleteAim_Dropdown_Value(Aim_Dropdown_Value instance);
    partial void InsertAimAds_Direction(AimAds_Direction instance);
    partial void UpdateAimAds_Direction(AimAds_Direction instance);
    partial void DeleteAimAds_Direction(AimAds_Direction instance);
    partial void InsertAimAds_Group(AimAds_Group instance);
    partial void UpdateAimAds_Group(AimAds_Group instance);
    partial void DeleteAimAds_Group(AimAds_Group instance);
    partial void InsertAimAds_Group1(AimAds_Group1 instance);
    partial void UpdateAimAds_Group1(AimAds_Group1 instance);
    partial void DeleteAimAds_Group1(AimAds_Group1 instance);
    partial void InsertAimAds_Item(AimAds_Item instance);
    partial void UpdateAimAds_Item(AimAds_Item instance);
    partial void DeleteAimAds_Item(AimAds_Item instance);
    partial void InsertAimNews_AimNew(AimNews_AimNew instance);
    partial void UpdateAimNews_AimNew(AimNews_AimNew instance);
    partial void DeleteAimNews_AimNew(AimNews_AimNew instance);
    partial void InsertAimNews_Group(AimNews_Group instance);
    partial void UpdateAimNews_Group(AimNews_Group instance);
    partial void DeleteAimNews_Group(AimNews_Group instance);
    partial void InsertAimNews_GroupUser(AimNews_GroupUser instance);
    partial void UpdateAimNews_GroupUser(AimNews_GroupUser instance);
    partial void DeleteAimNews_GroupUser(AimNews_GroupUser instance);
    partial void InsertAimNews_History(AimNews_History instance);
    partial void UpdateAimNews_History(AimNews_History instance);
    partial void DeleteAimNews_History(AimNews_History instance);
    partial void InsertAimNews_LinkedClicked(AimNews_LinkedClicked instance);
    partial void UpdateAimNews_LinkedClicked(AimNews_LinkedClicked instance);
    partial void DeleteAimNews_LinkedClicked(AimNews_LinkedClicked instance);
    partial void InsertAimNews_Link(AimNews_Link instance);
    partial void UpdateAimNews_Link(AimNews_Link instance);
    partial void DeleteAimNews_Link(AimNews_Link instance);
    partial void InsertAimNews_Log(AimNews_Log instance);
    partial void UpdateAimNews_Log(AimNews_Log instance);
    partial void DeleteAimNews_Log(AimNews_Log instance);
    partial void InsertAimNews_Mail(AimNews_Mail instance);
    partial void UpdateAimNews_Mail(AimNews_Mail instance);
    partial void DeleteAimNews_Mail(AimNews_Mail instance);
    partial void InsertAimNews_User(AimNews_User instance);
    partial void UpdateAimNews_User(AimNews_User instance);
    partial void DeleteAimNews_User(AimNews_User instance);
    partial void InsertAimScrum_Iteration(AimScrum_Iteration instance);
    partial void UpdateAimScrum_Iteration(AimScrum_Iteration instance);
    partial void DeleteAimScrum_Iteration(AimScrum_Iteration instance);
    partial void InsertAimScrum_Project(AimScrum_Project instance);
    partial void UpdateAimScrum_Project(AimScrum_Project instance);
    partial void DeleteAimScrum_Project(AimScrum_Project instance);
    partial void InsertAimScrum_Status(AimScrum_Status instance);
    partial void UpdateAimScrum_Status(AimScrum_Status instance);
    partial void DeleteAimScrum_Status(AimScrum_Status instance);
    partial void InsertAimScrum_Task(AimScrum_Task instance);
    partial void UpdateAimScrum_Task(AimScrum_Task instance);
    partial void DeleteAimScrum_Task(AimScrum_Task instance);
    partial void InsertAimWalk_Group(AimWalk_Group instance);
    partial void UpdateAimWalk_Group(AimWalk_Group instance);
    partial void DeleteAimWalk_Group(AimWalk_Group instance);
    partial void InsertAimWalk_Step(AimWalk_Step instance);
    partial void UpdateAimWalk_Step(AimWalk_Step instance);
    partial void DeleteAimWalk_Step(AimWalk_Step instance);
    partial void InsertAimWalk_UsersInCompany(AimWalk_UsersInCompany instance);
    partial void UpdateAimWalk_UsersInCompany(AimWalk_UsersInCompany instance);
    partial void DeleteAimWalk_UsersInCompany(AimWalk_UsersInCompany instance);
    partial void InsertAlbumPhoto(AlbumPhoto instance);
    partial void UpdateAlbumPhoto(AlbumPhoto instance);
    partial void DeleteAlbumPhoto(AlbumPhoto instance);
    partial void InsertAlbumPhotoCategory(AlbumPhotoCategory instance);
    partial void UpdateAlbumPhotoCategory(AlbumPhotoCategory instance);
    partial void DeleteAlbumPhotoCategory(AlbumPhotoCategory instance);
    partial void InsertAlbumPhotoInRole(AlbumPhotoInRole instance);
    partial void UpdateAlbumPhotoInRole(AlbumPhotoInRole instance);
    partial void DeleteAlbumPhotoInRole(AlbumPhotoInRole instance);
    partial void InsertArticles_AimFor2022(Articles_AimFor2022 instance);
    partial void UpdateArticles_AimFor2022(Articles_AimFor2022 instance);
    partial void DeleteArticles_AimFor2022(Articles_AimFor2022 instance);
    partial void InsertArticles_FIVE_Symbol(Articles_FIVE_Symbol instance);
    partial void UpdateArticles_FIVE_Symbol(Articles_FIVE_Symbol instance);
    partial void DeleteArticles_FIVE_Symbol(Articles_FIVE_Symbol instance);
    partial void InsertArticles_GlobalFashion_AdComment(Articles_GlobalFashion_AdComment instance);
    partial void UpdateArticles_GlobalFashion_AdComment(Articles_GlobalFashion_AdComment instance);
    partial void DeleteArticles_GlobalFashion_AdComment(Articles_GlobalFashion_AdComment instance);
    partial void InsertArticles_GlobalFashion_Ad(Articles_GlobalFashion_Ad instance);
    partial void UpdateArticles_GlobalFashion_Ad(Articles_GlobalFashion_Ad instance);
    partial void DeleteArticles_GlobalFashion_Ad(Articles_GlobalFashion_Ad instance);
    partial void InsertArticles_GlobalFashion_Common(Articles_GlobalFashion_Common instance);
    partial void UpdateArticles_GlobalFashion_Common(Articles_GlobalFashion_Common instance);
    partial void DeleteArticles_GlobalFashion_Common(Articles_GlobalFashion_Common instance);
    partial void InsertArticles_GlobalFashion_ListName(Articles_GlobalFashion_ListName instance);
    partial void UpdateArticles_GlobalFashion_ListName(Articles_GlobalFashion_ListName instance);
    partial void DeleteArticles_GlobalFashion_ListName(Articles_GlobalFashion_ListName instance);
    partial void InsertArticles_OrderHead_Deleted(Articles_OrderHead_Deleted instance);
    partial void UpdateArticles_OrderHead_Deleted(Articles_OrderHead_Deleted instance);
    partial void DeleteArticles_OrderHead_Deleted(Articles_OrderHead_Deleted instance);
    partial void InsertArticles_Property(Articles_Property instance);
    partial void UpdateArticles_Property(Articles_Property instance);
    partial void DeleteArticles_Property(Articles_Property instance);
    partial void InsertArticles_Stavdal_ArticleFile(Articles_Stavdal_ArticleFile instance);
    partial void UpdateArticles_Stavdal_ArticleFile(Articles_Stavdal_ArticleFile instance);
    partial void DeleteArticles_Stavdal_ArticleFile(Articles_Stavdal_ArticleFile instance);
    partial void InsertArticles_Stavdal_Category(Articles_Stavdal_Category instance);
    partial void UpdateArticles_Stavdal_Category(Articles_Stavdal_Category instance);
    partial void DeleteArticles_Stavdal_Category(Articles_Stavdal_Category instance);
    partial void InsertArticles_Tjuge22(Articles_Tjuge22 instance);
    partial void UpdateArticles_Tjuge22(Articles_Tjuge22 instance);
    partial void DeleteArticles_Tjuge22(Articles_Tjuge22 instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertBooking_GSPublicItems_Resource(Booking_GSPublicItems_Resource instance);
    partial void UpdateBooking_GSPublicItems_Resource(Booking_GSPublicItems_Resource instance);
    partial void DeleteBooking_GSPublicItems_Resource(Booking_GSPublicItems_Resource instance);
    partial void InsertBooking_Object_GSPublicItem(Booking_Object_GSPublicItem instance);
    partial void UpdateBooking_Object_GSPublicItem(Booking_Object_GSPublicItem instance);
    partial void DeleteBooking_Object_GSPublicItem(Booking_Object_GSPublicItem instance);
    partial void InsertBooking_X_NewsletterGroup(Booking_X_NewsletterGroup instance);
    partial void UpdateBooking_X_NewsletterGroup(Booking_X_NewsletterGroup instance);
    partial void DeleteBooking_X_NewsletterGroup(Booking_X_NewsletterGroup instance);
    partial void InsertBookingCategory(BookingCategory instance);
    partial void UpdateBookingCategory(BookingCategory instance);
    partial void DeleteBookingCategory(BookingCategory instance);
    partial void InsertBookingConfig(BookingConfig instance);
    partial void UpdateBookingConfig(BookingConfig instance);
    partial void DeleteBookingConfig(BookingConfig instance);
    partial void InsertBookingDay(BookingDay instance);
    partial void UpdateBookingDay(BookingDay instance);
    partial void DeleteBookingDay(BookingDay instance);
    partial void InsertBookingHoliday(BookingHoliday instance);
    partial void UpdateBookingHoliday(BookingHoliday instance);
    partial void DeleteBookingHoliday(BookingHoliday instance);
    partial void InsertBookingObject(BookingObject instance);
    partial void UpdateBookingObject(BookingObject instance);
    partial void DeleteBookingObject(BookingObject instance);
    partial void InsertBookingPreference(BookingPreference instance);
    partial void UpdateBookingPreference(BookingPreference instance);
    partial void DeleteBookingPreference(BookingPreference instance);
    partial void InsertBookingResource(BookingResource instance);
    partial void UpdateBookingResource(BookingResource instance);
    partial void DeleteBookingResource(BookingResource instance);
    partial void InsertBookingResourceHoliday(BookingResourceHoliday instance);
    partial void UpdateBookingResourceHoliday(BookingResourceHoliday instance);
    partial void DeleteBookingResourceHoliday(BookingResourceHoliday instance);
    partial void InsertBookingResourceSchema(BookingResourceSchema instance);
    partial void UpdateBookingResourceSchema(BookingResourceSchema instance);
    partial void DeleteBookingResourceSchema(BookingResourceSchema instance);
    partial void InsertBookingSchema(BookingSchema instance);
    partial void UpdateBookingSchema(BookingSchema instance);
    partial void DeleteBookingSchema(BookingSchema instance);
    partial void InsertBookingTime(BookingTime instance);
    partial void UpdateBookingTime(BookingTime instance);
    partial void DeleteBookingTime(BookingTime instance);
    partial void InsertBookingWebUser(BookingWebUser instance);
    partial void UpdateBookingWebUser(BookingWebUser instance);
    partial void DeleteBookingWebUser(BookingWebUser instance);
    partial void InsertCalendar_Event_Category(Calendar_Event_Category instance);
    partial void UpdateCalendar_Event_Category(Calendar_Event_Category instance);
    partial void DeleteCalendar_Event_Category(Calendar_Event_Category instance);
    partial void InsertCalendar_Event(Calendar_Event instance);
    partial void UpdateCalendar_Event(Calendar_Event instance);
    partial void DeleteCalendar_Event(Calendar_Event instance);
    partial void InsertCG_Article_Info(CG_Article_Info instance);
    partial void UpdateCG_Article_Info(CG_Article_Info instance);
    partial void DeleteCG_Article_Info(CG_Article_Info instance);
    partial void InsertCG_OrderHead(CG_OrderHead instance);
    partial void UpdateCG_OrderHead(CG_OrderHead instance);
    partial void DeleteCG_OrderHead(CG_OrderHead instance);
    partial void InsertConfig(Config instance);
    partial void UpdateConfig(Config instance);
    partial void DeleteConfig(Config instance);
    partial void InsertConnect_Region(Connect_Region instance);
    partial void UpdateConnect_Region(Connect_Region instance);
    partial void DeleteConnect_Region(Connect_Region instance);
    partial void InsertConnect_RegionGroup(Connect_RegionGroup instance);
    partial void UpdateConnect_RegionGroup(Connect_RegionGroup instance);
    partial void DeleteConnect_RegionGroup(Connect_RegionGroup instance);
    partial void InsertConnect_RegionGroupUrl(Connect_RegionGroupUrl instance);
    partial void UpdateConnect_RegionGroupUrl(Connect_RegionGroupUrl instance);
    partial void DeleteConnect_RegionGroupUrl(Connect_RegionGroupUrl instance);
    partial void InsertCRM_Common(CRM_Common instance);
    partial void UpdateCRM_Common(CRM_Common instance);
    partial void DeleteCRM_Common(CRM_Common instance);
    partial void Insertcrm_Customer(crm_Customer instance);
    partial void Updatecrm_Customer(crm_Customer instance);
    partial void Deletecrm_Customer(crm_Customer instance);
    partial void Insertcrm_DevelopmentAssignment(crm_DevelopmentAssignment instance);
    partial void Updatecrm_DevelopmentAssignment(crm_DevelopmentAssignment instance);
    partial void Deletecrm_DevelopmentAssignment(crm_DevelopmentAssignment instance);
    partial void Insertcrm_DevelopmentAssignments_Type(crm_DevelopmentAssignments_Type instance);
    partial void Updatecrm_DevelopmentAssignments_Type(crm_DevelopmentAssignments_Type instance);
    partial void Deletecrm_DevelopmentAssignments_Type(crm_DevelopmentAssignments_Type instance);
    partial void InsertCRM_Filial(CRM_Filial instance);
    partial void UpdateCRM_Filial(CRM_Filial instance);
    partial void DeleteCRM_Filial(CRM_Filial instance);
    partial void InsertCRM_PartnerData(CRM_PartnerData instance);
    partial void UpdateCRM_PartnerData(CRM_PartnerData instance);
    partial void DeleteCRM_PartnerData(CRM_PartnerData instance);
    partial void InsertCRM_PartnerOffer(CRM_PartnerOffer instance);
    partial void UpdateCRM_PartnerOffer(CRM_PartnerOffer instance);
    partial void DeleteCRM_PartnerOffer(CRM_PartnerOffer instance);
    partial void InsertCRM_Path(CRM_Path instance);
    partial void UpdateCRM_Path(CRM_Path instance);
    partial void DeleteCRM_Path(CRM_Path instance);
    partial void Insertcrm_Person(crm_Person instance);
    partial void Updatecrm_Person(crm_Person instance);
    partial void Deletecrm_Person(crm_Person instance);
    partial void Insertcrm_Person_X_PersonProperty(crm_Person_X_PersonProperty instance);
    partial void Updatecrm_Person_X_PersonProperty(crm_Person_X_PersonProperty instance);
    partial void Deletecrm_Person_X_PersonProperty(crm_Person_X_PersonProperty instance);
    partial void InsertCRM_PersonPresentation(CRM_PersonPresentation instance);
    partial void UpdateCRM_PersonPresentation(CRM_PersonPresentation instance);
    partial void DeleteCRM_PersonPresentation(CRM_PersonPresentation instance);
    partial void Insertcrm_PersonProperty(crm_PersonProperty instance);
    partial void Updatecrm_PersonProperty(crm_PersonProperty instance);
    partial void Deletecrm_PersonProperty(crm_PersonProperty instance);
    partial void Insertcrm_staffreport(crm_staffreport instance);
    partial void Updatecrm_staffreport(crm_staffreport instance);
    partial void Deletecrm_staffreport(crm_staffreport instance);
    partial void Insertcrm_staffreport_budget(crm_staffreport_budget instance);
    partial void Updatecrm_staffreport_budget(crm_staffreport_budget instance);
    partial void Deletecrm_staffreport_budget(crm_staffreport_budget instance);
    partial void Insertcrm_staffreport_budgetItem(crm_staffreport_budgetItem instance);
    partial void Updatecrm_staffreport_budgetItem(crm_staffreport_budgetItem instance);
    partial void Deletecrm_staffreport_budgetItem(crm_staffreport_budgetItem instance);
    partial void Insertcrm_staffreport_Customer_X_Report(crm_staffreport_Customer_X_Report instance);
    partial void Updatecrm_staffreport_Customer_X_Report(crm_staffreport_Customer_X_Report instance);
    partial void Deletecrm_staffreport_Customer_X_Report(crm_staffreport_Customer_X_Report instance);
    partial void Insertcrm_staffreport_Report(crm_staffreport_Report instance);
    partial void Updatecrm_staffreport_Report(crm_staffreport_Report instance);
    partial void Deletecrm_staffreport_Report(crm_staffreport_Report instance);
    partial void Insertcrm_staffreport_ReportType(crm_staffreport_ReportType instance);
    partial void Updatecrm_staffreport_ReportType(crm_staffreport_ReportType instance);
    partial void Deletecrm_staffreport_ReportType(crm_staffreport_ReportType instance);
    partial void Insertcrm_tender(crm_tender instance);
    partial void Updatecrm_tender(crm_tender instance);
    partial void Deletecrm_tender(crm_tender instance);
    partial void Insertcrm_tender_consultant(crm_tender_consultant instance);
    partial void Updatecrm_tender_consultant(crm_tender_consultant instance);
    partial void Deletecrm_tender_consultant(crm_tender_consultant instance);
    partial void InsertDearcom_BookingPublicCategory(Dearcom_BookingPublicCategory instance);
    partial void UpdateDearcom_BookingPublicCategory(Dearcom_BookingPublicCategory instance);
    partial void DeleteDearcom_BookingPublicCategory(Dearcom_BookingPublicCategory instance);
    partial void InsertDearcom_BookingPublicItem(Dearcom_BookingPublicItem instance);
    partial void UpdateDearcom_BookingPublicItem(Dearcom_BookingPublicItem instance);
    partial void DeleteDearcom_BookingPublicItem(Dearcom_BookingPublicItem instance);
    partial void InsertDearcom_BookingUserData(Dearcom_BookingUserData instance);
    partial void UpdateDearcom_BookingUserData(Dearcom_BookingUserData instance);
    partial void DeleteDearcom_BookingUserData(Dearcom_BookingUserData instance);
    partial void InsertDocumentArchive(DocumentArchive instance);
    partial void UpdateDocumentArchive(DocumentArchive instance);
    partial void DeleteDocumentArchive(DocumentArchive instance);
    partial void InsertDocumentArchive_X_Site(DocumentArchive_X_Site instance);
    partial void UpdateDocumentArchive_X_Site(DocumentArchive_X_Site instance);
    partial void DeleteDocumentArchive_X_Site(DocumentArchive_X_Site instance);
    partial void InsertDocumentCategory(DocumentCategory instance);
    partial void UpdateDocumentCategory(DocumentCategory instance);
    partial void DeleteDocumentCategory(DocumentCategory instance);
    partial void InsertDocumentCategories_X_aspnet_Role(DocumentCategories_X_aspnet_Role instance);
    partial void UpdateDocumentCategories_X_aspnet_Role(DocumentCategories_X_aspnet_Role instance);
    partial void DeleteDocumentCategories_X_aspnet_Role(DocumentCategories_X_aspnet_Role instance);
    partial void InsertDocumentCategoriesTreeStructure(DocumentCategoriesTreeStructure instance);
    partial void UpdateDocumentCategoriesTreeStructure(DocumentCategoriesTreeStructure instance);
    partial void DeleteDocumentCategoriesTreeStructure(DocumentCategoriesTreeStructure instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertDocuments_X_aspnet_Role(Documents_X_aspnet_Role instance);
    partial void UpdateDocuments_X_aspnet_Role(Documents_X_aspnet_Role instance);
    partial void DeleteDocuments_X_aspnet_Role(Documents_X_aspnet_Role instance);
    partial void Insertdtproperty(dtproperty instance);
    partial void Updatedtproperty(dtproperty instance);
    partial void Deletedtproperty(dtproperty instance);
    partial void InsertErrorLog(ErrorLog instance);
    partial void UpdateErrorLog(ErrorLog instance);
    partial void DeleteErrorLog(ErrorLog instance);
    partial void InsertForm_Alternative(Form_Alternative instance);
    partial void UpdateForm_Alternative(Form_Alternative instance);
    partial void DeleteForm_Alternative(Form_Alternative instance);
    partial void InsertForm_Answer(Form_Answer instance);
    partial void UpdateForm_Answer(Form_Answer instance);
    partial void DeleteForm_Answer(Form_Answer instance);
    partial void InsertForm_Form(Form_Form instance);
    partial void UpdateForm_Form(Form_Form instance);
    partial void DeleteForm_Form(Form_Form instance);
    partial void InsertForm_Mail(Form_Mail instance);
    partial void UpdateForm_Mail(Form_Mail instance);
    partial void DeleteForm_Mail(Form_Mail instance);
    partial void InsertForm_Question(Form_Question instance);
    partial void UpdateForm_Question(Form_Question instance);
    partial void DeleteForm_Question(Form_Question instance);
    partial void InsertForm_Responder(Form_Responder instance);
    partial void UpdateForm_Responder(Form_Responder instance);
    partial void DeleteForm_Responder(Form_Responder instance);
    partial void InsertForm_Section(Form_Section instance);
    partial void UpdateForm_Section(Form_Section instance);
    partial void DeleteForm_Section(Form_Section instance);
    partial void InsertForm_Setting(Form_Setting instance);
    partial void UpdateForm_Setting(Form_Setting instance);
    partial void DeleteForm_Setting(Form_Setting instance);
    partial void InsertForm_User(Form_User instance);
    partial void UpdateForm_User(Form_User instance);
    partial void DeleteForm_User(Form_User instance);
    partial void InsertForum_AccessType(Forum_AccessType instance);
    partial void UpdateForum_AccessType(Forum_AccessType instance);
    partial void DeleteForum_AccessType(Forum_AccessType instance);
    partial void InsertForum_Forum(Forum_Forum instance);
    partial void UpdateForum_Forum(Forum_Forum instance);
    partial void DeleteForum_Forum(Forum_Forum instance);
    partial void InsertForum_Message(Forum_Message instance);
    partial void UpdateForum_Message(Forum_Message instance);
    partial void DeleteForum_Message(Forum_Message instance);
    partial void InsertForum_Thread(Forum_Thread instance);
    partial void UpdateForum_Thread(Forum_Thread instance);
    partial void DeleteForum_Thread(Forum_Thread instance);
    partial void InsertForum_UserGroup(Forum_UserGroup instance);
    partial void UpdateForum_UserGroup(Forum_UserGroup instance);
    partial void DeleteForum_UserGroup(Forum_UserGroup instance);
    partial void InsertForum_UserGroups_Forum(Forum_UserGroups_Forum instance);
    partial void UpdateForum_UserGroups_Forum(Forum_UserGroups_Forum instance);
    partial void DeleteForum_UserGroups_Forum(Forum_UserGroups_Forum instance);
    partial void InsertForum_User(Forum_User instance);
    partial void UpdateForum_User(Forum_User instance);
    partial void DeleteForum_User(Forum_User instance);
    partial void InsertForum_Users_Group(Forum_Users_Group instance);
    partial void UpdateForum_Users_Group(Forum_Users_Group instance);
    partial void DeleteForum_Users_Group(Forum_Users_Group instance);
    partial void InsertFraimit_Position(Fraimit_Position instance);
    partial void UpdateFraimit_Position(Fraimit_Position instance);
    partial void DeleteFraimit_Position(Fraimit_Position instance);
    partial void InsertFraimit_Unit(Fraimit_Unit instance);
    partial void UpdateFraimit_Unit(Fraimit_Unit instance);
    partial void DeleteFraimit_Unit(Fraimit_Unit instance);
    partial void InsertFraimit_UnitType(Fraimit_UnitType instance);
    partial void UpdateFraimit_UnitType(Fraimit_UnitType instance);
    partial void DeleteFraimit_UnitType(Fraimit_UnitType instance);
    partial void InsertGlobalFashion_Favorite(GlobalFashion_Favorite instance);
    partial void UpdateGlobalFashion_Favorite(GlobalFashion_Favorite instance);
    partial void DeleteGlobalFashion_Favorite(GlobalFashion_Favorite instance);
    partial void InsertGlobalFashion_FavoriteType(GlobalFashion_FavoriteType instance);
    partial void UpdateGlobalFashion_FavoriteType(GlobalFashion_FavoriteType instance);
    partial void DeleteGlobalFashion_FavoriteType(GlobalFashion_FavoriteType instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroup1(Group1 instance);
    partial void UpdateGroup1(Group1 instance);
    partial void DeleteGroup1(Group1 instance);
    partial void InsertGroupSubscriber(GroupSubscriber instance);
    partial void UpdateGroupSubscriber(GroupSubscriber instance);
    partial void DeleteGroupSubscriber(GroupSubscriber instance);
    partial void InsertGS_BookingPublicCategory(GS_BookingPublicCategory instance);
    partial void UpdateGS_BookingPublicCategory(GS_BookingPublicCategory instance);
    partial void DeleteGS_BookingPublicCategory(GS_BookingPublicCategory instance);
    partial void InsertGS_BookingPublicItem(GS_BookingPublicItem instance);
    partial void UpdateGS_BookingPublicItem(GS_BookingPublicItem instance);
    partial void DeleteGS_BookingPublicItem(GS_BookingPublicItem instance);
    partial void InsertGS_BookingUserData(GS_BookingUserData instance);
    partial void UpdateGS_BookingUserData(GS_BookingUserData instance);
    partial void DeleteGS_BookingUserData(GS_BookingUserData instance);
    partial void InsertGS_Signature(GS_Signature instance);
    partial void UpdateGS_Signature(GS_Signature instance);
    partial void DeleteGS_Signature(GS_Signature instance);
    partial void InsertHusfest_Anmalan(Husfest_Anmalan instance);
    partial void UpdateHusfest_Anmalan(Husfest_Anmalan instance);
    partial void DeleteHusfest_Anmalan(Husfest_Anmalan instance);
    partial void InsertHusfest_Tavling(Husfest_Tavling instance);
    partial void UpdateHusfest_Tavling(Husfest_Tavling instance);
    partial void DeleteHusfest_Tavling(Husfest_Tavling instance);
    partial void InsertIntranet(Intranet instance);
    partial void UpdateIntranet(Intranet instance);
    partial void DeleteIntranet(Intranet instance);
    partial void InsertIntranet_address(Intranet_address instance);
    partial void UpdateIntranet_address(Intranet_address instance);
    partial void DeleteIntranet_address(Intranet_address instance);
    partial void InsertIntranetRoleInfo(IntranetRoleInfo instance);
    partial void UpdateIntranetRoleInfo(IntranetRoleInfo instance);
    partial void DeleteIntranetRoleInfo(IntranetRoleInfo instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertMessageBoard(MessageBoard instance);
    partial void UpdateMessageBoard(MessageBoard instance);
    partial void DeleteMessageBoard(MessageBoard instance);
    partial void InsertModule(Module instance);
    partial void UpdateModule(Module instance);
    partial void DeleteModule(Module instance);
    partial void InsertNew(New instance);
    partial void UpdateNew(New instance);
    partial void DeleteNew(New instance);
    partial void InsertNewsletter(Newsletter instance);
    partial void UpdateNewsletter(Newsletter instance);
    partial void DeleteNewsletter(Newsletter instance);
    partial void InsertNewsletterHistory(NewsletterHistory instance);
    partial void UpdateNewsletterHistory(NewsletterHistory instance);
    partial void DeleteNewsletterHistory(NewsletterHistory instance);
    partial void InsertNewsLetterLog(NewsLetterLog instance);
    partial void UpdateNewsLetterLog(NewsLetterLog instance);
    partial void DeleteNewsLetterLog(NewsLetterLog instance);
    partial void InsertObject(Object instance);
    partial void UpdateObject(Object instance);
    partial void DeleteObject(Object instance);
    partial void InsertObject_Popular(Object_Popular instance);
    partial void UpdateObject_Popular(Object_Popular instance);
    partial void DeleteObject_Popular(Object_Popular instance);
    partial void InsertObject_VersionControl(Object_VersionControl instance);
    partial void UpdateObject_VersionControl(Object_VersionControl instance);
    partial void DeleteObject_VersionControl(Object_VersionControl instance);
    partial void InsertObjectComment(ObjectComment instance);
    partial void UpdateObjectComment(ObjectComment instance);
    partial void DeleteObjectComment(ObjectComment instance);
    partial void InsertObjectsInRole(ObjectsInRole instance);
    partial void UpdateObjectsInRole(ObjectsInRole instance);
    partial void DeleteObjectsInRole(ObjectsInRole instance);
    partial void InsertObjectType(ObjectType instance);
    partial void UpdateObjectType(ObjectType instance);
    partial void DeleteObjectType(ObjectType instance);
    partial void InsertPhoto(Photo instance);
    partial void UpdatePhoto(Photo instance);
    partial void DeletePhoto(Photo instance);
    partial void InsertPhotoCategory(PhotoCategory instance);
    partial void UpdatePhotoCategory(PhotoCategory instance);
    partial void DeletePhotoCategory(PhotoCategory instance);
    partial void InsertPlaninglist_Area(Planinglist_Area instance);
    partial void UpdatePlaninglist_Area(Planinglist_Area instance);
    partial void DeletePlaninglist_Area(Planinglist_Area instance);
    partial void InsertPlaninglist_Comment(Planinglist_Comment instance);
    partial void UpdatePlaninglist_Comment(Planinglist_Comment instance);
    partial void DeletePlaninglist_Comment(Planinglist_Comment instance);
    partial void InsertPlaninglist_Day(Planinglist_Day instance);
    partial void UpdatePlaninglist_Day(Planinglist_Day instance);
    partial void DeletePlaninglist_Day(Planinglist_Day instance);
    partial void InsertPlaninglist_Object(Planinglist_Object instance);
    partial void UpdatePlaninglist_Object(Planinglist_Object instance);
    partial void DeletePlaninglist_Object(Planinglist_Object instance);
    partial void InsertPlaninglist_ObjectArea(Planinglist_ObjectArea instance);
    partial void UpdatePlaninglist_ObjectArea(Planinglist_ObjectArea instance);
    partial void DeletePlaninglist_ObjectArea(Planinglist_ObjectArea instance);
    partial void InsertPlaninglist_ObjectAreaXResource(Planinglist_ObjectAreaXResource instance);
    partial void UpdatePlaninglist_ObjectAreaXResource(Planinglist_ObjectAreaXResource instance);
    partial void DeletePlaninglist_ObjectAreaXResource(Planinglist_ObjectAreaXResource instance);
    partial void InsertPlaninglist_ObjectHatch(Planinglist_ObjectHatch instance);
    partial void UpdatePlaninglist_ObjectHatch(Planinglist_ObjectHatch instance);
    partial void DeletePlaninglist_ObjectHatch(Planinglist_ObjectHatch instance);
    partial void InsertPlaninglist_ObjectType(Planinglist_ObjectType instance);
    partial void UpdatePlaninglist_ObjectType(Planinglist_ObjectType instance);
    partial void DeletePlaninglist_ObjectType(Planinglist_ObjectType instance);
    partial void InsertPlaninglist_Resource(Planinglist_Resource instance);
    partial void UpdatePlaninglist_Resource(Planinglist_Resource instance);
    partial void DeletePlaninglist_Resource(Planinglist_Resource instance);
    partial void InsertPlaninglist_ResourceType(Planinglist_ResourceType instance);
    partial void UpdatePlaninglist_ResourceType(Planinglist_ResourceType instance);
    partial void DeletePlaninglist_ResourceType(Planinglist_ResourceType instance);
    partial void InsertPlaninglist_Site(Planinglist_Site instance);
    partial void UpdatePlaninglist_Site(Planinglist_Site instance);
    partial void DeletePlaninglist_Site(Planinglist_Site instance);
    partial void InsertPlanininglist_ObjectXResource(Planininglist_ObjectXResource instance);
    partial void UpdatePlanininglist_ObjectXResource(Planininglist_ObjectXResource instance);
    partial void DeletePlanininglist_ObjectXResource(Planininglist_ObjectXResource instance);
    partial void InsertPlanningList_Comment(PlanningList_Comment instance);
    partial void UpdatePlanningList_Comment(PlanningList_Comment instance);
    partial void DeletePlanningList_Comment(PlanningList_Comment instance);
    partial void InsertPlanningList_Project(PlanningList_Project instance);
    partial void UpdatePlanningList_Project(PlanningList_Project instance);
    partial void DeletePlanningList_Project(PlanningList_Project instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProducts_Category(Products_Category instance);
    partial void UpdateProducts_Category(Products_Category instance);
    partial void DeleteProducts_Category(Products_Category instance);
    partial void InsertProducts_File(Products_File instance);
    partial void UpdateProducts_File(Products_File instance);
    partial void DeleteProducts_File(Products_File instance);
    partial void InsertProducts_Files_X_Setting(Products_Files_X_Setting instance);
    partial void UpdateProducts_Files_X_Setting(Products_Files_X_Setting instance);
    partial void DeleteProducts_Files_X_Setting(Products_Files_X_Setting instance);
    partial void InsertProducts_Group(Products_Group instance);
    partial void UpdateProducts_Group(Products_Group instance);
    partial void DeleteProducts_Group(Products_Group instance);
    partial void InsertProducts_MainGroup(Products_MainGroup instance);
    partial void UpdateProducts_MainGroup(Products_MainGroup instance);
    partial void DeleteProducts_MainGroup(Products_MainGroup instance);
    partial void InsertProducts_Object_X_MainGroup(Products_Object_X_MainGroup instance);
    partial void UpdateProducts_Object_X_MainGroup(Products_Object_X_MainGroup instance);
    partial void DeleteProducts_Object_X_MainGroup(Products_Object_X_MainGroup instance);
    partial void InsertProducts_Picture(Products_Picture instance);
    partial void UpdateProducts_Picture(Products_Picture instance);
    partial void DeleteProducts_Picture(Products_Picture instance);
    partial void InsertProducts_Picture_Type(Products_Picture_Type instance);
    partial void UpdateProducts_Picture_Type(Products_Picture_Type instance);
    partial void DeleteProducts_Picture_Type(Products_Picture_Type instance);
    partial void InsertProducts_Picture_X_Setting(Products_Picture_X_Setting instance);
    partial void UpdateProducts_Picture_X_Setting(Products_Picture_X_Setting instance);
    partial void DeleteProducts_Picture_X_Setting(Products_Picture_X_Setting instance);
    partial void InsertProducts_Product(Products_Product instance);
    partial void UpdateProducts_Product(Products_Product instance);
    partial void DeleteProducts_Product(Products_Product instance);
    partial void InsertProducts_Products_X_Property(Products_Products_X_Property instance);
    partial void UpdateProducts_Products_X_Property(Products_Products_X_Property instance);
    partial void DeleteProducts_Products_X_Property(Products_Products_X_Property instance);
    partial void InsertProducts_Products_X_Setting(Products_Products_X_Setting instance);
    partial void UpdateProducts_Products_X_Setting(Products_Products_X_Setting instance);
    partial void DeleteProducts_Products_X_Setting(Products_Products_X_Setting instance);
    partial void InsertProducts_ProductsProperties_X_Setting(Products_ProductsProperties_X_Setting instance);
    partial void UpdateProducts_ProductsProperties_X_Setting(Products_ProductsProperties_X_Setting instance);
    partial void DeleteProducts_ProductsProperties_X_Setting(Products_ProductsProperties_X_Setting instance);
    partial void InsertProducts_Property(Products_Property instance);
    partial void UpdateProducts_Property(Products_Property instance);
    partial void DeleteProducts_Property(Products_Property instance);
    partial void InsertProducts_PropertiesValueName(Products_PropertiesValueName instance);
    partial void UpdateProducts_PropertiesValueName(Products_PropertiesValueName instance);
    partial void DeleteProducts_PropertiesValueName(Products_PropertiesValueName instance);
    partial void InsertProducts_Setting(Products_Setting instance);
    partial void UpdateProducts_Setting(Products_Setting instance);
    partial void DeleteProducts_Setting(Products_Setting instance);
    partial void InsertProducts_Template(Products_Template instance);
    partial void UpdateProducts_Template(Products_Template instance);
    partial void DeleteProducts_Template(Products_Template instance);
    partial void InsertProducts_Templates_X_Property(Products_Templates_X_Property instance);
    partial void UpdateProducts_Templates_X_Property(Products_Templates_X_Property instance);
    partial void DeleteProducts_Templates_X_Property(Products_Templates_X_Property instance);
    partial void InsertProducts_X_Site(Products_X_Site instance);
    partial void UpdateProducts_X_Site(Products_X_Site instance);
    partial void DeleteProducts_X_Site(Products_X_Site instance);
    partial void InsertQuizAnswer(QuizAnswer instance);
    partial void UpdateQuizAnswer(QuizAnswer instance);
    partial void DeleteQuizAnswer(QuizAnswer instance);
    partial void InsertQuizQuestion(QuizQuestion instance);
    partial void UpdateQuizQuestion(QuizQuestion instance);
    partial void DeleteQuizQuestion(QuizQuestion instance);
    partial void InsertRetailerList(RetailerList instance);
    partial void UpdateRetailerList(RetailerList instance);
    partial void DeleteRetailerList(RetailerList instance);
    partial void InsertRetailerListCountry(RetailerListCountry instance);
    partial void UpdateRetailerListCountry(RetailerListCountry instance);
    partial void DeleteRetailerListCountry(RetailerListCountry instance);
    partial void InsertRoleGroup(RoleGroup instance);
    partial void UpdateRoleGroup(RoleGroup instance);
    partial void DeleteRoleGroup(RoleGroup instance);
    partial void InsertRoleGroups_X_aspnet_Role(RoleGroups_X_aspnet_Role instance);
    partial void UpdateRoleGroups_X_aspnet_Role(RoleGroups_X_aspnet_Role instance);
    partial void DeleteRoleGroups_X_aspnet_Role(RoleGroups_X_aspnet_Role instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void Insertsatila_AreaProperty(satila_AreaProperty instance);
    partial void Updatesatila_AreaProperty(satila_AreaProperty instance);
    partial void Deletesatila_AreaProperty(satila_AreaProperty instance);
    partial void Insertsatila_Area(satila_Area instance);
    partial void Updatesatila_Area(satila_Area instance);
    partial void Deletesatila_Area(satila_Area instance);
    partial void Insertsatila_File(satila_File instance);
    partial void Updatesatila_File(satila_File instance);
    partial void Deletesatila_File(satila_File instance);
    partial void Insertsatila_Lokal(satila_Lokal instance);
    partial void Updatesatila_Lokal(satila_Lokal instance);
    partial void Deletesatila_Lokal(satila_Lokal instance);
    partial void Insertsatila_Lokal_attribute(satila_Lokal_attribute instance);
    partial void Updatesatila_Lokal_attribute(satila_Lokal_attribute instance);
    partial void Deletesatila_Lokal_attribute(satila_Lokal_attribute instance);
    partial void Insertsatila_LokalType(satila_LokalType instance);
    partial void Updatesatila_LokalType(satila_LokalType instance);
    partial void Deletesatila_LokalType(satila_LokalType instance);
    partial void Insertsatila_Property(satila_Property instance);
    partial void Updatesatila_Property(satila_Property instance);
    partial void Deletesatila_Property(satila_Property instance);
    partial void Insertsatila_Type(satila_Type instance);
    partial void Updatesatila_Type(satila_Type instance);
    partial void Deletesatila_Type(satila_Type instance);
    partial void Insertsh_ShareHolding(sh_ShareHolding instance);
    partial void Updatesh_ShareHolding(sh_ShareHolding instance);
    partial void Deletesh_ShareHolding(sh_ShareHolding instance);
    partial void InsertSite(Site instance);
    partial void UpdateSite(Site instance);
    partial void DeleteSite(Site instance);
    partial void InsertSiteLanguage(SiteLanguage instance);
    partial void UpdateSiteLanguage(SiteLanguage instance);
    partial void DeleteSiteLanguage(SiteLanguage instance);
    partial void InsertSiteModule(SiteModule instance);
    partial void UpdateSiteModule(SiteModule instance);
    partial void DeleteSiteModule(SiteModule instance);
    partial void InsertSiteObjectType(SiteObjectType instance);
    partial void UpdateSiteObjectType(SiteObjectType instance);
    partial void DeleteSiteObjectType(SiteObjectType instance);
    partial void InsertSiteTemplate(SiteTemplate instance);
    partial void UpdateSiteTemplate(SiteTemplate instance);
    partial void DeleteSiteTemplate(SiteTemplate instance);
    partial void InsertSkogshjortarna_Calender(Skogshjortarna_Calender instance);
    partial void UpdateSkogshjortarna_Calender(Skogshjortarna_Calender instance);
    partial void DeleteSkogshjortarna_Calender(Skogshjortarna_Calender instance);
    partial void InsertSkogshjortarna_Calender_X_TrainingGroup(Skogshjortarna_Calender_X_TrainingGroup instance);
    partial void UpdateSkogshjortarna_Calender_X_TrainingGroup(Skogshjortarna_Calender_X_TrainingGroup instance);
    partial void DeleteSkogshjortarna_Calender_X_TrainingGroup(Skogshjortarna_Calender_X_TrainingGroup instance);
    partial void InsertSkogshjortarna_CalenderGroupType(Skogshjortarna_CalenderGroupType instance);
    partial void UpdateSkogshjortarna_CalenderGroupType(Skogshjortarna_CalenderGroupType instance);
    partial void DeleteSkogshjortarna_CalenderGroupType(Skogshjortarna_CalenderGroupType instance);
    partial void InsertSkogshjortarna_CalenderType(Skogshjortarna_CalenderType instance);
    partial void UpdateSkogshjortarna_CalenderType(Skogshjortarna_CalenderType instance);
    partial void DeleteSkogshjortarna_CalenderType(Skogshjortarna_CalenderType instance);
    partial void InsertSkogshjortarna_CompetitionType(Skogshjortarna_CompetitionType instance);
    partial void UpdateSkogshjortarna_CompetitionType(Skogshjortarna_CompetitionType instance);
    partial void DeleteSkogshjortarna_CompetitionType(Skogshjortarna_CompetitionType instance);
    partial void InsertSkogshjortarna_InternalComp(Skogshjortarna_InternalComp instance);
    partial void UpdateSkogshjortarna_InternalComp(Skogshjortarna_InternalComp instance);
    partial void DeleteSkogshjortarna_InternalComp(Skogshjortarna_InternalComp instance);
    partial void InsertSkogshjortarna_InternalComp_X_aspnet_User(Skogshjortarna_InternalComp_X_aspnet_User instance);
    partial void UpdateSkogshjortarna_InternalComp_X_aspnet_User(Skogshjortarna_InternalComp_X_aspnet_User instance);
    partial void DeleteSkogshjortarna_InternalComp_X_aspnet_User(Skogshjortarna_InternalComp_X_aspnet_User instance);
    partial void InsertSkogshjortarna_NewsOwner(Skogshjortarna_NewsOwner instance);
    partial void UpdateSkogshjortarna_NewsOwner(Skogshjortarna_NewsOwner instance);
    partial void DeleteSkogshjortarna_NewsOwner(Skogshjortarna_NewsOwner instance);
    partial void InsertSkogshjortarna_SnowStatus(Skogshjortarna_SnowStatus instance);
    partial void UpdateSkogshjortarna_SnowStatus(Skogshjortarna_SnowStatus instance);
    partial void DeleteSkogshjortarna_SnowStatus(Skogshjortarna_SnowStatus instance);
    partial void InsertSkogshjortarna_SnowStatusItem(Skogshjortarna_SnowStatusItem instance);
    partial void UpdateSkogshjortarna_SnowStatusItem(Skogshjortarna_SnowStatusItem instance);
    partial void DeleteSkogshjortarna_SnowStatusItem(Skogshjortarna_SnowStatusItem instance);
    partial void InsertSkogshjortarna_TipsPromenad(Skogshjortarna_TipsPromenad instance);
    partial void UpdateSkogshjortarna_TipsPromenad(Skogshjortarna_TipsPromenad instance);
    partial void DeleteSkogshjortarna_TipsPromenad(Skogshjortarna_TipsPromenad instance);
    partial void InsertSkogshjortarna_TrainingDiary(Skogshjortarna_TrainingDiary instance);
    partial void UpdateSkogshjortarna_TrainingDiary(Skogshjortarna_TrainingDiary instance);
    partial void DeleteSkogshjortarna_TrainingDiary(Skogshjortarna_TrainingDiary instance);
    partial void InsertSkogshjortarna_TrainingDiary_Training(Skogshjortarna_TrainingDiary_Training instance);
    partial void UpdateSkogshjortarna_TrainingDiary_Training(Skogshjortarna_TrainingDiary_Training instance);
    partial void DeleteSkogshjortarna_TrainingDiary_Training(Skogshjortarna_TrainingDiary_Training instance);
    partial void InsertSkogshjortarna_TrainingDiary_TrainingType(Skogshjortarna_TrainingDiary_TrainingType instance);
    partial void UpdateSkogshjortarna_TrainingDiary_TrainingType(Skogshjortarna_TrainingDiary_TrainingType instance);
    partial void DeleteSkogshjortarna_TrainingDiary_TrainingType(Skogshjortarna_TrainingDiary_TrainingType instance);
    partial void InsertSkogshjortarna_TrainingGroup(Skogshjortarna_TrainingGroup instance);
    partial void UpdateSkogshjortarna_TrainingGroup(Skogshjortarna_TrainingGroup instance);
    partial void DeleteSkogshjortarna_TrainingGroup(Skogshjortarna_TrainingGroup instance);
    partial void InsertSMS_Customer(SMS_Customer instance);
    partial void UpdateSMS_Customer(SMS_Customer instance);
    partial void DeleteSMS_Customer(SMS_Customer instance);
    partial void InsertSMS_ErrorLog(SMS_ErrorLog instance);
    partial void UpdateSMS_ErrorLog(SMS_ErrorLog instance);
    partial void DeleteSMS_ErrorLog(SMS_ErrorLog instance);
    partial void InsertSMS_Recipient(SMS_Recipient instance);
    partial void UpdateSMS_Recipient(SMS_Recipient instance);
    partial void DeleteSMS_Recipient(SMS_Recipient instance);
    partial void InsertSMS_SendHistory(SMS_SendHistory instance);
    partial void UpdateSMS_SendHistory(SMS_SendHistory instance);
    partial void DeleteSMS_SendHistory(SMS_SendHistory instance);
    partial void InsertStavdal_Img_Rotator(Stavdal_Img_Rotator instance);
    partial void UpdateStavdal_Img_Rotator(Stavdal_Img_Rotator instance);
    partial void DeleteStavdal_Img_Rotator(Stavdal_Img_Rotator instance);
    partial void InsertStavdal_ProvidersList(Stavdal_ProvidersList instance);
    partial void UpdateStavdal_ProvidersList(Stavdal_ProvidersList instance);
    partial void DeleteStavdal_ProvidersList(Stavdal_ProvidersList instance);
    partial void InsertStavdal_ReportItem(Stavdal_ReportItem instance);
    partial void UpdateStavdal_ReportItem(Stavdal_ReportItem instance);
    partial void DeleteStavdal_ReportItem(Stavdal_ReportItem instance);
    partial void InsertStep(Step instance);
    partial void UpdateStep(Step instance);
    partial void DeleteStep(Step instance);
    partial void InsertSubscriber(Subscriber instance);
    partial void UpdateSubscriber(Subscriber instance);
    partial void DeleteSubscriber(Subscriber instance);
    partial void Insertsupport(support instance);
    partial void Updatesupport(support instance);
    partial void Deletesupport(support instance);
    partial void InsertTechnicalTip_Answer(TechnicalTip_Answer instance);
    partial void UpdateTechnicalTip_Answer(TechnicalTip_Answer instance);
    partial void DeleteTechnicalTip_Answer(TechnicalTip_Answer instance);
    partial void InsertTechnicalTip_Question(TechnicalTip_Question instance);
    partial void UpdateTechnicalTip_Question(TechnicalTip_Question instance);
    partial void DeleteTechnicalTip_Question(TechnicalTip_Question instance);
    partial void InsertText(Text instance);
    partial void UpdateText(Text instance);
    partial void DeleteText(Text instance);
    partial void InsertTreeStructure(TreeStructure instance);
    partial void UpdateTreeStructure(TreeStructure instance);
    partial void DeleteTreeStructure(TreeStructure instance);
    partial void InsertUserLog(UserLog instance);
    partial void UpdateUserLog(UserLog instance);
    partial void DeleteUserLog(UserLog instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAimDoc(AimDoc instance);
    partial void UpdateAimDoc(AimDoc instance);
    partial void DeleteAimDoc(AimDoc instance);
    #endregion
		
		public DataObjectsDataContext() : 
				base(global::AIM.Business.Properties.Settings.Default.Aimit_AimConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Form_ExternalConnection> Form_ExternalConnections
		{
			get
			{
				return this.GetTable<Form_ExternalConnection>();
			}
		}
		
		public System.Data.Linq.Table<Vacation> Vacations
		{
			get
			{
				return this.GetTable<Vacation>();
			}
		}
		
		public System.Data.Linq.Table<Form_ExternalConnections_Property> Form_ExternalConnections_Properties
		{
			get
			{
				return this.GetTable<Form_ExternalConnections_Property>();
			}
		}
		
		public System.Data.Linq.Table<Form_ExternalConnections_ReturnProperty> Form_ExternalConnections_ReturnProperties
		{
			get
			{
				return this.GetTable<Form_ExternalConnections_ReturnProperty>();
			}
		}
		
		public System.Data.Linq.Table<Form_ExternalConnections_ReturnValue> Form_ExternalConnections_ReturnValues
		{
			get
			{
				return this.GetTable<Form_ExternalConnections_ReturnValue>();
			}
		}
		
		public System.Data.Linq.Table<Form_ExternalConnections_Value> Form_ExternalConnections_Values
		{
			get
			{
				return this.GetTable<Form_ExternalConnections_Value>();
			}
		}
		
		public System.Data.Linq.Table<ImageFrontPage> ImageFrontPages
		{
			get
			{
				return this.GetTable<ImageFrontPage>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<AdminLanguage> AdminLanguages
		{
			get
			{
				return this.GetTable<AdminLanguage>();
			}
		}
		
		public System.Data.Linq.Table<AdminRole> AdminRoles
		{
			get
			{
				return this.GetTable<AdminRole>();
			}
		}
		
		public System.Data.Linq.Table<Ads_Ad> Ads_Ads
		{
			get
			{
				return this.GetTable<Ads_Ad>();
			}
		}
		
		public System.Data.Linq.Table<Ads_Group> Ads_Groups
		{
			get
			{
				return this.GetTable<Ads_Group>();
			}
		}
		
		public System.Data.Linq.Table<Aim_Dropdown__Area> Aim_Dropdown__Areas
		{
			get
			{
				return this.GetTable<Aim_Dropdown__Area>();
			}
		}
		
		public System.Data.Linq.Table<Aim_Dropdown_Connection> Aim_Dropdown_Connections
		{
			get
			{
				return this.GetTable<Aim_Dropdown_Connection>();
			}
		}
		
		public System.Data.Linq.Table<Aim_Dropdown_Page> Aim_Dropdown_Pages
		{
			get
			{
				return this.GetTable<Aim_Dropdown_Page>();
			}
		}
		
		public System.Data.Linq.Table<Aim_Dropdown_PageConnection> Aim_Dropdown_PageConnections
		{
			get
			{
				return this.GetTable<Aim_Dropdown_PageConnection>();
			}
		}
		
		public System.Data.Linq.Table<Aim_Dropdown_Value> Aim_Dropdown_Values
		{
			get
			{
				return this.GetTable<Aim_Dropdown_Value>();
			}
		}
		
		public System.Data.Linq.Table<AimAds_Direction> AimAds_Directions
		{
			get
			{
				return this.GetTable<AimAds_Direction>();
			}
		}
		
		public System.Data.Linq.Table<AimAds_Group> AimAds_Groups
		{
			get
			{
				return this.GetTable<AimAds_Group>();
			}
		}
		
		public System.Data.Linq.Table<AimAds_Group1> AimAds_Group1s
		{
			get
			{
				return this.GetTable<AimAds_Group1>();
			}
		}
		
		public System.Data.Linq.Table<AimAds_Item> AimAds_Items
		{
			get
			{
				return this.GetTable<AimAds_Item>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_AimNew> AimNews_AimNews
		{
			get
			{
				return this.GetTable<AimNews_AimNew>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Group> AimNews_Groups
		{
			get
			{
				return this.GetTable<AimNews_Group>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_GroupUser> AimNews_GroupUsers
		{
			get
			{
				return this.GetTable<AimNews_GroupUser>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_History> AimNews_Histories
		{
			get
			{
				return this.GetTable<AimNews_History>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_LinkedClicked> AimNews_LinkedClickeds
		{
			get
			{
				return this.GetTable<AimNews_LinkedClicked>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Link> AimNews_Links
		{
			get
			{
				return this.GetTable<AimNews_Link>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Log> AimNews_Logs
		{
			get
			{
				return this.GetTable<AimNews_Log>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Mail> AimNews_Mails
		{
			get
			{
				return this.GetTable<AimNews_Mail>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_MailGroup> AimNews_MailGroups
		{
			get
			{
				return this.GetTable<AimNews_MailGroup>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_Site> AimNews_Sites
		{
			get
			{
				return this.GetTable<AimNews_Site>();
			}
		}
		
		public System.Data.Linq.Table<AimNews_User> AimNews_Users
		{
			get
			{
				return this.GetTable<AimNews_User>();
			}
		}
		
		public System.Data.Linq.Table<AimScrum_Iteration> AimScrum_Iterations
		{
			get
			{
				return this.GetTable<AimScrum_Iteration>();
			}
		}
		
		public System.Data.Linq.Table<AimScrum_Project> AimScrum_Projects
		{
			get
			{
				return this.GetTable<AimScrum_Project>();
			}
		}
		
		public System.Data.Linq.Table<AimScrum_Status> AimScrum_Status
		{
			get
			{
				return this.GetTable<AimScrum_Status>();
			}
		}
		
		public System.Data.Linq.Table<AimScrum_Task> AimScrum_Tasks
		{
			get
			{
				return this.GetTable<AimScrum_Task>();
			}
		}
		
		public System.Data.Linq.Table<AimWalk_Group> AimWalk_Groups
		{
			get
			{
				return this.GetTable<AimWalk_Group>();
			}
		}
		
		public System.Data.Linq.Table<AimWalk_Step> AimWalk_Steps
		{
			get
			{
				return this.GetTable<AimWalk_Step>();
			}
		}
		
		public System.Data.Linq.Table<AimWalk_UsersInCompany> AimWalk_UsersInCompanies
		{
			get
			{
				return this.GetTable<AimWalk_UsersInCompany>();
			}
		}
		
		public System.Data.Linq.Table<AimWalk_UsersInGroup> AimWalk_UsersInGroups
		{
			get
			{
				return this.GetTable<AimWalk_UsersInGroup>();
			}
		}
		
		public System.Data.Linq.Table<AlbumPhoto> AlbumPhotos
		{
			get
			{
				return this.GetTable<AlbumPhoto>();
			}
		}
		
		public System.Data.Linq.Table<AlbumPhotoCategory> AlbumPhotoCategories
		{
			get
			{
				return this.GetTable<AlbumPhotoCategory>();
			}
		}
		
		public System.Data.Linq.Table<AlbumPhotoInRole> AlbumPhotoInRoles
		{
			get
			{
				return this.GetTable<AlbumPhotoInRole>();
			}
		}
		
		public System.Data.Linq.Table<Articles_AimFor2022> Articles_AimFor2022s
		{
			get
			{
				return this.GetTable<Articles_AimFor2022>();
			}
		}
		
		public System.Data.Linq.Table<Articles_Article> Articles_Articles
		{
			get
			{
				return this.GetTable<Articles_Article>();
			}
		}
		
		public System.Data.Linq.Table<Articles_Article_Info> Articles_Article_Infos
		{
			get
			{
				return this.GetTable<Articles_Article_Info>();
			}
		}
		
		public System.Data.Linq.Table<Articles_Customer> Articles_Customers
		{
			get
			{
				return this.GetTable<Articles_Customer>();
			}
		}
		
		public System.Data.Linq.Table<Articles_DeliveryType> Articles_DeliveryTypes
		{
			get
			{
				return this.GetTable<Articles_DeliveryType>();
			}
		}
		
		public System.Data.Linq.Table<Articles_FIVE_Catalog> Articles_FIVE_Catalogs
		{
			get
			{
				return this.GetTable<Articles_FIVE_Catalog>();
			}
		}
		
		public System.Data.Linq.Table<Articles_FIVE_Colour> Articles_FIVE_Colours
		{
			get
			{
				return this.GetTable<Articles_FIVE_Colour>();
			}
		}
		
		public System.Data.Linq.Table<Articles_FIVE_Symbol> Articles_FIVE_Symbols
		{
			get
			{
				return this.GetTable<Articles_FIVE_Symbol>();
			}
		}
		
		public System.Data.Linq.Table<Articles_FIVE_SymbolsArticle> Articles_FIVE_SymbolsArticles
		{
			get
			{
				return this.GetTable<Articles_FIVE_SymbolsArticle>();
			}
		}
		
		public System.Data.Linq.Table<Articles_GlobalFashion_AdComment> Articles_GlobalFashion_AdComments
		{
			get
			{
				return this.GetTable<Articles_GlobalFashion_AdComment>();
			}
		}
		
		public System.Data.Linq.Table<Articles_GlobalFashion_Ad> Articles_GlobalFashion_Ads
		{
			get
			{
				return this.GetTable<Articles_GlobalFashion_Ad>();
			}
		}
		
		public System.Data.Linq.Table<Articles_GlobalFashion_Common> Articles_GlobalFashion_Commons
		{
			get
			{
				return this.GetTable<Articles_GlobalFashion_Common>();
			}
		}
		
		public System.Data.Linq.Table<Articles_GlobalFashion_ListName> Articles_GlobalFashion_ListNames
		{
			get
			{
				return this.GetTable<Articles_GlobalFashion_ListName>();
			}
		}
		
		public System.Data.Linq.Table<Articles_OrderDetail> Articles_OrderDetails
		{
			get
			{
				return this.GetTable<Articles_OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Articles_OrderEmail> Articles_OrderEmails
		{
			get
			{
				return this.GetTable<Articles_OrderEmail>();
			}
		}
		
		public System.Data.Linq.Table<Articles_OrderHead> Articles_OrderHeads
		{
			get
			{
				return this.GetTable<Articles_OrderHead>();
			}
		}
		
		public System.Data.Linq.Table<Articles_OrderHead_Deleted> Articles_OrderHead_Deleteds
		{
			get
			{
				return this.GetTable<Articles_OrderHead_Deleted>();
			}
		}
		
		public System.Data.Linq.Table<Articles_PaymentDetail> Articles_PaymentDetails
		{
			get
			{
				return this.GetTable<Articles_PaymentDetail>();
			}
		}
		
		public System.Data.Linq.Table<Articles_Property> Articles_Properties
		{
			get
			{
				return this.GetTable<Articles_Property>();
			}
		}
		
		public System.Data.Linq.Table<Articles_Stavdal_ArticleFile> Articles_Stavdal_ArticleFiles
		{
			get
			{
				return this.GetTable<Articles_Stavdal_ArticleFile>();
			}
		}
		
		public System.Data.Linq.Table<Articles_Stavdal_Category> Articles_Stavdal_Categories
		{
			get
			{
				return this.GetTable<Articles_Stavdal_Category>();
			}
		}
		
		public System.Data.Linq.Table<Articles_TempOrderDetail> Articles_TempOrderDetails
		{
			get
			{
				return this.GetTable<Articles_TempOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Articles_Tjuge22> Articles_Tjuge22s
		{
			get
			{
				return this.GetTable<Articles_Tjuge22>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<Booking_GSPublicItems_Resource> Booking_GSPublicItems_Resources
		{
			get
			{
				return this.GetTable<Booking_GSPublicItems_Resource>();
			}
		}
		
		public System.Data.Linq.Table<Booking_Object_GSPublicItem> Booking_Object_GSPublicItems
		{
			get
			{
				return this.GetTable<Booking_Object_GSPublicItem>();
			}
		}
		
		public System.Data.Linq.Table<Booking_X_NewsletterGroup> Booking_X_NewsletterGroups
		{
			get
			{
				return this.GetTable<Booking_X_NewsletterGroup>();
			}
		}
		
		public System.Data.Linq.Table<BookingCategory> BookingCategories
		{
			get
			{
				return this.GetTable<BookingCategory>();
			}
		}
		
		public System.Data.Linq.Table<BookingConfig> BookingConfigs
		{
			get
			{
				return this.GetTable<BookingConfig>();
			}
		}
		
		public System.Data.Linq.Table<BookingDay> BookingDays
		{
			get
			{
				return this.GetTable<BookingDay>();
			}
		}
		
		public System.Data.Linq.Table<BookingHoliday> BookingHolidays
		{
			get
			{
				return this.GetTable<BookingHoliday>();
			}
		}
		
		public System.Data.Linq.Table<BookingObject> BookingObjects
		{
			get
			{
				return this.GetTable<BookingObject>();
			}
		}
		
		public System.Data.Linq.Table<BookingPreference> BookingPreferences
		{
			get
			{
				return this.GetTable<BookingPreference>();
			}
		}
		
		public System.Data.Linq.Table<BookingResource> BookingResources
		{
			get
			{
				return this.GetTable<BookingResource>();
			}
		}
		
		public System.Data.Linq.Table<BookingResourceHoliday> BookingResourceHolidays
		{
			get
			{
				return this.GetTable<BookingResourceHoliday>();
			}
		}
		
		public System.Data.Linq.Table<BookingResourceSchema> BookingResourceSchemas
		{
			get
			{
				return this.GetTable<BookingResourceSchema>();
			}
		}
		
		public System.Data.Linq.Table<BookingSchema> BookingSchemas
		{
			get
			{
				return this.GetTable<BookingSchema>();
			}
		}
		
		public System.Data.Linq.Table<BookingTime> BookingTimes
		{
			get
			{
				return this.GetTable<BookingTime>();
			}
		}
		
		public System.Data.Linq.Table<BookingWebUser> BookingWebUsers
		{
			get
			{
				return this.GetTable<BookingWebUser>();
			}
		}
		
		public System.Data.Linq.Table<Calendar_Event_Category> Calendar_Event_Categories
		{
			get
			{
				return this.GetTable<Calendar_Event_Category>();
			}
		}
		
		public System.Data.Linq.Table<Calendar_Event> Calendar_Events
		{
			get
			{
				return this.GetTable<Calendar_Event>();
			}
		}
		
		public System.Data.Linq.Table<CG_Article> CG_Articles
		{
			get
			{
				return this.GetTable<CG_Article>();
			}
		}
		
		public System.Data.Linq.Table<CG_Article_Info> CG_Article_Infos
		{
			get
			{
				return this.GetTable<CG_Article_Info>();
			}
		}
		
		public System.Data.Linq.Table<CG_Customer> CG_Customers
		{
			get
			{
				return this.GetTable<CG_Customer>();
			}
		}
		
		public System.Data.Linq.Table<CG_DeliveryType> CG_DeliveryTypes
		{
			get
			{
				return this.GetTable<CG_DeliveryType>();
			}
		}
		
		public System.Data.Linq.Table<CG_OrderDetail> CG_OrderDetails
		{
			get
			{
				return this.GetTable<CG_OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<CG_OrderEmail> CG_OrderEmails
		{
			get
			{
				return this.GetTable<CG_OrderEmail>();
			}
		}
		
		public System.Data.Linq.Table<CG_OrderHead> CG_OrderHeads
		{
			get
			{
				return this.GetTable<CG_OrderHead>();
			}
		}
		
		public System.Data.Linq.Table<CG_PaymentDetail> CG_PaymentDetails
		{
			get
			{
				return this.GetTable<CG_PaymentDetail>();
			}
		}
		
		public System.Data.Linq.Table<CG_TempOrderDetail> CG_TempOrderDetails
		{
			get
			{
				return this.GetTable<CG_TempOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<CompanyInfo> CompanyInfos
		{
			get
			{
				return this.GetTable<CompanyInfo>();
			}
		}
		
		public System.Data.Linq.Table<Config> Configs
		{
			get
			{
				return this.GetTable<Config>();
			}
		}
		
		public System.Data.Linq.Table<Connect_Region> Connect_Regions
		{
			get
			{
				return this.GetTable<Connect_Region>();
			}
		}
		
		public System.Data.Linq.Table<Connect_RegionGroup> Connect_RegionGroups
		{
			get
			{
				return this.GetTable<Connect_RegionGroup>();
			}
		}
		
		public System.Data.Linq.Table<Connect_RegionGroupUrl> Connect_RegionGroupUrls
		{
			get
			{
				return this.GetTable<Connect_RegionGroupUrl>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Common> CRM_Commons
		{
			get
			{
				return this.GetTable<CRM_Common>();
			}
		}
		
		public System.Data.Linq.Table<crm_Customer> crm_Customers
		{
			get
			{
				return this.GetTable<crm_Customer>();
			}
		}
		
		public System.Data.Linq.Table<crm_DevelopmentAssignment> crm_DevelopmentAssignments
		{
			get
			{
				return this.GetTable<crm_DevelopmentAssignment>();
			}
		}
		
		public System.Data.Linq.Table<crm_DevelopmentAssignments_Type> crm_DevelopmentAssignments_Types
		{
			get
			{
				return this.GetTable<crm_DevelopmentAssignments_Type>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Filial> CRM_Filials
		{
			get
			{
				return this.GetTable<CRM_Filial>();
			}
		}
		
		public System.Data.Linq.Table<CRM_ListName> CRM_ListNames
		{
			get
			{
				return this.GetTable<CRM_ListName>();
			}
		}
		
		public System.Data.Linq.Table<CRM_MailLog> CRM_MailLogs
		{
			get
			{
				return this.GetTable<CRM_MailLog>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Note> CRM_Notes
		{
			get
			{
				return this.GetTable<CRM_Note>();
			}
		}
		
		public System.Data.Linq.Table<CRM_PartnerData> CRM_PartnerDatas
		{
			get
			{
				return this.GetTable<CRM_PartnerData>();
			}
		}
		
		public System.Data.Linq.Table<CRM_PartnerOffer> CRM_PartnerOffers
		{
			get
			{
				return this.GetTable<CRM_PartnerOffer>();
			}
		}
		
		public System.Data.Linq.Table<CRM_Path> CRM_Paths
		{
			get
			{
				return this.GetTable<CRM_Path>();
			}
		}
		
		public System.Data.Linq.Table<crm_Person> crm_Persons
		{
			get
			{
				return this.GetTable<crm_Person>();
			}
		}
		
		public System.Data.Linq.Table<crm_Person_X_PersonProperty> crm_Person_X_PersonProperties
		{
			get
			{
				return this.GetTable<crm_Person_X_PersonProperty>();
			}
		}
		
		public System.Data.Linq.Table<CRM_PersonPresentation> CRM_PersonPresentations
		{
			get
			{
				return this.GetTable<CRM_PersonPresentation>();
			}
		}
		
		public System.Data.Linq.Table<crm_PersonProperty> crm_PersonProperties
		{
			get
			{
				return this.GetTable<crm_PersonProperty>();
			}
		}
		
		public System.Data.Linq.Table<crm_staffreport> crm_staffreports
		{
			get
			{
				return this.GetTable<crm_staffreport>();
			}
		}
		
		public System.Data.Linq.Table<crm_staffreport_budget> crm_staffreport_budgets
		{
			get
			{
				return this.GetTable<crm_staffreport_budget>();
			}
		}
		
		public System.Data.Linq.Table<crm_staffreport_budgetItem> crm_staffreport_budgetItems
		{
			get
			{
				return this.GetTable<crm_staffreport_budgetItem>();
			}
		}
		
		public System.Data.Linq.Table<crm_staffreport_Customer_X_Report> crm_staffreport_Customer_X_Reports
		{
			get
			{
				return this.GetTable<crm_staffreport_Customer_X_Report>();
			}
		}
		
		public System.Data.Linq.Table<crm_staffreport_Report> crm_staffreport_Reports
		{
			get
			{
				return this.GetTable<crm_staffreport_Report>();
			}
		}
		
		public System.Data.Linq.Table<crm_staffreport_ReportType> crm_staffreport_ReportTypes
		{
			get
			{
				return this.GetTable<crm_staffreport_ReportType>();
			}
		}
		
		public System.Data.Linq.Table<crm_tender> crm_tenders
		{
			get
			{
				return this.GetTable<crm_tender>();
			}
		}
		
		public System.Data.Linq.Table<crm_tender_consultant> crm_tender_consultants
		{
			get
			{
				return this.GetTable<crm_tender_consultant>();
			}
		}
		
		public System.Data.Linq.Table<CRM_TmpOldSB> CRM_TmpOldSBs
		{
			get
			{
				return this.GetTable<CRM_TmpOldSB>();
			}
		}
		
		public System.Data.Linq.Table<CRM_UserSignature> CRM_UserSignatures
		{
			get
			{
				return this.GetTable<CRM_UserSignature>();
			}
		}
		
		public System.Data.Linq.Table<Dearcom_BookingPublicCategory> Dearcom_BookingPublicCategories
		{
			get
			{
				return this.GetTable<Dearcom_BookingPublicCategory>();
			}
		}
		
		public System.Data.Linq.Table<Dearcom_BookingPublicItem> Dearcom_BookingPublicItems
		{
			get
			{
				return this.GetTable<Dearcom_BookingPublicItem>();
			}
		}
		
		public System.Data.Linq.Table<Dearcom_BookingUserData> Dearcom_BookingUserDatas
		{
			get
			{
				return this.GetTable<Dearcom_BookingUserData>();
			}
		}
		
		public System.Data.Linq.Table<DocumentArchive> DocumentArchives
		{
			get
			{
				return this.GetTable<DocumentArchive>();
			}
		}
		
		public System.Data.Linq.Table<DocumentArchive_X_Site> DocumentArchive_X_Sites
		{
			get
			{
				return this.GetTable<DocumentArchive_X_Site>();
			}
		}
		
		public System.Data.Linq.Table<DocumentCategory> DocumentCategories
		{
			get
			{
				return this.GetTable<DocumentCategory>();
			}
		}
		
		public System.Data.Linq.Table<DocumentCategories_X_aspnet_Role> DocumentCategories_X_aspnet_Roles
		{
			get
			{
				return this.GetTable<DocumentCategories_X_aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<DocumentCategoriesTreeStructure> DocumentCategoriesTreeStructures
		{
			get
			{
				return this.GetTable<DocumentCategoriesTreeStructure>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<Documents_X_aspnet_Role> Documents_X_aspnet_Roles
		{
			get
			{
				return this.GetTable<Documents_X_aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<dtproperty> dtproperties
		{
			get
			{
				return this.GetTable<dtproperty>();
			}
		}
		
		public System.Data.Linq.Table<ErrorLog> ErrorLogs
		{
			get
			{
				return this.GetTable<ErrorLog>();
			}
		}
		
		public System.Data.Linq.Table<FileArchive_Group> FileArchive_Groups
		{
			get
			{
				return this.GetTable<FileArchive_Group>();
			}
		}
		
		public System.Data.Linq.Table<FileArchive_UsersInGroup> FileArchive_UsersInGroups
		{
			get
			{
				return this.GetTable<FileArchive_UsersInGroup>();
			}
		}
		
		public System.Data.Linq.Table<Form_Alternative> Form_Alternatives
		{
			get
			{
				return this.GetTable<Form_Alternative>();
			}
		}
		
		public System.Data.Linq.Table<Form_Answer> Form_Answers
		{
			get
			{
				return this.GetTable<Form_Answer>();
			}
		}
		
		public System.Data.Linq.Table<Form_Form> Form_Forms
		{
			get
			{
				return this.GetTable<Form_Form>();
			}
		}
		
		public System.Data.Linq.Table<Form_Mail> Form_Mails
		{
			get
			{
				return this.GetTable<Form_Mail>();
			}
		}
		
		public System.Data.Linq.Table<Form_Question> Form_Questions
		{
			get
			{
				return this.GetTable<Form_Question>();
			}
		}
		
		public System.Data.Linq.Table<Form_Responder> Form_Responders
		{
			get
			{
				return this.GetTable<Form_Responder>();
			}
		}
		
		public System.Data.Linq.Table<Form_Section> Form_Sections
		{
			get
			{
				return this.GetTable<Form_Section>();
			}
		}
		
		public System.Data.Linq.Table<Form_Setting> Form_Settings
		{
			get
			{
				return this.GetTable<Form_Setting>();
			}
		}
		
		public System.Data.Linq.Table<Form_User> Form_Users
		{
			get
			{
				return this.GetTable<Form_User>();
			}
		}
		
		public System.Data.Linq.Table<Forum_AccessType> Forum_AccessTypes
		{
			get
			{
				return this.GetTable<Forum_AccessType>();
			}
		}
		
		public System.Data.Linq.Table<Forum_Forum> Forum_Forums
		{
			get
			{
				return this.GetTable<Forum_Forum>();
			}
		}
		
		public System.Data.Linq.Table<Forum_Message> Forum_Messages
		{
			get
			{
				return this.GetTable<Forum_Message>();
			}
		}
		
		public System.Data.Linq.Table<Forum_Reply> Forum_Replies
		{
			get
			{
				return this.GetTable<Forum_Reply>();
			}
		}
		
		public System.Data.Linq.Table<Forum_Thread> Forum_Threads
		{
			get
			{
				return this.GetTable<Forum_Thread>();
			}
		}
		
		public System.Data.Linq.Table<Forum_UserGroup> Forum_UserGroups
		{
			get
			{
				return this.GetTable<Forum_UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<Forum_UserGroups_Forum> Forum_UserGroups_Forums
		{
			get
			{
				return this.GetTable<Forum_UserGroups_Forum>();
			}
		}
		
		public System.Data.Linq.Table<Forum_User> Forum_Users
		{
			get
			{
				return this.GetTable<Forum_User>();
			}
		}
		
		public System.Data.Linq.Table<Forum_Users_Group> Forum_Users_Groups
		{
			get
			{
				return this.GetTable<Forum_Users_Group>();
			}
		}
		
		public System.Data.Linq.Table<Fraimit_Position> Fraimit_Positions
		{
			get
			{
				return this.GetTable<Fraimit_Position>();
			}
		}
		
		public System.Data.Linq.Table<Fraimit_Unit> Fraimit_Units
		{
			get
			{
				return this.GetTable<Fraimit_Unit>();
			}
		}
		
		public System.Data.Linq.Table<Fraimit_UnitType> Fraimit_UnitTypes
		{
			get
			{
				return this.GetTable<Fraimit_UnitType>();
			}
		}
		
		public System.Data.Linq.Table<Fraimit_User> Fraimit_Users
		{
			get
			{
				return this.GetTable<Fraimit_User>();
			}
		}
		
		public System.Data.Linq.Table<Franklin_avtal> Franklin_avtals
		{
			get
			{
				return this.GetTable<Franklin_avtal>();
			}
		}
		
		public System.Data.Linq.Table<GlobalFashion_Favorite> GlobalFashion_Favorites
		{
			get
			{
				return this.GetTable<GlobalFashion_Favorite>();
			}
		}
		
		public System.Data.Linq.Table<GlobalFashion_FavoriteType> GlobalFashion_FavoriteTypes
		{
			get
			{
				return this.GetTable<GlobalFashion_FavoriteType>();
			}
		}
		
		public System.Data.Linq.Table<Globalrefund_User_Address> Globalrefund_User_Addresses
		{
			get
			{
				return this.GetTable<Globalrefund_User_Address>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<Group1> Group1s
		{
			get
			{
				return this.GetTable<Group1>();
			}
		}
		
		public System.Data.Linq.Table<GroupSubscriber> GroupSubscribers
		{
			get
			{
				return this.GetTable<GroupSubscriber>();
			}
		}
		
		public System.Data.Linq.Table<GS_BookingPublicCategory> GS_BookingPublicCategories
		{
			get
			{
				return this.GetTable<GS_BookingPublicCategory>();
			}
		}
		
		public System.Data.Linq.Table<GS_BookingPublicItem> GS_BookingPublicItems
		{
			get
			{
				return this.GetTable<GS_BookingPublicItem>();
			}
		}
		
		public System.Data.Linq.Table<GS_BookingUserData> GS_BookingUserDatas
		{
			get
			{
				return this.GetTable<GS_BookingUserData>();
			}
		}
		
		public System.Data.Linq.Table<GS_Signature> GS_Signatures
		{
			get
			{
				return this.GetTable<GS_Signature>();
			}
		}
		
		public System.Data.Linq.Table<Husfest_Anmalan> Husfest_Anmalans
		{
			get
			{
				return this.GetTable<Husfest_Anmalan>();
			}
		}
		
		public System.Data.Linq.Table<Husfest_Tavling> Husfest_Tavlings
		{
			get
			{
				return this.GetTable<Husfest_Tavling>();
			}
		}
		
		public System.Data.Linq.Table<Intranet> Intranets
		{
			get
			{
				return this.GetTable<Intranet>();
			}
		}
		
		public System.Data.Linq.Table<Intranet_address> Intranet_addresses
		{
			get
			{
				return this.GetTable<Intranet_address>();
			}
		}
		
		public System.Data.Linq.Table<IntranetRoleInfo> IntranetRoleInfos
		{
			get
			{
				return this.GetTable<IntranetRoleInfo>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<ListObject> ListObjects
		{
			get
			{
				return this.GetTable<ListObject>();
			}
		}
		
		public System.Data.Linq.Table<MessageBoard> MessageBoards
		{
			get
			{
				return this.GetTable<MessageBoard>();
			}
		}
		
		public System.Data.Linq.Table<Module> Modules
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<namnsdagar> namnsdagars
		{
			get
			{
				return this.GetTable<namnsdagar>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
		
		public System.Data.Linq.Table<Newsletter> Newsletters
		{
			get
			{
				return this.GetTable<Newsletter>();
			}
		}
		
		public System.Data.Linq.Table<NewsletterHistory> NewsletterHistories
		{
			get
			{
				return this.GetTable<NewsletterHistory>();
			}
		}
		
		public System.Data.Linq.Table<NewsLetterLog> NewsLetterLogs
		{
			get
			{
				return this.GetTable<NewsLetterLog>();
			}
		}
		
		public System.Data.Linq.Table<Object> Objects
		{
			get
			{
				return this.GetTable<Object>();
			}
		}
		
		public System.Data.Linq.Table<Object_Popular> Object_Populars
		{
			get
			{
				return this.GetTable<Object_Popular>();
			}
		}
		
		public System.Data.Linq.Table<Object_VersionControl> Object_VersionControls
		{
			get
			{
				return this.GetTable<Object_VersionControl>();
			}
		}
		
		public System.Data.Linq.Table<Object_X_Form_Form> Object_X_Form_Forms
		{
			get
			{
				return this.GetTable<Object_X_Form_Form>();
			}
		}
		
		public System.Data.Linq.Table<Object_X_SiteTemplate> Object_X_SiteTemplates
		{
			get
			{
				return this.GetTable<Object_X_SiteTemplate>();
			}
		}
		
		public System.Data.Linq.Table<ObjectComment> ObjectComments
		{
			get
			{
				return this.GetTable<ObjectComment>();
			}
		}
		
		public System.Data.Linq.Table<ObjectsInRole> ObjectsInRoles
		{
			get
			{
				return this.GetTable<ObjectsInRole>();
			}
		}
		
		public System.Data.Linq.Table<ObjectStat> ObjectStats
		{
			get
			{
				return this.GetTable<ObjectStat>();
			}
		}
		
		public System.Data.Linq.Table<ObjectType> ObjectTypes
		{
			get
			{
				return this.GetTable<ObjectType>();
			}
		}
		
		public System.Data.Linq.Table<OLDSB_TMP> OLDSB_TMPs
		{
			get
			{
				return this.GetTable<OLDSB_TMP>();
			}
		}
		
		public System.Data.Linq.Table<Photo> Photos
		{
			get
			{
				return this.GetTable<Photo>();
			}
		}
		
		public System.Data.Linq.Table<PhotoCategory> PhotoCategories
		{
			get
			{
				return this.GetTable<PhotoCategory>();
			}
		}
		
		public System.Data.Linq.Table<PhotoInRole> PhotoInRoles
		{
			get
			{
				return this.GetTable<PhotoInRole>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_Area> Planinglist_Areas
		{
			get
			{
				return this.GetTable<Planinglist_Area>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_Comment> Planinglist_Comments
		{
			get
			{
				return this.GetTable<Planinglist_Comment>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_Day> Planinglist_Days
		{
			get
			{
				return this.GetTable<Planinglist_Day>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_Object> Planinglist_Objects
		{
			get
			{
				return this.GetTable<Planinglist_Object>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_ObjectArea> Planinglist_ObjectAreas
		{
			get
			{
				return this.GetTable<Planinglist_ObjectArea>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_ObjectAreaXResource> Planinglist_ObjectAreaXResources
		{
			get
			{
				return this.GetTable<Planinglist_ObjectAreaXResource>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_ObjectHatch> Planinglist_ObjectHatches
		{
			get
			{
				return this.GetTable<Planinglist_ObjectHatch>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_ObjectType> Planinglist_ObjectTypes
		{
			get
			{
				return this.GetTable<Planinglist_ObjectType>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_Resource> Planinglist_Resources
		{
			get
			{
				return this.GetTable<Planinglist_Resource>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_ResourceType> Planinglist_ResourceTypes
		{
			get
			{
				return this.GetTable<Planinglist_ResourceType>();
			}
		}
		
		public System.Data.Linq.Table<Planinglist_Site> Planinglist_Sites
		{
			get
			{
				return this.GetTable<Planinglist_Site>();
			}
		}
		
		public System.Data.Linq.Table<Planininglist_ObjectXResource> Planininglist_ObjectXResources
		{
			get
			{
				return this.GetTable<Planininglist_ObjectXResource>();
			}
		}
		
		public System.Data.Linq.Table<PlanningList_Comment> PlanningList_Comments
		{
			get
			{
				return this.GetTable<PlanningList_Comment>();
			}
		}
		
		public System.Data.Linq.Table<PlanningList_Project> PlanningList_Projects
		{
			get
			{
				return this.GetTable<PlanningList_Project>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Products_Category> Products_Categories
		{
			get
			{
				return this.GetTable<Products_Category>();
			}
		}
		
		public System.Data.Linq.Table<Products_File> Products_Files
		{
			get
			{
				return this.GetTable<Products_File>();
			}
		}
		
		public System.Data.Linq.Table<Products_Files_X_Setting> Products_Files_X_Settings
		{
			get
			{
				return this.GetTable<Products_Files_X_Setting>();
			}
		}
		
		public System.Data.Linq.Table<Products_Group> Products_Groups
		{
			get
			{
				return this.GetTable<Products_Group>();
			}
		}
		
		public System.Data.Linq.Table<Products_MainGroup> Products_MainGroups
		{
			get
			{
				return this.GetTable<Products_MainGroup>();
			}
		}
		
		public System.Data.Linq.Table<Products_Object_X_MainGroup> Products_Object_X_MainGroups
		{
			get
			{
				return this.GetTable<Products_Object_X_MainGroup>();
			}
		}
		
		public System.Data.Linq.Table<Products_Picture> Products_Pictures
		{
			get
			{
				return this.GetTable<Products_Picture>();
			}
		}
		
		public System.Data.Linq.Table<Products_Picture_Type> Products_Picture_Types
		{
			get
			{
				return this.GetTable<Products_Picture_Type>();
			}
		}
		
		public System.Data.Linq.Table<Products_Picture_X_Setting> Products_Picture_X_Settings
		{
			get
			{
				return this.GetTable<Products_Picture_X_Setting>();
			}
		}
		
		public System.Data.Linq.Table<Products_Product> Products_Products
		{
			get
			{
				return this.GetTable<Products_Product>();
			}
		}
		
		public System.Data.Linq.Table<Products_Products_X_Property> Products_Products_X_Properties
		{
			get
			{
				return this.GetTable<Products_Products_X_Property>();
			}
		}
		
		public System.Data.Linq.Table<Products_Products_X_Setting> Products_Products_X_Settings
		{
			get
			{
				return this.GetTable<Products_Products_X_Setting>();
			}
		}
		
		public System.Data.Linq.Table<Products_ProductsProperties_X_Setting> Products_ProductsProperties_X_Settings
		{
			get
			{
				return this.GetTable<Products_ProductsProperties_X_Setting>();
			}
		}
		
		public System.Data.Linq.Table<Products_Property> Products_Properties
		{
			get
			{
				return this.GetTable<Products_Property>();
			}
		}
		
		public System.Data.Linq.Table<Products_PropertiesValueName> Products_PropertiesValueNames
		{
			get
			{
				return this.GetTable<Products_PropertiesValueName>();
			}
		}
		
		public System.Data.Linq.Table<Products_Setting> Products_Settings
		{
			get
			{
				return this.GetTable<Products_Setting>();
			}
		}
		
		public System.Data.Linq.Table<Products_Template> Products_Templates
		{
			get
			{
				return this.GetTable<Products_Template>();
			}
		}
		
		public System.Data.Linq.Table<Products_Templates_X_Property> Products_Templates_X_Properties
		{
			get
			{
				return this.GetTable<Products_Templates_X_Property>();
			}
		}
		
		public System.Data.Linq.Table<Products_X_Site> Products_X_Sites
		{
			get
			{
				return this.GetTable<Products_X_Site>();
			}
		}
		
		public System.Data.Linq.Table<QuizAnswer> QuizAnswers
		{
			get
			{
				return this.GetTable<QuizAnswer>();
			}
		}
		
		public System.Data.Linq.Table<QuizIP> QuizIPs
		{
			get
			{
				return this.GetTable<QuizIP>();
			}
		}
		
		public System.Data.Linq.Table<QuizQuestion> QuizQuestions
		{
			get
			{
				return this.GetTable<QuizQuestion>();
			}
		}
		
		public System.Data.Linq.Table<RetailerList> RetailerLists
		{
			get
			{
				return this.GetTable<RetailerList>();
			}
		}
		
		public System.Data.Linq.Table<RetailerListCountry> RetailerListCountries
		{
			get
			{
				return this.GetTable<RetailerListCountry>();
			}
		}
		
		public System.Data.Linq.Table<RoleGroup> RoleGroups
		{
			get
			{
				return this.GetTable<RoleGroup>();
			}
		}
		
		public System.Data.Linq.Table<RoleGroups_X_aspnet_Role> RoleGroups_X_aspnet_Roles
		{
			get
			{
				return this.GetTable<RoleGroups_X_aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<satila_AreaProperty> satila_AreaProperties
		{
			get
			{
				return this.GetTable<satila_AreaProperty>();
			}
		}
		
		public System.Data.Linq.Table<satila_Area> satila_Areas
		{
			get
			{
				return this.GetTable<satila_Area>();
			}
		}
		
		public System.Data.Linq.Table<satila_File> satila_Files
		{
			get
			{
				return this.GetTable<satila_File>();
			}
		}
		
		public System.Data.Linq.Table<satila_Lokal> satila_Lokals
		{
			get
			{
				return this.GetTable<satila_Lokal>();
			}
		}
		
		public System.Data.Linq.Table<satila_Lokal_attribute> satila_Lokal_attributes
		{
			get
			{
				return this.GetTable<satila_Lokal_attribute>();
			}
		}
		
		public System.Data.Linq.Table<satila_LokalType> satila_LokalTypes
		{
			get
			{
				return this.GetTable<satila_LokalType>();
			}
		}
		
		public System.Data.Linq.Table<satila_Property> satila_Properties
		{
			get
			{
				return this.GetTable<satila_Property>();
			}
		}
		
		public System.Data.Linq.Table<satila_Type> satila_Types
		{
			get
			{
				return this.GetTable<satila_Type>();
			}
		}
		
		public System.Data.Linq.Table<sh_ShareHolding> sh_ShareHoldings
		{
			get
			{
				return this.GetTable<sh_ShareHolding>();
			}
		}
		
		public System.Data.Linq.Table<Site> Sites
		{
			get
			{
				return this.GetTable<Site>();
			}
		}
		
		public System.Data.Linq.Table<SiteLanguage> SiteLanguages
		{
			get
			{
				return this.GetTable<SiteLanguage>();
			}
		}
		
		public System.Data.Linq.Table<SiteModule> SiteModules
		{
			get
			{
				return this.GetTable<SiteModule>();
			}
		}
		
		public System.Data.Linq.Table<SiteObjectType> SiteObjectTypes
		{
			get
			{
				return this.GetTable<SiteObjectType>();
			}
		}
		
		public System.Data.Linq.Table<SiteTemplate> SiteTemplates
		{
			get
			{
				return this.GetTable<SiteTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_Calender> Skogshjortarna_Calenders
		{
			get
			{
				return this.GetTable<Skogshjortarna_Calender>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_Calender_X_TrainingGroup> Skogshjortarna_Calender_X_TrainingGroups
		{
			get
			{
				return this.GetTable<Skogshjortarna_Calender_X_TrainingGroup>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_CalenderGroupType> Skogshjortarna_CalenderGroupTypes
		{
			get
			{
				return this.GetTable<Skogshjortarna_CalenderGroupType>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_CalenderType> Skogshjortarna_CalenderTypes
		{
			get
			{
				return this.GetTable<Skogshjortarna_CalenderType>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_CompetitionType> Skogshjortarna_CompetitionTypes
		{
			get
			{
				return this.GetTable<Skogshjortarna_CompetitionType>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_InternalComp> Skogshjortarna_InternalComps
		{
			get
			{
				return this.GetTable<Skogshjortarna_InternalComp>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_InternalComp_X_aspnet_User> Skogshjortarna_InternalComp_X_aspnet_Users
		{
			get
			{
				return this.GetTable<Skogshjortarna_InternalComp_X_aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_NewsOwner> Skogshjortarna_NewsOwners
		{
			get
			{
				return this.GetTable<Skogshjortarna_NewsOwner>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_SnowStatus> Skogshjortarna_SnowStatus
		{
			get
			{
				return this.GetTable<Skogshjortarna_SnowStatus>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_SnowStatusItem> Skogshjortarna_SnowStatusItems
		{
			get
			{
				return this.GetTable<Skogshjortarna_SnowStatusItem>();
			}
		}
		
		public System.Data.Linq.Table<skogshjortarna_temp_anv> skogshjortarna_temp_anvs
		{
			get
			{
				return this.GetTable<skogshjortarna_temp_anv>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_TipsPromenad> Skogshjortarna_TipsPromenads
		{
			get
			{
				return this.GetTable<Skogshjortarna_TipsPromenad>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_TrainingDiary> Skogshjortarna_TrainingDiaries
		{
			get
			{
				return this.GetTable<Skogshjortarna_TrainingDiary>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_TrainingDiary_Training> Skogshjortarna_TrainingDiary_Trainings
		{
			get
			{
				return this.GetTable<Skogshjortarna_TrainingDiary_Training>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_TrainingDiary_TrainingType> Skogshjortarna_TrainingDiary_TrainingTypes
		{
			get
			{
				return this.GetTable<Skogshjortarna_TrainingDiary_TrainingType>();
			}
		}
		
		public System.Data.Linq.Table<Skogshjortarna_TrainingGroup> Skogshjortarna_TrainingGroups
		{
			get
			{
				return this.GetTable<Skogshjortarna_TrainingGroup>();
			}
		}
		
		public System.Data.Linq.Table<SMS_Customer> SMS_Customers
		{
			get
			{
				return this.GetTable<SMS_Customer>();
			}
		}
		
		public System.Data.Linq.Table<SMS_ErrorLog> SMS_ErrorLogs
		{
			get
			{
				return this.GetTable<SMS_ErrorLog>();
			}
		}
		
		public System.Data.Linq.Table<SMS_Recipient> SMS_Recipients
		{
			get
			{
				return this.GetTable<SMS_Recipient>();
			}
		}
		
		public System.Data.Linq.Table<SMS_SendHistory> SMS_SendHistories
		{
			get
			{
				return this.GetTable<SMS_SendHistory>();
			}
		}
		
		public System.Data.Linq.Table<Stavdal_Img_Rotator> Stavdal_Img_Rotators
		{
			get
			{
				return this.GetTable<Stavdal_Img_Rotator>();
			}
		}
		
		public System.Data.Linq.Table<Stavdal_ListRole> Stavdal_ListRoles
		{
			get
			{
				return this.GetTable<Stavdal_ListRole>();
			}
		}
		
		public System.Data.Linq.Table<Stavdal_ProvidersList> Stavdal_ProvidersLists
		{
			get
			{
				return this.GetTable<Stavdal_ProvidersList>();
			}
		}
		
		public System.Data.Linq.Table<Stavdal_ReportItem> Stavdal_ReportItems
		{
			get
			{
				return this.GetTable<Stavdal_ReportItem>();
			}
		}
		
		public System.Data.Linq.Table<Stavdal_ReportRole> Stavdal_ReportRoles
		{
			get
			{
				return this.GetTable<Stavdal_ReportRole>();
			}
		}
		
		public System.Data.Linq.Table<Stavdal_Report> Stavdal_Reports
		{
			get
			{
				return this.GetTable<Stavdal_Report>();
			}
		}
		
		public System.Data.Linq.Table<Step> Steps
		{
			get
			{
				return this.GetTable<Step>();
			}
		}
		
		public System.Data.Linq.Table<Subscriber> Subscribers
		{
			get
			{
				return this.GetTable<Subscriber>();
			}
		}
		
		public System.Data.Linq.Table<support> supports
		{
			get
			{
				return this.GetTable<support>();
			}
		}
		
		public System.Data.Linq.Table<TechnicalTip_Answer> TechnicalTip_Answers
		{
			get
			{
				return this.GetTable<TechnicalTip_Answer>();
			}
		}
		
		public System.Data.Linq.Table<TechnicalTip_Question> TechnicalTip_Questions
		{
			get
			{
				return this.GetTable<TechnicalTip_Question>();
			}
		}
		
		public System.Data.Linq.Table<Text> Texts
		{
			get
			{
				return this.GetTable<Text>();
			}
		}
		
		public System.Data.Linq.Table<Theme_AreaObject> Theme_AreaObjects
		{
			get
			{
				return this.GetTable<Theme_AreaObject>();
			}
		}
		
		public System.Data.Linq.Table<Theme_Area> Theme_Areas
		{
			get
			{
				return this.GetTable<Theme_Area>();
			}
		}
		
		public System.Data.Linq.Table<tmp_crm_contact> tmp_crm_contacts
		{
			get
			{
				return this.GetTable<tmp_crm_contact>();
			}
		}
		
		public System.Data.Linq.Table<TreeStructure> TreeStructures
		{
			get
			{
				return this.GetTable<TreeStructure>();
			}
		}
		
		public System.Data.Linq.Table<UserLog> UserLogs
		{
			get
			{
				return this.GetTable<UserLog>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<AimDoc> AimDocs
		{
			get
			{
				return this.GetTable<AimDoc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.Form_ExternalConnections")]
	public partial class Form_ExternalConnection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _URL;
		
		private int _Site_FK;
		
		private EntitySet<Form_ExternalConnections_Property> _Form_ExternalConnections_Properties;
		
		private EntitySet<Form_ExternalConnections_ReturnProperty> _Form_ExternalConnections_ReturnProperties;
		
		private EntitySet<Form_Form> _Form_Forms;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    #endregion
		
		public Form_ExternalConnection()
		{
			this._Form_ExternalConnections_Properties = new EntitySet<Form_ExternalConnections_Property>(new Action<Form_ExternalConnections_Property>(this.attach_Form_ExternalConnections_Properties), new Action<Form_ExternalConnections_Property>(this.detach_Form_ExternalConnections_Properties));
			this._Form_ExternalConnections_ReturnProperties = new EntitySet<Form_ExternalConnections_ReturnProperty>(new Action<Form_ExternalConnections_ReturnProperty>(this.attach_Form_ExternalConnections_ReturnProperties), new Action<Form_ExternalConnections_ReturnProperty>(this.detach_Form_ExternalConnections_ReturnProperties));
			this._Form_Forms = new EntitySet<Form_Form>(new Action<Form_Form>(this.attach_Form_Forms), new Action<Form_Form>(this.detach_Form_Forms));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(1000)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnection_Form_ExternalConnections_Property", Storage="_Form_ExternalConnections_Properties", ThisKey="ID", OtherKey="ExternalConnection_FK")]
		public EntitySet<Form_ExternalConnections_Property> Form_ExternalConnections_Properties
		{
			get
			{
				return this._Form_ExternalConnections_Properties;
			}
			set
			{
				this._Form_ExternalConnections_Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnection_Form_ExternalConnections_ReturnProperty", Storage="_Form_ExternalConnections_ReturnProperties", ThisKey="ID", OtherKey="ExternalConnection_FK")]
		public EntitySet<Form_ExternalConnections_ReturnProperty> Form_ExternalConnections_ReturnProperties
		{
			get
			{
				return this._Form_ExternalConnections_ReturnProperties;
			}
			set
			{
				this._Form_ExternalConnections_ReturnProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnection_Form_Form", Storage="_Form_Forms", ThisKey="ID", OtherKey="ExternalConnection_FK")]
		public EntitySet<Form_Form> Form_Forms
		{
			get
			{
				return this._Form_Forms;
			}
			set
			{
				this._Form_Forms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Form_ExternalConnection", Storage="_Site", ThisKey="Site_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Form_ExternalConnections.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Form_ExternalConnections.Add(this);
						this._Site_FK = value.SiteID;
					}
					else
					{
						this._Site_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_ExternalConnections_Properties(Form_ExternalConnections_Property entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnection = this;
		}
		
		private void detach_Form_ExternalConnections_Properties(Form_ExternalConnections_Property entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnection = null;
		}
		
		private void attach_Form_ExternalConnections_ReturnProperties(Form_ExternalConnections_ReturnProperty entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnection = this;
		}
		
		private void detach_Form_ExternalConnections_ReturnProperties(Form_ExternalConnections_ReturnProperty entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnection = null;
		}
		
		private void attach_Form_Forms(Form_Form entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnection = this;
		}
		
		private void detach_Form_Forms(Form_Form entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vacation")]
	public partial class Vacation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID;
		
		private System.Guid _User_FK;
		
		private System.DateTime _DateFrom;
		
		private System.DateTime _DateTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnUser_FKChanging(System.Guid value);
    partial void OnUser_FKChanged();
    partial void OnDateFromChanging(System.DateTime value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.DateTime value);
    partial void OnDateToChanged();
    #endregion
		
		public Vacation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_FK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid User_FK
		{
			get
			{
				return this._User_FK;
			}
			set
			{
				if ((this._User_FK != value))
				{
					this.OnUser_FKChanging(value);
					this.SendPropertyChanging();
					this._User_FK = value;
					this.SendPropertyChanged("User_FK");
					this.OnUser_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime NOT NULL")]
		public System.DateTime DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="DateTime NOT NULL")]
		public System.DateTime DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.Form_ExternalConnections_Properties")]
	public partial class Form_ExternalConnections_Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PropertyName;
		
		private int _ExternalConnection_FK;
		
		private EntitySet<Form_ExternalConnections_Value> _Form_ExternalConnections_Values;
		
		private EntityRef<Form_ExternalConnection> _Form_ExternalConnection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnExternalConnection_FKChanging(int value);
    partial void OnExternalConnection_FKChanged();
    #endregion
		
		public Form_ExternalConnections_Property()
		{
			this._Form_ExternalConnections_Values = new EntitySet<Form_ExternalConnections_Value>(new Action<Form_ExternalConnections_Value>(this.attach_Form_ExternalConnections_Values), new Action<Form_ExternalConnections_Value>(this.detach_Form_ExternalConnections_Values));
			this._Form_ExternalConnection = default(EntityRef<Form_ExternalConnection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalConnection_FK", DbType="Int NOT NULL")]
		public int ExternalConnection_FK
		{
			get
			{
				return this._ExternalConnection_FK;
			}
			set
			{
				if ((this._ExternalConnection_FK != value))
				{
					if (this._Form_ExternalConnection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExternalConnection_FKChanging(value);
					this.SendPropertyChanging();
					this._ExternalConnection_FK = value;
					this.SendPropertyChanged("ExternalConnection_FK");
					this.OnExternalConnection_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnections_Property_Form_ExternalConnections_Value", Storage="_Form_ExternalConnections_Values", ThisKey="ID", OtherKey="ExternalConnection_Property_FK")]
		public EntitySet<Form_ExternalConnections_Value> Form_ExternalConnections_Values
		{
			get
			{
				return this._Form_ExternalConnections_Values;
			}
			set
			{
				this._Form_ExternalConnections_Values.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnection_Form_ExternalConnections_Property", Storage="_Form_ExternalConnection", ThisKey="ExternalConnection_FK", OtherKey="ID", IsForeignKey=true)]
		public Form_ExternalConnection Form_ExternalConnection
		{
			get
			{
				return this._Form_ExternalConnection.Entity;
			}
			set
			{
				Form_ExternalConnection previousValue = this._Form_ExternalConnection.Entity;
				if (((previousValue != value) 
							|| (this._Form_ExternalConnection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_ExternalConnection.Entity = null;
						previousValue.Form_ExternalConnections_Properties.Remove(this);
					}
					this._Form_ExternalConnection.Entity = value;
					if ((value != null))
					{
						value.Form_ExternalConnections_Properties.Add(this);
						this._ExternalConnection_FK = value.ID;
					}
					else
					{
						this._ExternalConnection_FK = default(int);
					}
					this.SendPropertyChanged("Form_ExternalConnection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_ExternalConnections_Values(Form_ExternalConnections_Value entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnections_Property = this;
		}
		
		private void detach_Form_ExternalConnections_Values(Form_ExternalConnections_Value entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnections_Property = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.Form_ExternalConnections_ReturnProperties")]
	public partial class Form_ExternalConnections_ReturnProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _ExternalConnection_FK;
		
		private EntitySet<Form_ExternalConnections_ReturnValue> _Form_ExternalConnections_ReturnValues;
		
		private EntityRef<Form_ExternalConnection> _Form_ExternalConnection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExternalConnection_FKChanging(int value);
    partial void OnExternalConnection_FKChanged();
    #endregion
		
		public Form_ExternalConnections_ReturnProperty()
		{
			this._Form_ExternalConnections_ReturnValues = new EntitySet<Form_ExternalConnections_ReturnValue>(new Action<Form_ExternalConnections_ReturnValue>(this.attach_Form_ExternalConnections_ReturnValues), new Action<Form_ExternalConnections_ReturnValue>(this.detach_Form_ExternalConnections_ReturnValues));
			this._Form_ExternalConnection = default(EntityRef<Form_ExternalConnection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalConnection_FK", DbType="Int NOT NULL")]
		public int ExternalConnection_FK
		{
			get
			{
				return this._ExternalConnection_FK;
			}
			set
			{
				if ((this._ExternalConnection_FK != value))
				{
					if (this._Form_ExternalConnection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExternalConnection_FKChanging(value);
					this.SendPropertyChanging();
					this._ExternalConnection_FK = value;
					this.SendPropertyChanged("ExternalConnection_FK");
					this.OnExternalConnection_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnections_ReturnProperty_Form_ExternalConnections_ReturnValue", Storage="_Form_ExternalConnections_ReturnValues", ThisKey="ID", OtherKey="ReturnProperty_FK")]
		public EntitySet<Form_ExternalConnections_ReturnValue> Form_ExternalConnections_ReturnValues
		{
			get
			{
				return this._Form_ExternalConnections_ReturnValues;
			}
			set
			{
				this._Form_ExternalConnections_ReturnValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnection_Form_ExternalConnections_ReturnProperty", Storage="_Form_ExternalConnection", ThisKey="ExternalConnection_FK", OtherKey="ID", IsForeignKey=true)]
		public Form_ExternalConnection Form_ExternalConnection
		{
			get
			{
				return this._Form_ExternalConnection.Entity;
			}
			set
			{
				Form_ExternalConnection previousValue = this._Form_ExternalConnection.Entity;
				if (((previousValue != value) 
							|| (this._Form_ExternalConnection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_ExternalConnection.Entity = null;
						previousValue.Form_ExternalConnections_ReturnProperties.Remove(this);
					}
					this._Form_ExternalConnection.Entity = value;
					if ((value != null))
					{
						value.Form_ExternalConnections_ReturnProperties.Add(this);
						this._ExternalConnection_FK = value.ID;
					}
					else
					{
						this._ExternalConnection_FK = default(int);
					}
					this.SendPropertyChanged("Form_ExternalConnection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_ExternalConnections_ReturnValues(Form_ExternalConnections_ReturnValue entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnections_ReturnProperty = this;
		}
		
		private void detach_Form_ExternalConnections_ReturnValues(Form_ExternalConnections_ReturnValue entity)
		{
			this.SendPropertyChanging();
			entity.Form_ExternalConnections_ReturnProperty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.Form_ExternalConnections_ReturnValues")]
	public partial class Form_ExternalConnections_ReturnValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private int _ReturnProperty_FK;
		
		private int _Form_FK;
		
		private int _Responder_FK;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<Form_ExternalConnections_ReturnProperty> _Form_ExternalConnections_ReturnProperty;
		
		private EntityRef<Form_Form> _Form_Form;
		
		private EntityRef<Form_Responder> _Form_Responder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnReturnProperty_FKChanging(int value);
    partial void OnReturnProperty_FKChanged();
    partial void OnForm_FKChanging(int value);
    partial void OnForm_FKChanged();
    partial void OnResponder_FKChanging(int value);
    partial void OnResponder_FKChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public Form_ExternalConnections_ReturnValue()
		{
			this._Form_ExternalConnections_ReturnProperty = default(EntityRef<Form_ExternalConnections_ReturnProperty>);
			this._Form_Form = default(EntityRef<Form_Form>);
			this._Form_Responder = default(EntityRef<Form_Responder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnProperty_FK", DbType="Int NOT NULL")]
		public int ReturnProperty_FK
		{
			get
			{
				return this._ReturnProperty_FK;
			}
			set
			{
				if ((this._ReturnProperty_FK != value))
				{
					if (this._Form_ExternalConnections_ReturnProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReturnProperty_FKChanging(value);
					this.SendPropertyChanging();
					this._ReturnProperty_FK = value;
					this.SendPropertyChanged("ReturnProperty_FK");
					this.OnReturnProperty_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_FK", DbType="Int NOT NULL")]
		public int Form_FK
		{
			get
			{
				return this._Form_FK;
			}
			set
			{
				if ((this._Form_FK != value))
				{
					if (this._Form_Form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForm_FKChanging(value);
					this.SendPropertyChanging();
					this._Form_FK = value;
					this.SendPropertyChanged("Form_FK");
					this.OnForm_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responder_FK", DbType="Int NOT NULL")]
		public int Responder_FK
		{
			get
			{
				return this._Responder_FK;
			}
			set
			{
				if ((this._Responder_FK != value))
				{
					if (this._Form_Responder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponder_FKChanging(value);
					this.SendPropertyChanging();
					this._Responder_FK = value;
					this.SendPropertyChanged("Responder_FK");
					this.OnResponder_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnections_ReturnProperty_Form_ExternalConnections_ReturnValue", Storage="_Form_ExternalConnections_ReturnProperty", ThisKey="ReturnProperty_FK", OtherKey="ID", IsForeignKey=true)]
		public Form_ExternalConnections_ReturnProperty Form_ExternalConnections_ReturnProperty
		{
			get
			{
				return this._Form_ExternalConnections_ReturnProperty.Entity;
			}
			set
			{
				Form_ExternalConnections_ReturnProperty previousValue = this._Form_ExternalConnections_ReturnProperty.Entity;
				if (((previousValue != value) 
							|| (this._Form_ExternalConnections_ReturnProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_ExternalConnections_ReturnProperty.Entity = null;
						previousValue.Form_ExternalConnections_ReturnValues.Remove(this);
					}
					this._Form_ExternalConnections_ReturnProperty.Entity = value;
					if ((value != null))
					{
						value.Form_ExternalConnections_ReturnValues.Add(this);
						this._ReturnProperty_FK = value.ID;
					}
					else
					{
						this._ReturnProperty_FK = default(int);
					}
					this.SendPropertyChanged("Form_ExternalConnections_ReturnProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Form_Form_ExternalConnections_ReturnValue", Storage="_Form_Form", ThisKey="Form_FK", OtherKey="FormID", IsForeignKey=true)]
		public Form_Form Form_Form
		{
			get
			{
				return this._Form_Form.Entity;
			}
			set
			{
				Form_Form previousValue = this._Form_Form.Entity;
				if (((previousValue != value) 
							|| (this._Form_Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_Form.Entity = null;
						previousValue.Form_ExternalConnections_ReturnValues.Remove(this);
					}
					this._Form_Form.Entity = value;
					if ((value != null))
					{
						value.Form_ExternalConnections_ReturnValues.Add(this);
						this._Form_FK = value.FormID;
					}
					else
					{
						this._Form_FK = default(int);
					}
					this.SendPropertyChanged("Form_Form");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Responder_Form_ExternalConnections_ReturnValue", Storage="_Form_Responder", ThisKey="Responder_FK", OtherKey="ID", IsForeignKey=true)]
		public Form_Responder Form_Responder
		{
			get
			{
				return this._Form_Responder.Entity;
			}
			set
			{
				Form_Responder previousValue = this._Form_Responder.Entity;
				if (((previousValue != value) 
							|| (this._Form_Responder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_Responder.Entity = null;
						previousValue.Form_ExternalConnections_ReturnValues.Remove(this);
					}
					this._Form_Responder.Entity = value;
					if ((value != null))
					{
						value.Form_ExternalConnections_ReturnValues.Add(this);
						this._Responder_FK = value.ID;
					}
					else
					{
						this._Responder_FK = default(int);
					}
					this.SendPropertyChanged("Form_Responder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.Form_ExternalConnections_Values")]
	public partial class Form_ExternalConnections_Value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private int _ExternalConnection_Property_FK;
		
		private int _Form_Form_FK;
		
		private EntityRef<Form_ExternalConnections_Property> _Form_ExternalConnections_Property;
		
		private EntityRef<Form_Form> _Form_Form;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnExternalConnection_Property_FKChanging(int value);
    partial void OnExternalConnection_Property_FKChanged();
    partial void OnForm_Form_FKChanging(int value);
    partial void OnForm_Form_FKChanged();
    #endregion
		
		public Form_ExternalConnections_Value()
		{
			this._Form_ExternalConnections_Property = default(EntityRef<Form_ExternalConnections_Property>);
			this._Form_Form = default(EntityRef<Form_Form>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalConnection_Property_FK", DbType="Int NOT NULL")]
		public int ExternalConnection_Property_FK
		{
			get
			{
				return this._ExternalConnection_Property_FK;
			}
			set
			{
				if ((this._ExternalConnection_Property_FK != value))
				{
					if (this._Form_ExternalConnections_Property.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExternalConnection_Property_FKChanging(value);
					this.SendPropertyChanging();
					this._ExternalConnection_Property_FK = value;
					this.SendPropertyChanged("ExternalConnection_Property_FK");
					this.OnExternalConnection_Property_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Form_FK", DbType="Int NOT NULL")]
		public int Form_Form_FK
		{
			get
			{
				return this._Form_Form_FK;
			}
			set
			{
				if ((this._Form_Form_FK != value))
				{
					if (this._Form_Form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForm_Form_FKChanging(value);
					this.SendPropertyChanging();
					this._Form_Form_FK = value;
					this.SendPropertyChanged("Form_Form_FK");
					this.OnForm_Form_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnections_Property_Form_ExternalConnections_Value", Storage="_Form_ExternalConnections_Property", ThisKey="ExternalConnection_Property_FK", OtherKey="ID", IsForeignKey=true)]
		public Form_ExternalConnections_Property Form_ExternalConnections_Property
		{
			get
			{
				return this._Form_ExternalConnections_Property.Entity;
			}
			set
			{
				Form_ExternalConnections_Property previousValue = this._Form_ExternalConnections_Property.Entity;
				if (((previousValue != value) 
							|| (this._Form_ExternalConnections_Property.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_ExternalConnections_Property.Entity = null;
						previousValue.Form_ExternalConnections_Values.Remove(this);
					}
					this._Form_ExternalConnections_Property.Entity = value;
					if ((value != null))
					{
						value.Form_ExternalConnections_Values.Add(this);
						this._ExternalConnection_Property_FK = value.ID;
					}
					else
					{
						this._ExternalConnection_Property_FK = default(int);
					}
					this.SendPropertyChanged("Form_ExternalConnections_Property");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Form_Form_ExternalConnections_Value", Storage="_Form_Form", ThisKey="Form_Form_FK", OtherKey="FormID", IsForeignKey=true)]
		public Form_Form Form_Form
		{
			get
			{
				return this._Form_Form.Entity;
			}
			set
			{
				Form_Form previousValue = this._Form_Form.Entity;
				if (((previousValue != value) 
							|| (this._Form_Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_Form.Entity = null;
						previousValue.Form_ExternalConnections_Values.Remove(this);
					}
					this._Form_Form.Entity = value;
					if ((value != null))
					{
						value.Form_ExternalConnections_Values.Add(this);
						this._Form_Form_FK = value.FormID;
					}
					else
					{
						this._Form_Form_FK = default(int);
					}
					this.SendPropertyChanged("Form_Form");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.ImageFrontPage")]
	public partial class ImageFrontPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _siteID;
		
		private string _ImageTop;
		
		private string _ImageBottom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsiteIDChanging(int value);
    partial void OnsiteIDChanged();
    partial void OnImageTopChanging(string value);
    partial void OnImageTopChanged();
    partial void OnImageBottomChanging(string value);
    partial void OnImageBottomChanged();
    #endregion
		
		public ImageFrontPage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteID", DbType="Int NOT NULL")]
		public int siteID
		{
			get
			{
				return this._siteID;
			}
			set
			{
				if ((this._siteID != value))
				{
					this.OnsiteIDChanging(value);
					this.SendPropertyChanging();
					this._siteID = value;
					this.SendPropertyChanged("siteID");
					this.OnsiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTop", DbType="NVarChar(50)")]
		public string ImageTop
		{
			get
			{
				return this._ImageTop;
			}
			set
			{
				if ((this._ImageTop != value))
				{
					this.OnImageTopChanging(value);
					this.SendPropertyChanging();
					this._ImageTop = value;
					this.SendPropertyChanged("ImageTop");
					this.OnImageTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageBottom", DbType="NVarChar(50)")]
		public string ImageBottom
		{
			get
			{
				return this._ImageBottom;
			}
			set
			{
				if ((this._ImageBottom != value))
				{
					this.OnImageBottomChanging(value);
					this.SendPropertyChanging();
					this._ImageBottom = value;
					this.SendPropertyChanged("ImageBottom");
					this.OnImageBottomChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _email;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<int> _siteID;
		
		private int _AdminLanguage_FK;
		
		private EntitySet<AdminRole> _AdminRoles;
		
		private EntityRef<AdminLanguage> _AdminLanguage;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnsiteIDChanging(System.Nullable<int> value);
    partial void OnsiteIDChanged();
    partial void OnAdminLanguage_FKChanging(int value);
    partial void OnAdminLanguage_FKChanged();
    #endregion
		
		public Admin()
		{
			this._AdminRoles = new EntitySet<AdminRole>(new Action<AdminRole>(this.attach_AdminRoles), new Action<AdminRole>(this.detach_AdminRoles));
			this._AdminLanguage = default(EntityRef<AdminLanguage>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteID", DbType="Int")]
		public System.Nullable<int> siteID
		{
			get
			{
				return this._siteID;
			}
			set
			{
				if ((this._siteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsiteIDChanging(value);
					this.SendPropertyChanging();
					this._siteID = value;
					this.SendPropertyChanged("siteID");
					this.OnsiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminLanguage_FK", DbType="Int NOT NULL")]
		public int AdminLanguage_FK
		{
			get
			{
				return this._AdminLanguage_FK;
			}
			set
			{
				if ((this._AdminLanguage_FK != value))
				{
					if (this._AdminLanguage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._AdminLanguage_FK = value;
					this.SendPropertyChanged("AdminLanguage_FK");
					this.OnAdminLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_AdminRole", Storage="_AdminRoles", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<AdminRole> AdminRoles
		{
			get
			{
				return this._AdminRoles;
			}
			set
			{
				this._AdminRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminLanguage_Admin", Storage="_AdminLanguage", ThisKey="AdminLanguage_FK", OtherKey="ID", IsForeignKey=true)]
		public AdminLanguage AdminLanguage
		{
			get
			{
				return this._AdminLanguage.Entity;
			}
			set
			{
				AdminLanguage previousValue = this._AdminLanguage.Entity;
				if (((previousValue != value) 
							|| (this._AdminLanguage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminLanguage.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._AdminLanguage.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._AdminLanguage_FK = value.ID;
					}
					else
					{
						this._AdminLanguage_FK = default(int);
					}
					this.SendPropertyChanged("AdminLanguage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Admin", Storage="_Site", ThisKey="siteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._siteID = value.SiteID;
					}
					else
					{
						this._siteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminRoles(AdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_AdminRoles(AdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminLanguage")]
	public partial class AdminLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Admin> _Admins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AdminLanguage()
		{
			this._Admins = new EntitySet<Admin>(new Action<Admin>(this.attach_Admins), new Action<Admin>(this.detach_Admins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminLanguage_Admin", Storage="_Admins", ThisKey="ID", OtherKey="AdminLanguage_FK")]
		public EntitySet<Admin> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.AdminLanguage = this;
		}
		
		private void detach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.AdminLanguage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminRoles")]
	public partial class AdminRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private int _AdminID;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    #endregion
		
		public AdminRole()
		{
			this._Admin = default(EntityRef<Admin>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_AdminRole", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.AdminRoles.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.AdminRoles.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_AdminRole", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.AdminRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.AdminRoles.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ads_Ads")]
	public partial class Ads_Ad
	{
		
		private int _ID;
		
		private string _Link;
		
		private string _ImagePath;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _Sort;
		
		private string _Description;
		
		private string _Name;
		
		public Ads_Ad()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(255)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this._Link = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this._ImagePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this._Sort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ads_Group")]
	public partial class Ads_Group
	{
		
		private int _GroupID;
		
		private string _GroupName;
		
		private int _SiteID;
		
		public Ads_Group()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Aim_Dropdown_ Areas]")]
	public partial class Aim_Dropdown__Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AID;
		
		private string _Name;
		
		private string _AreaDescription;
		
		private System.Nullable<int> _SiteID;
		
		private string _shortname;
		
		private EntitySet<Aim_Dropdown_Connection> _Aim_Dropdown_Connections;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAIDChanging(int value);
    partial void OnAIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAreaDescriptionChanging(string value);
    partial void OnAreaDescriptionChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnshortnameChanging(string value);
    partial void OnshortnameChanged();
    #endregion
		
		public Aim_Dropdown__Area()
		{
			this._Aim_Dropdown_Connections = new EntitySet<Aim_Dropdown_Connection>(new Action<Aim_Dropdown_Connection>(this.attach_Aim_Dropdown_Connections), new Action<Aim_Dropdown_Connection>(this.detach_Aim_Dropdown_Connections));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AID
		{
			get
			{
				return this._AID;
			}
			set
			{
				if ((this._AID != value))
				{
					this.OnAIDChanging(value);
					this.SendPropertyChanging();
					this._AID = value;
					this.SendPropertyChanged("AID");
					this.OnAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaDescription", DbType="NVarChar(255)")]
		public string AreaDescription
		{
			get
			{
				return this._AreaDescription;
			}
			set
			{
				if ((this._AreaDescription != value))
				{
					this.OnAreaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AreaDescription = value;
					this.SendPropertyChanged("AreaDescription");
					this.OnAreaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortname", DbType="NVarChar(20)")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if ((this._shortname != value))
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aim_Dropdown__Area_Aim_Dropdown_Connection", Storage="_Aim_Dropdown_Connections", ThisKey="AID", OtherKey="AID")]
		public EntitySet<Aim_Dropdown_Connection> Aim_Dropdown_Connections
		{
			get
			{
				return this._Aim_Dropdown_Connections;
			}
			set
			{
				this._Aim_Dropdown_Connections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Aim_Dropdown__Area", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Aim_Dropdown__Areas.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Aim_Dropdown__Areas.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aim_Dropdown_Connections(Aim_Dropdown_Connection entity)
		{
			this.SendPropertyChanging();
			entity.Aim_Dropdown__Area = this;
		}
		
		private void detach_Aim_Dropdown_Connections(Aim_Dropdown_Connection entity)
		{
			this.SendPropertyChanging();
			entity.Aim_Dropdown__Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aim_Dropdown_Connection")]
	public partial class Aim_Dropdown_Connection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AID;
		
		private int _ID;
		
		private int _SiteID;
		
		private EntityRef<Aim_Dropdown__Area> _Aim_Dropdown__Area;
		
		private EntityRef<Aim_Dropdown_Value> _Aim_Dropdown_Value;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAIDChanging(int value);
    partial void OnAIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Aim_Dropdown_Connection()
		{
			this._Aim_Dropdown__Area = default(EntityRef<Aim_Dropdown__Area>);
			this._Aim_Dropdown_Value = default(EntityRef<Aim_Dropdown_Value>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AID
		{
			get
			{
				return this._AID;
			}
			set
			{
				if ((this._AID != value))
				{
					if (this._Aim_Dropdown__Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAIDChanging(value);
					this.SendPropertyChanging();
					this._AID = value;
					this.SendPropertyChanged("AID");
					this.OnAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Aim_Dropdown_Value.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aim_Dropdown__Area_Aim_Dropdown_Connection", Storage="_Aim_Dropdown__Area", ThisKey="AID", OtherKey="AID", IsForeignKey=true)]
		public Aim_Dropdown__Area Aim_Dropdown__Area
		{
			get
			{
				return this._Aim_Dropdown__Area.Entity;
			}
			set
			{
				Aim_Dropdown__Area previousValue = this._Aim_Dropdown__Area.Entity;
				if (((previousValue != value) 
							|| (this._Aim_Dropdown__Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aim_Dropdown__Area.Entity = null;
						previousValue.Aim_Dropdown_Connections.Remove(this);
					}
					this._Aim_Dropdown__Area.Entity = value;
					if ((value != null))
					{
						value.Aim_Dropdown_Connections.Add(this);
						this._AID = value.AID;
					}
					else
					{
						this._AID = default(int);
					}
					this.SendPropertyChanged("Aim_Dropdown__Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aim_Dropdown_Value_Aim_Dropdown_Connection", Storage="_Aim_Dropdown_Value", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Aim_Dropdown_Value Aim_Dropdown_Value
		{
			get
			{
				return this._Aim_Dropdown_Value.Entity;
			}
			set
			{
				Aim_Dropdown_Value previousValue = this._Aim_Dropdown_Value.Entity;
				if (((previousValue != value) 
							|| (this._Aim_Dropdown_Value.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aim_Dropdown_Value.Entity = null;
						previousValue.Aim_Dropdown_Connections.Remove(this);
					}
					this._Aim_Dropdown_Value.Entity = value;
					if ((value != null))
					{
						value.Aim_Dropdown_Connections.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Aim_Dropdown_Value");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Aim_Dropdown_Connection", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Aim_Dropdown_Connections.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Aim_Dropdown_Connections.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aim_Dropdown_Page")]
	public partial class Aim_Dropdown_Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pID;
		
		private string _PageName;
		
		private string _Description;
		
		private System.Nullable<int> _SiteID;
		
		private EntitySet<Aim_Dropdown_PageConnection> _Aim_Dropdown_PageConnections;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpIDChanging(int value);
    partial void OnpIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Aim_Dropdown_Page()
		{
			this._Aim_Dropdown_PageConnections = new EntitySet<Aim_Dropdown_PageConnection>(new Action<Aim_Dropdown_PageConnection>(this.attach_Aim_Dropdown_PageConnections), new Action<Aim_Dropdown_PageConnection>(this.detach_Aim_Dropdown_PageConnections));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pID
		{
			get
			{
				return this._pID;
			}
			set
			{
				if ((this._pID != value))
				{
					this.OnpIDChanging(value);
					this.SendPropertyChanging();
					this._pID = value;
					this.SendPropertyChanged("pID");
					this.OnpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(50)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aim_Dropdown_Page_Aim_Dropdown_PageConnection", Storage="_Aim_Dropdown_PageConnections", ThisKey="pID", OtherKey="pID")]
		public EntitySet<Aim_Dropdown_PageConnection> Aim_Dropdown_PageConnections
		{
			get
			{
				return this._Aim_Dropdown_PageConnections;
			}
			set
			{
				this._Aim_Dropdown_PageConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Aim_Dropdown_Page", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Aim_Dropdown_Pages.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Aim_Dropdown_Pages.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aim_Dropdown_PageConnections(Aim_Dropdown_PageConnection entity)
		{
			this.SendPropertyChanging();
			entity.Aim_Dropdown_Page = this;
		}
		
		private void detach_Aim_Dropdown_PageConnections(Aim_Dropdown_PageConnection entity)
		{
			this.SendPropertyChanging();
			entity.Aim_Dropdown_Page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aim_Dropdown_PageConnection")]
	public partial class Aim_Dropdown_PageConnection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pID;
		
		private int _AID;
		
		private EntityRef<Aim_Dropdown_Page> _Aim_Dropdown_Page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpIDChanging(int value);
    partial void OnpIDChanged();
    partial void OnAIDChanging(int value);
    partial void OnAIDChanged();
    #endregion
		
		public Aim_Dropdown_PageConnection()
		{
			this._Aim_Dropdown_Page = default(EntityRef<Aim_Dropdown_Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int pID
		{
			get
			{
				return this._pID;
			}
			set
			{
				if ((this._pID != value))
				{
					if (this._Aim_Dropdown_Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpIDChanging(value);
					this.SendPropertyChanging();
					this._pID = value;
					this.SendPropertyChanged("pID");
					this.OnpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AID
		{
			get
			{
				return this._AID;
			}
			set
			{
				if ((this._AID != value))
				{
					this.OnAIDChanging(value);
					this.SendPropertyChanging();
					this._AID = value;
					this.SendPropertyChanged("AID");
					this.OnAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aim_Dropdown_Page_Aim_Dropdown_PageConnection", Storage="_Aim_Dropdown_Page", ThisKey="pID", OtherKey="pID", IsForeignKey=true)]
		public Aim_Dropdown_Page Aim_Dropdown_Page
		{
			get
			{
				return this._Aim_Dropdown_Page.Entity;
			}
			set
			{
				Aim_Dropdown_Page previousValue = this._Aim_Dropdown_Page.Entity;
				if (((previousValue != value) 
							|| (this._Aim_Dropdown_Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aim_Dropdown_Page.Entity = null;
						previousValue.Aim_Dropdown_PageConnections.Remove(this);
					}
					this._Aim_Dropdown_Page.Entity = value;
					if ((value != null))
					{
						value.Aim_Dropdown_PageConnections.Add(this);
						this._pID = value.pID;
					}
					else
					{
						this._pID = default(int);
					}
					this.SendPropertyChanged("Aim_Dropdown_Page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aim_Dropdown_Values")]
	public partial class Aim_Dropdown_Value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value_;
		
		private string _ValueDescription;
		
		private System.Nullable<int> _Protected;
		
		private EntitySet<Aim_Dropdown_Connection> _Aim_Dropdown_Connections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValue_Changing(string value);
    partial void OnValue_Changed();
    partial void OnValueDescriptionChanging(string value);
    partial void OnValueDescriptionChanged();
    partial void OnProtectedChanging(System.Nullable<int> value);
    partial void OnProtectedChanged();
    #endregion
		
		public Aim_Dropdown_Value()
		{
			this._Aim_Dropdown_Connections = new EntitySet<Aim_Dropdown_Connection>(new Action<Aim_Dropdown_Connection>(this.attach_Aim_Dropdown_Connections), new Action<Aim_Dropdown_Connection>(this.detach_Aim_Dropdown_Connections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value_", DbType="NVarChar(70)")]
		public string Value_
		{
			get
			{
				return this._Value_;
			}
			set
			{
				if ((this._Value_ != value))
				{
					this.OnValue_Changing(value);
					this.SendPropertyChanging();
					this._Value_ = value;
					this.SendPropertyChanged("Value_");
					this.OnValue_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueDescription", DbType="NVarChar(70)")]
		public string ValueDescription
		{
			get
			{
				return this._ValueDescription;
			}
			set
			{
				if ((this._ValueDescription != value))
				{
					this.OnValueDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ValueDescription = value;
					this.SendPropertyChanged("ValueDescription");
					this.OnValueDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protected", DbType="Int")]
		public System.Nullable<int> Protected
		{
			get
			{
				return this._Protected;
			}
			set
			{
				if ((this._Protected != value))
				{
					this.OnProtectedChanging(value);
					this.SendPropertyChanging();
					this._Protected = value;
					this.SendPropertyChanged("Protected");
					this.OnProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aim_Dropdown_Value_Aim_Dropdown_Connection", Storage="_Aim_Dropdown_Connections", ThisKey="ID", OtherKey="ID")]
		public EntitySet<Aim_Dropdown_Connection> Aim_Dropdown_Connections
		{
			get
			{
				return this._Aim_Dropdown_Connections;
			}
			set
			{
				this._Aim_Dropdown_Connections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aim_Dropdown_Connections(Aim_Dropdown_Connection entity)
		{
			this.SendPropertyChanging();
			entity.Aim_Dropdown_Value = this;
		}
		
		private void detach_Aim_Dropdown_Connections(Aim_Dropdown_Connection entity)
		{
			this.SendPropertyChanging();
			entity.Aim_Dropdown_Value = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimAds_Directions")]
	public partial class AimAds_Direction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private EntitySet<AimAds_Group> _AimAds_Groups;
		
		private EntitySet<AimAds_Group1> _AimAds_Group1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public AimAds_Direction()
		{
			this._AimAds_Groups = new EntitySet<AimAds_Group>(new Action<AimAds_Group>(this.attach_AimAds_Groups), new Action<AimAds_Group>(this.detach_AimAds_Groups));
			this._AimAds_Group1s = new EntitySet<AimAds_Group1>(new Action<AimAds_Group1>(this.attach_AimAds_Group1s), new Action<AimAds_Group1>(this.detach_AimAds_Group1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimAds_Direction_AimAds_Group", Storage="_AimAds_Groups", ThisKey="ID", OtherKey="AimAds_Direction_FK")]
		public EntitySet<AimAds_Group> AimAds_Groups
		{
			get
			{
				return this._AimAds_Groups;
			}
			set
			{
				this._AimAds_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimAds_Direction_AimAds_Group1", Storage="_AimAds_Group1s", ThisKey="ID", OtherKey="AimAds_Direction_FK")]
		public EntitySet<AimAds_Group1> AimAds_Group1s
		{
			get
			{
				return this._AimAds_Group1s;
			}
			set
			{
				this._AimAds_Group1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimAds_Groups(AimAds_Group entity)
		{
			this.SendPropertyChanging();
			entity.AimAds_Direction = this;
		}
		
		private void detach_AimAds_Groups(AimAds_Group entity)
		{
			this.SendPropertyChanging();
			entity.AimAds_Direction = null;
		}
		
		private void attach_AimAds_Group1s(AimAds_Group1 entity)
		{
			this.SendPropertyChanging();
			entity.AimAds_Direction = this;
		}
		
		private void detach_AimAds_Group1s(AimAds_Group1 entity)
		{
			this.SendPropertyChanging();
			entity.AimAds_Direction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimAds_Group")]
	public partial class AimAds_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private int _Site_FK;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<bool> _AllowScripts;
		
		private int _AimAds_Direction_FK;
		
		private string _StyleOverallClassName;
		
		private string _StyleItemClassName;
		
		private string _StyleLinkClassName;
		
		private bool _Deleted;
		
		private EntitySet<AimAds_Item> _AimAds_Items;
		
		private EntityRef<AimAds_Direction> _AimAds_Direction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnAllowScriptsChanging(System.Nullable<bool> value);
    partial void OnAllowScriptsChanged();
    partial void OnAimAds_Direction_FKChanging(int value);
    partial void OnAimAds_Direction_FKChanged();
    partial void OnStyleOverallClassNameChanging(string value);
    partial void OnStyleOverallClassNameChanged();
    partial void OnStyleItemClassNameChanging(string value);
    partial void OnStyleItemClassNameChanged();
    partial void OnStyleLinkClassNameChanging(string value);
    partial void OnStyleLinkClassNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public AimAds_Group()
		{
			this._AimAds_Items = new EntitySet<AimAds_Item>(new Action<AimAds_Item>(this.attach_AimAds_Items), new Action<AimAds_Item>(this.detach_AimAds_Items));
			this._AimAds_Direction = default(EntityRef<AimAds_Direction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowScripts", DbType="Bit")]
		public System.Nullable<bool> AllowScripts
		{
			get
			{
				return this._AllowScripts;
			}
			set
			{
				if ((this._AllowScripts != value))
				{
					this.OnAllowScriptsChanging(value);
					this.SendPropertyChanging();
					this._AllowScripts = value;
					this.SendPropertyChanged("AllowScripts");
					this.OnAllowScriptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimAds_Direction_FK", DbType="Int NOT NULL")]
		public int AimAds_Direction_FK
		{
			get
			{
				return this._AimAds_Direction_FK;
			}
			set
			{
				if ((this._AimAds_Direction_FK != value))
				{
					if (this._AimAds_Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimAds_Direction_FKChanging(value);
					this.SendPropertyChanging();
					this._AimAds_Direction_FK = value;
					this.SendPropertyChanged("AimAds_Direction_FK");
					this.OnAimAds_Direction_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleOverallClassName", DbType="NVarChar(400)")]
		public string StyleOverallClassName
		{
			get
			{
				return this._StyleOverallClassName;
			}
			set
			{
				if ((this._StyleOverallClassName != value))
				{
					this.OnStyleOverallClassNameChanging(value);
					this.SendPropertyChanging();
					this._StyleOverallClassName = value;
					this.SendPropertyChanged("StyleOverallClassName");
					this.OnStyleOverallClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleItemClassName", DbType="NVarChar(400)")]
		public string StyleItemClassName
		{
			get
			{
				return this._StyleItemClassName;
			}
			set
			{
				if ((this._StyleItemClassName != value))
				{
					this.OnStyleItemClassNameChanging(value);
					this.SendPropertyChanging();
					this._StyleItemClassName = value;
					this.SendPropertyChanged("StyleItemClassName");
					this.OnStyleItemClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleLinkClassName", DbType="NVarChar(400)")]
		public string StyleLinkClassName
		{
			get
			{
				return this._StyleLinkClassName;
			}
			set
			{
				if ((this._StyleLinkClassName != value))
				{
					this.OnStyleLinkClassNameChanging(value);
					this.SendPropertyChanging();
					this._StyleLinkClassName = value;
					this.SendPropertyChanged("StyleLinkClassName");
					this.OnStyleLinkClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimAds_Group_AimAds_Item", Storage="_AimAds_Items", ThisKey="GroupID", OtherKey="AimAds_Group_FK")]
		public EntitySet<AimAds_Item> AimAds_Items
		{
			get
			{
				return this._AimAds_Items;
			}
			set
			{
				this._AimAds_Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimAds_Direction_AimAds_Group", Storage="_AimAds_Direction", ThisKey="AimAds_Direction_FK", OtherKey="ID", IsForeignKey=true)]
		public AimAds_Direction AimAds_Direction
		{
			get
			{
				return this._AimAds_Direction.Entity;
			}
			set
			{
				AimAds_Direction previousValue = this._AimAds_Direction.Entity;
				if (((previousValue != value) 
							|| (this._AimAds_Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimAds_Direction.Entity = null;
						previousValue.AimAds_Groups.Remove(this);
					}
					this._AimAds_Direction.Entity = value;
					if ((value != null))
					{
						value.AimAds_Groups.Add(this);
						this._AimAds_Direction_FK = value.ID;
					}
					else
					{
						this._AimAds_Direction_FK = default(int);
					}
					this.SendPropertyChanged("AimAds_Direction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimAds_Items(AimAds_Item entity)
		{
			this.SendPropertyChanging();
			entity.AimAds_Group = this;
		}
		
		private void detach_AimAds_Items(AimAds_Item entity)
		{
			this.SendPropertyChanging();
			entity.AimAds_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimAds_Groups")]
	public partial class AimAds_Group1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Site_FK;
		
		private int _AimAds_Direction_FK;
		
		private string _ShortName;
		
		private string _Name;
		
		private string _StyleOverallClassName;
		
		private string _StyleItemClassName;
		
		private string _StyleLinkClassName;
		
		private bool _Deleted;
		
		private EntityRef<AimAds_Direction> _AimAds_Direction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    partial void OnAimAds_Direction_FKChanging(int value);
    partial void OnAimAds_Direction_FKChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStyleOverallClassNameChanging(string value);
    partial void OnStyleOverallClassNameChanged();
    partial void OnStyleItemClassNameChanging(string value);
    partial void OnStyleItemClassNameChanged();
    partial void OnStyleLinkClassNameChanging(string value);
    partial void OnStyleLinkClassNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public AimAds_Group1()
		{
			this._AimAds_Direction = default(EntityRef<AimAds_Direction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimAds_Direction_FK", DbType="Int NOT NULL")]
		public int AimAds_Direction_FK
		{
			get
			{
				return this._AimAds_Direction_FK;
			}
			set
			{
				if ((this._AimAds_Direction_FK != value))
				{
					if (this._AimAds_Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimAds_Direction_FKChanging(value);
					this.SendPropertyChanging();
					this._AimAds_Direction_FK = value;
					this.SendPropertyChanged("AimAds_Direction_FK");
					this.OnAimAds_Direction_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleOverallClassName", DbType="NVarChar(400)")]
		public string StyleOverallClassName
		{
			get
			{
				return this._StyleOverallClassName;
			}
			set
			{
				if ((this._StyleOverallClassName != value))
				{
					this.OnStyleOverallClassNameChanging(value);
					this.SendPropertyChanging();
					this._StyleOverallClassName = value;
					this.SendPropertyChanged("StyleOverallClassName");
					this.OnStyleOverallClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleItemClassName", DbType="NVarChar(400)")]
		public string StyleItemClassName
		{
			get
			{
				return this._StyleItemClassName;
			}
			set
			{
				if ((this._StyleItemClassName != value))
				{
					this.OnStyleItemClassNameChanging(value);
					this.SendPropertyChanging();
					this._StyleItemClassName = value;
					this.SendPropertyChanged("StyleItemClassName");
					this.OnStyleItemClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleLinkClassName", DbType="NVarChar(400)")]
		public string StyleLinkClassName
		{
			get
			{
				return this._StyleLinkClassName;
			}
			set
			{
				if ((this._StyleLinkClassName != value))
				{
					this.OnStyleLinkClassNameChanging(value);
					this.SendPropertyChanging();
					this._StyleLinkClassName = value;
					this.SendPropertyChanged("StyleLinkClassName");
					this.OnStyleLinkClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimAds_Direction_AimAds_Group1", Storage="_AimAds_Direction", ThisKey="AimAds_Direction_FK", OtherKey="ID", IsForeignKey=true)]
		public AimAds_Direction AimAds_Direction
		{
			get
			{
				return this._AimAds_Direction.Entity;
			}
			set
			{
				AimAds_Direction previousValue = this._AimAds_Direction.Entity;
				if (((previousValue != value) 
							|| (this._AimAds_Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimAds_Direction.Entity = null;
						previousValue.AimAds_Group1s.Remove(this);
					}
					this._AimAds_Direction.Entity = value;
					if ((value != null))
					{
						value.AimAds_Group1s.Add(this);
						this._AimAds_Direction_FK = value.ID;
					}
					else
					{
						this._AimAds_Direction_FK = default(int);
					}
					this.SendPropertyChanged("AimAds_Direction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimAds_Item")]
	public partial class AimAds_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AimAds_Group_FK;
		
		private string _ImageFilename;
		
		private System.Nullable<int> _Sort;
		
		private string _Href;
		
		private string _LinkTarget;
		
		private string _Title;
		
		private bool _Deleted;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private bool _Show;
		
		private System.Nullable<System.DateTime> _PublishFrom;
		
		private System.Nullable<System.DateTime> _PublishTo;
		
		private string _ScriptCode;
		
		private string _Border;
		
		private EntityRef<AimAds_Group> _AimAds_Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAimAds_Group_FKChanging(int value);
    partial void OnAimAds_Group_FKChanged();
    partial void OnImageFilenameChanging(string value);
    partial void OnImageFilenameChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnHrefChanging(string value);
    partial void OnHrefChanged();
    partial void OnLinkTargetChanging(string value);
    partial void OnLinkTargetChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnShowChanging(bool value);
    partial void OnShowChanged();
    partial void OnPublishFromChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishFromChanged();
    partial void OnPublishToChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishToChanged();
    partial void OnScriptCodeChanging(string value);
    partial void OnScriptCodeChanged();
    partial void OnBorderChanging(string value);
    partial void OnBorderChanged();
    #endregion
		
		public AimAds_Item()
		{
			this._AimAds_Group = default(EntityRef<AimAds_Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimAds_Group_FK", DbType="Int NOT NULL")]
		public int AimAds_Group_FK
		{
			get
			{
				return this._AimAds_Group_FK;
			}
			set
			{
				if ((this._AimAds_Group_FK != value))
				{
					if (this._AimAds_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimAds_Group_FKChanging(value);
					this.SendPropertyChanging();
					this._AimAds_Group_FK = value;
					this.SendPropertyChanged("AimAds_Group_FK");
					this.OnAimAds_Group_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFilename", DbType="NVarChar(400)")]
		public string ImageFilename
		{
			get
			{
				return this._ImageFilename;
			}
			set
			{
				if ((this._ImageFilename != value))
				{
					this.OnImageFilenameChanging(value);
					this.SendPropertyChanging();
					this._ImageFilename = value;
					this.SendPropertyChanged("ImageFilename");
					this.OnImageFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Href", DbType="NVarChar(400)")]
		public string Href
		{
			get
			{
				return this._Href;
			}
			set
			{
				if ((this._Href != value))
				{
					this.OnHrefChanging(value);
					this.SendPropertyChanging();
					this._Href = value;
					this.SendPropertyChanged("Href");
					this.OnHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTarget", DbType="NVarChar(50)")]
		public string LinkTarget
		{
			get
			{
				return this._LinkTarget;
			}
			set
			{
				if ((this._LinkTarget != value))
				{
					this.OnLinkTargetChanging(value);
					this.SendPropertyChanging();
					this._LinkTarget = value;
					this.SendPropertyChanged("LinkTarget");
					this.OnLinkTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(400)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
		public bool Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishFrom
		{
			get
			{
				return this._PublishFrom;
			}
			set
			{
				if ((this._PublishFrom != value))
				{
					this.OnPublishFromChanging(value);
					this.SendPropertyChanging();
					this._PublishFrom = value;
					this.SendPropertyChanged("PublishFrom");
					this.OnPublishFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTo
		{
			get
			{
				return this._PublishTo;
			}
			set
			{
				if ((this._PublishTo != value))
				{
					this.OnPublishToChanging(value);
					this.SendPropertyChanging();
					this._PublishTo = value;
					this.SendPropertyChanged("PublishTo");
					this.OnPublishToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptCode", DbType="NVarChar(MAX)")]
		public string ScriptCode
		{
			get
			{
				return this._ScriptCode;
			}
			set
			{
				if ((this._ScriptCode != value))
				{
					this.OnScriptCodeChanging(value);
					this.SendPropertyChanging();
					this._ScriptCode = value;
					this.SendPropertyChanged("ScriptCode");
					this.OnScriptCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Border", DbType="NVarChar(100)")]
		public string Border
		{
			get
			{
				return this._Border;
			}
			set
			{
				if ((this._Border != value))
				{
					this.OnBorderChanging(value);
					this.SendPropertyChanging();
					this._Border = value;
					this.SendPropertyChanged("Border");
					this.OnBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimAds_Group_AimAds_Item", Storage="_AimAds_Group", ThisKey="AimAds_Group_FK", OtherKey="GroupID", IsForeignKey=true)]
		public AimAds_Group AimAds_Group
		{
			get
			{
				return this._AimAds_Group.Entity;
			}
			set
			{
				AimAds_Group previousValue = this._AimAds_Group.Entity;
				if (((previousValue != value) 
							|| (this._AimAds_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimAds_Group.Entity = null;
						previousValue.AimAds_Items.Remove(this);
					}
					this._AimAds_Group.Entity = value;
					if ((value != null))
					{
						value.AimAds_Items.Add(this);
						this._AimAds_Group_FK = value.GroupID;
					}
					else
					{
						this._AimAds_Group_FK = default(int);
					}
					this.SendPropertyChanged("AimAds_Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_AimNews")]
	public partial class AimNews_AimNew : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private EntitySet<AimNews_Group> _AimNews_Groups;
		
		private EntitySet<AimNews_Mail> _AimNews_Mails;
		
		private EntitySet<AimNews_User> _AimNews_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AimNews_AimNew()
		{
			this._AimNews_Groups = new EntitySet<AimNews_Group>(new Action<AimNews_Group>(this.attach_AimNews_Groups), new Action<AimNews_Group>(this.detach_AimNews_Groups));
			this._AimNews_Mails = new EntitySet<AimNews_Mail>(new Action<AimNews_Mail>(this.attach_AimNews_Mails), new Action<AimNews_Mail>(this.detach_AimNews_Mails));
			this._AimNews_Users = new EntitySet<AimNews_User>(new Action<AimNews_User>(this.attach_AimNews_Users), new Action<AimNews_User>(this.detach_AimNews_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_Group", Storage="_AimNews_Groups", ThisKey="ID", OtherKey="AimNewsID")]
		public EntitySet<AimNews_Group> AimNews_Groups
		{
			get
			{
				return this._AimNews_Groups;
			}
			set
			{
				this._AimNews_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_Mail", Storage="_AimNews_Mails", ThisKey="ID", OtherKey="AimNewsID")]
		public EntitySet<AimNews_Mail> AimNews_Mails
		{
			get
			{
				return this._AimNews_Mails;
			}
			set
			{
				this._AimNews_Mails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_User", Storage="_AimNews_Users", ThisKey="ID", OtherKey="AimNewsID")]
		public EntitySet<AimNews_User> AimNews_Users
		{
			get
			{
				return this._AimNews_Users;
			}
			set
			{
				this._AimNews_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_Groups(AimNews_Group entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = this;
		}
		
		private void detach_AimNews_Groups(AimNews_Group entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = null;
		}
		
		private void attach_AimNews_Mails(AimNews_Mail entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = this;
		}
		
		private void detach_AimNews_Mails(AimNews_Mail entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = null;
		}
		
		private void attach_AimNews_Users(AimNews_User entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = this;
		}
		
		private void detach_AimNews_Users(AimNews_User entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_AimNew = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Group")]
	public partial class AimNews_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AimNewsID;
		
		private string _GroupName;
		
		private string _Description;
		
		private EntitySet<AimNews_GroupUser> _AimNews_GroupUsers;
		
		private EntityRef<AimNews_AimNew> _AimNews_AimNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAimNewsIDChanging(int value);
    partial void OnAimNewsIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AimNews_Group()
		{
			this._AimNews_GroupUsers = new EntitySet<AimNews_GroupUser>(new Action<AimNews_GroupUser>(this.attach_AimNews_GroupUsers), new Action<AimNews_GroupUser>(this.detach_AimNews_GroupUsers));
			this._AimNews_AimNew = default(EntityRef<AimNews_AimNew>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimNewsID", DbType="Int NOT NULL")]
		public int AimNewsID
		{
			get
			{
				return this._AimNewsID;
			}
			set
			{
				if ((this._AimNewsID != value))
				{
					if (this._AimNews_AimNew.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimNewsIDChanging(value);
					this.SendPropertyChanging();
					this._AimNewsID = value;
					this.SendPropertyChanged("AimNewsID");
					this.OnAimNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Group_AimNews_GroupUser", Storage="_AimNews_GroupUsers", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<AimNews_GroupUser> AimNews_GroupUsers
		{
			get
			{
				return this._AimNews_GroupUsers;
			}
			set
			{
				this._AimNews_GroupUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_Group", Storage="_AimNews_AimNew", ThisKey="AimNewsID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_AimNew AimNews_AimNew
		{
			get
			{
				return this._AimNews_AimNew.Entity;
			}
			set
			{
				AimNews_AimNew previousValue = this._AimNews_AimNew.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_AimNew.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_AimNew.Entity = null;
						previousValue.AimNews_Groups.Remove(this);
					}
					this._AimNews_AimNew.Entity = value;
					if ((value != null))
					{
						value.AimNews_Groups.Add(this);
						this._AimNewsID = value.ID;
					}
					else
					{
						this._AimNewsID = default(int);
					}
					this.SendPropertyChanged("AimNews_AimNew");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_GroupUsers(AimNews_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Group = this;
		}
		
		private void detach_AimNews_GroupUsers(AimNews_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_GroupUser")]
	public partial class AimNews_GroupUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _GroupID;
		
		private int _UserID;
		
		private EntityRef<AimNews_Group> _AimNews_Group;
		
		private EntityRef<AimNews_User> _AimNews_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public AimNews_GroupUser()
		{
			this._AimNews_Group = default(EntityRef<AimNews_Group>);
			this._AimNews_User = default(EntityRef<AimNews_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._AimNews_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._AimNews_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Group_AimNews_GroupUser", Storage="_AimNews_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Group AimNews_Group
		{
			get
			{
				return this._AimNews_Group.Entity;
			}
			set
			{
				AimNews_Group previousValue = this._AimNews_Group.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Group.Entity = null;
						previousValue.AimNews_GroupUsers.Remove(this);
					}
					this._AimNews_Group.Entity = value;
					if ((value != null))
					{
						value.AimNews_GroupUsers.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("AimNews_Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_User_AimNews_GroupUser", Storage="_AimNews_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_User AimNews_User
		{
			get
			{
				return this._AimNews_User.Entity;
			}
			set
			{
				AimNews_User previousValue = this._AimNews_User.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_User.Entity = null;
						previousValue.AimNews_GroupUsers.Remove(this);
					}
					this._AimNews_User.Entity = value;
					if ((value != null))
					{
						value.AimNews_GroupUsers.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("AimNews_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_History")]
	public partial class AimNews_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MailID;
		
		private int _NbrRecipients;
		
		private int _NbrOpens;
		
		private string _ErrorMessage;
		
		private System.DateTime _SendTime;
		
		private EntitySet<AimNews_Link> _AimNews_Links;
		
		private EntitySet<AimNews_Log> _AimNews_Logs;
		
		private EntityRef<AimNews_Mail> _AimNews_Mail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMailIDChanging(int value);
    partial void OnMailIDChanged();
    partial void OnNbrRecipientsChanging(int value);
    partial void OnNbrRecipientsChanged();
    partial void OnNbrOpensChanging(int value);
    partial void OnNbrOpensChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnSendTimeChanging(System.DateTime value);
    partial void OnSendTimeChanged();
    #endregion
		
		public AimNews_History()
		{
			this._AimNews_Links = new EntitySet<AimNews_Link>(new Action<AimNews_Link>(this.attach_AimNews_Links), new Action<AimNews_Link>(this.detach_AimNews_Links));
			this._AimNews_Logs = new EntitySet<AimNews_Log>(new Action<AimNews_Log>(this.attach_AimNews_Logs), new Action<AimNews_Log>(this.detach_AimNews_Logs));
			this._AimNews_Mail = default(EntityRef<AimNews_Mail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailID", DbType="Int NOT NULL")]
		public int MailID
		{
			get
			{
				return this._MailID;
			}
			set
			{
				if ((this._MailID != value))
				{
					if (this._AimNews_Mail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailIDChanging(value);
					this.SendPropertyChanging();
					this._MailID = value;
					this.SendPropertyChanged("MailID");
					this.OnMailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbrRecipients", DbType="Int NOT NULL")]
		public int NbrRecipients
		{
			get
			{
				return this._NbrRecipients;
			}
			set
			{
				if ((this._NbrRecipients != value))
				{
					this.OnNbrRecipientsChanging(value);
					this.SendPropertyChanging();
					this._NbrRecipients = value;
					this.SendPropertyChanged("NbrRecipients");
					this.OnNbrRecipientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbrOpens", DbType="Int NOT NULL")]
		public int NbrOpens
		{
			get
			{
				return this._NbrOpens;
			}
			set
			{
				if ((this._NbrOpens != value))
				{
					this.OnNbrOpensChanging(value);
					this.SendPropertyChanging();
					this._NbrOpens = value;
					this.SendPropertyChanged("NbrOpens");
					this.OnNbrOpensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendTime", DbType="DateTime NOT NULL")]
		public System.DateTime SendTime
		{
			get
			{
				return this._SendTime;
			}
			set
			{
				if ((this._SendTime != value))
				{
					this.OnSendTimeChanging(value);
					this.SendPropertyChanging();
					this._SendTime = value;
					this.SendPropertyChanged("SendTime");
					this.OnSendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_History_AimNews_Link", Storage="_AimNews_Links", ThisKey="ID", OtherKey="HistoryID_FK")]
		public EntitySet<AimNews_Link> AimNews_Links
		{
			get
			{
				return this._AimNews_Links;
			}
			set
			{
				this._AimNews_Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_History_AimNews_Log", Storage="_AimNews_Logs", ThisKey="ID", OtherKey="HistoryID")]
		public EntitySet<AimNews_Log> AimNews_Logs
		{
			get
			{
				return this._AimNews_Logs;
			}
			set
			{
				this._AimNews_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Mail_AimNews_History", Storage="_AimNews_Mail", ThisKey="MailID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Mail AimNews_Mail
		{
			get
			{
				return this._AimNews_Mail.Entity;
			}
			set
			{
				AimNews_Mail previousValue = this._AimNews_Mail.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Mail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Mail.Entity = null;
						previousValue.AimNews_Histories.Remove(this);
					}
					this._AimNews_Mail.Entity = value;
					if ((value != null))
					{
						value.AimNews_Histories.Add(this);
						this._MailID = value.ID;
					}
					else
					{
						this._MailID = default(int);
					}
					this.SendPropertyChanged("AimNews_Mail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_Links(AimNews_Link entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_History = this;
		}
		
		private void detach_AimNews_Links(AimNews_Link entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_History = null;
		}
		
		private void attach_AimNews_Logs(AimNews_Log entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_History = this;
		}
		
		private void detach_AimNews_Logs(AimNews_Log entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_History = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_LinkedClicked")]
	public partial class AimNews_LinkedClicked : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID_FK;
		
		private int _LinkID_FK;
		
		private int _Count;
		
		private EntityRef<AimNews_Link> _AimNews_Link;
		
		private EntityRef<AimNews_Log> _AimNews_Log;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogID_FKChanging(int value);
    partial void OnLogID_FKChanged();
    partial void OnLinkID_FKChanging(int value);
    partial void OnLinkID_FKChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    #endregion
		
		public AimNews_LinkedClicked()
		{
			this._AimNews_Link = default(EntityRef<AimNews_Link>);
			this._AimNews_Log = default(EntityRef<AimNews_Log>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LogID_FK
		{
			get
			{
				return this._LogID_FK;
			}
			set
			{
				if ((this._LogID_FK != value))
				{
					if (this._AimNews_Log.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogID_FKChanging(value);
					this.SendPropertyChanging();
					this._LogID_FK = value;
					this.SendPropertyChanged("LogID_FK");
					this.OnLogID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LinkID_FK
		{
			get
			{
				return this._LinkID_FK;
			}
			set
			{
				if ((this._LinkID_FK != value))
				{
					if (this._AimNews_Link.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkID_FKChanging(value);
					this.SendPropertyChanging();
					this._LinkID_FK = value;
					this.SendPropertyChanged("LinkID_FK");
					this.OnLinkID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Link_AimNews_LinkedClicked", Storage="_AimNews_Link", ThisKey="LinkID_FK", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Link AimNews_Link
		{
			get
			{
				return this._AimNews_Link.Entity;
			}
			set
			{
				AimNews_Link previousValue = this._AimNews_Link.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Link.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Link.Entity = null;
						previousValue.AimNews_LinkedClickeds.Remove(this);
					}
					this._AimNews_Link.Entity = value;
					if ((value != null))
					{
						value.AimNews_LinkedClickeds.Add(this);
						this._LinkID_FK = value.ID;
					}
					else
					{
						this._LinkID_FK = default(int);
					}
					this.SendPropertyChanged("AimNews_Link");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Log_AimNews_LinkedClicked", Storage="_AimNews_Log", ThisKey="LogID_FK", OtherKey="ID", IsForeignKey=true)]
		public AimNews_Log AimNews_Log
		{
			get
			{
				return this._AimNews_Log.Entity;
			}
			set
			{
				AimNews_Log previousValue = this._AimNews_Log.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_Log.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_Log.Entity = null;
						previousValue.AimNews_LinkedClickeds.Remove(this);
					}
					this._AimNews_Log.Entity = value;
					if ((value != null))
					{
						value.AimNews_LinkedClickeds.Add(this);
						this._LogID_FK = value.ID;
					}
					else
					{
						this._LogID_FK = default(int);
					}
					this.SendPropertyChanged("AimNews_Log");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Links")]
	public partial class AimNews_Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _HistoryID_FK;
		
		private string _Url;
		
		private EntitySet<AimNews_LinkedClicked> _AimNews_LinkedClickeds;
		
		private EntityRef<AimNews_History> _AimNews_History;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHistoryID_FKChanging(int value);
    partial void OnHistoryID_FKChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public AimNews_Link()
		{
			this._AimNews_LinkedClickeds = new EntitySet<AimNews_LinkedClicked>(new Action<AimNews_LinkedClicked>(this.attach_AimNews_LinkedClickeds), new Action<AimNews_LinkedClicked>(this.detach_AimNews_LinkedClickeds));
			this._AimNews_History = default(EntityRef<AimNews_History>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID_FK", DbType="Int NOT NULL")]
		public int HistoryID_FK
		{
			get
			{
				return this._HistoryID_FK;
			}
			set
			{
				if ((this._HistoryID_FK != value))
				{
					if (this._AimNews_History.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHistoryID_FKChanging(value);
					this.SendPropertyChanging();
					this._HistoryID_FK = value;
					this.SendPropertyChanged("HistoryID_FK");
					this.OnHistoryID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(400)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Link_AimNews_LinkedClicked", Storage="_AimNews_LinkedClickeds", ThisKey="ID", OtherKey="LinkID_FK")]
		public EntitySet<AimNews_LinkedClicked> AimNews_LinkedClickeds
		{
			get
			{
				return this._AimNews_LinkedClickeds;
			}
			set
			{
				this._AimNews_LinkedClickeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_History_AimNews_Link", Storage="_AimNews_History", ThisKey="HistoryID_FK", OtherKey="ID", IsForeignKey=true)]
		public AimNews_History AimNews_History
		{
			get
			{
				return this._AimNews_History.Entity;
			}
			set
			{
				AimNews_History previousValue = this._AimNews_History.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_History.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_History.Entity = null;
						previousValue.AimNews_Links.Remove(this);
					}
					this._AimNews_History.Entity = value;
					if ((value != null))
					{
						value.AimNews_Links.Add(this);
						this._HistoryID_FK = value.ID;
					}
					else
					{
						this._HistoryID_FK = default(int);
					}
					this.SendPropertyChanged("AimNews_History");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_LinkedClickeds(AimNews_LinkedClicked entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Link = this;
		}
		
		private void detach_AimNews_LinkedClickeds(AimNews_LinkedClicked entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Link = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Log")]
	public partial class AimNews_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _HistoryID;
		
		private int _UserID;
		
		private string _MailAdress;
		
		private bool _isOpened;
		
		private bool _isError;
		
		private string _ErrorMessage;
		
		private System.DateTime _DateTime;
		
		private System.Nullable<System.DateTime> _openDate;
		
		private EntitySet<AimNews_LinkedClicked> _AimNews_LinkedClickeds;
		
		private EntityRef<AimNews_History> _AimNews_History;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMailAdressChanging(string value);
    partial void OnMailAdressChanged();
    partial void OnisOpenedChanging(bool value);
    partial void OnisOpenedChanged();
    partial void OnisErrorChanging(bool value);
    partial void OnisErrorChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnopenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnopenDateChanged();
    #endregion
		
		public AimNews_Log()
		{
			this._AimNews_LinkedClickeds = new EntitySet<AimNews_LinkedClicked>(new Action<AimNews_LinkedClicked>(this.attach_AimNews_LinkedClickeds), new Action<AimNews_LinkedClicked>(this.detach_AimNews_LinkedClickeds));
			this._AimNews_History = default(EntityRef<AimNews_History>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", DbType="Int NOT NULL")]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					if (this._AimNews_History.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAdress", DbType="NVarChar(100)")]
		public string MailAdress
		{
			get
			{
				return this._MailAdress;
			}
			set
			{
				if ((this._MailAdress != value))
				{
					this.OnMailAdressChanging(value);
					this.SendPropertyChanging();
					this._MailAdress = value;
					this.SendPropertyChanged("MailAdress");
					this.OnMailAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOpened", DbType="Bit NOT NULL")]
		public bool isOpened
		{
			get
			{
				return this._isOpened;
			}
			set
			{
				if ((this._isOpened != value))
				{
					this.OnisOpenedChanging(value);
					this.SendPropertyChanging();
					this._isOpened = value;
					this.SendPropertyChanged("isOpened");
					this.OnisOpenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isError", DbType="Bit NOT NULL")]
		public bool isError
		{
			get
			{
				return this._isError;
			}
			set
			{
				if ((this._isError != value))
				{
					this.OnisErrorChanging(value);
					this.SendPropertyChanging();
					this._isError = value;
					this.SendPropertyChanged("isError");
					this.OnisErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> openDate
		{
			get
			{
				return this._openDate;
			}
			set
			{
				if ((this._openDate != value))
				{
					this.OnopenDateChanging(value);
					this.SendPropertyChanging();
					this._openDate = value;
					this.SendPropertyChanged("openDate");
					this.OnopenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Log_AimNews_LinkedClicked", Storage="_AimNews_LinkedClickeds", ThisKey="ID", OtherKey="LogID_FK")]
		public EntitySet<AimNews_LinkedClicked> AimNews_LinkedClickeds
		{
			get
			{
				return this._AimNews_LinkedClickeds;
			}
			set
			{
				this._AimNews_LinkedClickeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_History_AimNews_Log", Storage="_AimNews_History", ThisKey="HistoryID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_History AimNews_History
		{
			get
			{
				return this._AimNews_History.Entity;
			}
			set
			{
				AimNews_History previousValue = this._AimNews_History.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_History.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_History.Entity = null;
						previousValue.AimNews_Logs.Remove(this);
					}
					this._AimNews_History.Entity = value;
					if ((value != null))
					{
						value.AimNews_Logs.Add(this);
						this._HistoryID = value.ID;
					}
					else
					{
						this._HistoryID = default(int);
					}
					this.SendPropertyChanged("AimNews_History");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_LinkedClickeds(AimNews_LinkedClicked entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Log = this;
		}
		
		private void detach_AimNews_LinkedClickeds(AimNews_LinkedClicked entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Log = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Mail")]
	public partial class AimNews_Mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AimNewsID;
		
		private string _MailKey;
		
		private string _Header;
		
		private string _MailContent;
		
		private string _FromMail;
		
		private string _FromName;
		
		private System.Nullable<System.DateTime> _LastSendDate;
		
		private System.Nullable<bool> _isScheduled;
		
		private string _TestMailRecepient;
		
		private bool _hasWebLink;
		
		private bool _hasUnregisterLink;
		
		private string _UnregisterText;
		
		private EntitySet<AimNews_History> _AimNews_Histories;
		
		private EntityRef<AimNews_AimNew> _AimNews_AimNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAimNewsIDChanging(int value);
    partial void OnAimNewsIDChanged();
    partial void OnMailKeyChanging(string value);
    partial void OnMailKeyChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnMailContentChanging(string value);
    partial void OnMailContentChanged();
    partial void OnFromMailChanging(string value);
    partial void OnFromMailChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnLastSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSendDateChanged();
    partial void OnisScheduledChanging(System.Nullable<bool> value);
    partial void OnisScheduledChanged();
    partial void OnTestMailRecepientChanging(string value);
    partial void OnTestMailRecepientChanged();
    partial void OnhasWebLinkChanging(bool value);
    partial void OnhasWebLinkChanged();
    partial void OnhasUnregisterLinkChanging(bool value);
    partial void OnhasUnregisterLinkChanged();
    partial void OnUnregisterTextChanging(string value);
    partial void OnUnregisterTextChanged();
    #endregion
		
		public AimNews_Mail()
		{
			this._AimNews_Histories = new EntitySet<AimNews_History>(new Action<AimNews_History>(this.attach_AimNews_Histories), new Action<AimNews_History>(this.detach_AimNews_Histories));
			this._AimNews_AimNew = default(EntityRef<AimNews_AimNew>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimNewsID", DbType="Int NOT NULL")]
		public int AimNewsID
		{
			get
			{
				return this._AimNewsID;
			}
			set
			{
				if ((this._AimNewsID != value))
				{
					if (this._AimNews_AimNew.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimNewsIDChanging(value);
					this.SendPropertyChanging();
					this._AimNewsID = value;
					this.SendPropertyChanged("AimNewsID");
					this.OnAimNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailKey", DbType="NVarChar(12)")]
		public string MailKey
		{
			get
			{
				return this._MailKey;
			}
			set
			{
				if ((this._MailKey != value))
				{
					this.OnMailKeyChanging(value);
					this.SendPropertyChanging();
					this._MailKey = value;
					this.SendPropertyChanged("MailKey");
					this.OnMailKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(50)")]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailContent", DbType="NVarChar(MAX)")]
		public string MailContent
		{
			get
			{
				return this._MailContent;
			}
			set
			{
				if ((this._MailContent != value))
				{
					this.OnMailContentChanging(value);
					this.SendPropertyChanging();
					this._MailContent = value;
					this.SendPropertyChanged("MailContent");
					this.OnMailContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMail", DbType="NVarChar(200)")]
		public string FromMail
		{
			get
			{
				return this._FromMail;
			}
			set
			{
				if ((this._FromMail != value))
				{
					this.OnFromMailChanging(value);
					this.SendPropertyChanging();
					this._FromMail = value;
					this.SendPropertyChanged("FromMail");
					this.OnFromMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="NVarChar(200)")]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this.OnFromNameChanging(value);
					this.SendPropertyChanging();
					this._FromName = value;
					this.SendPropertyChanged("FromName");
					this.OnFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSendDate
		{
			get
			{
				return this._LastSendDate;
			}
			set
			{
				if ((this._LastSendDate != value))
				{
					this.OnLastSendDateChanging(value);
					this.SendPropertyChanging();
					this._LastSendDate = value;
					this.SendPropertyChanged("LastSendDate");
					this.OnLastSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isScheduled", DbType="Bit")]
		public System.Nullable<bool> isScheduled
		{
			get
			{
				return this._isScheduled;
			}
			set
			{
				if ((this._isScheduled != value))
				{
					this.OnisScheduledChanging(value);
					this.SendPropertyChanging();
					this._isScheduled = value;
					this.SendPropertyChanged("isScheduled");
					this.OnisScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestMailRecepient", DbType="NVarChar(100)")]
		public string TestMailRecepient
		{
			get
			{
				return this._TestMailRecepient;
			}
			set
			{
				if ((this._TestMailRecepient != value))
				{
					this.OnTestMailRecepientChanging(value);
					this.SendPropertyChanging();
					this._TestMailRecepient = value;
					this.SendPropertyChanged("TestMailRecepient");
					this.OnTestMailRecepientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasWebLink", DbType="Bit NOT NULL")]
		public bool hasWebLink
		{
			get
			{
				return this._hasWebLink;
			}
			set
			{
				if ((this._hasWebLink != value))
				{
					this.OnhasWebLinkChanging(value);
					this.SendPropertyChanging();
					this._hasWebLink = value;
					this.SendPropertyChanged("hasWebLink");
					this.OnhasWebLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasUnregisterLink", DbType="Bit NOT NULL")]
		public bool hasUnregisterLink
		{
			get
			{
				return this._hasUnregisterLink;
			}
			set
			{
				if ((this._hasUnregisterLink != value))
				{
					this.OnhasUnregisterLinkChanging(value);
					this.SendPropertyChanging();
					this._hasUnregisterLink = value;
					this.SendPropertyChanged("hasUnregisterLink");
					this.OnhasUnregisterLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnregisterText", DbType="NVarChar(255)")]
		public string UnregisterText
		{
			get
			{
				return this._UnregisterText;
			}
			set
			{
				if ((this._UnregisterText != value))
				{
					this.OnUnregisterTextChanging(value);
					this.SendPropertyChanging();
					this._UnregisterText = value;
					this.SendPropertyChanged("UnregisterText");
					this.OnUnregisterTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_Mail_AimNews_History", Storage="_AimNews_Histories", ThisKey="ID", OtherKey="MailID")]
		public EntitySet<AimNews_History> AimNews_Histories
		{
			get
			{
				return this._AimNews_Histories;
			}
			set
			{
				this._AimNews_Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_Mail", Storage="_AimNews_AimNew", ThisKey="AimNewsID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_AimNew AimNews_AimNew
		{
			get
			{
				return this._AimNews_AimNew.Entity;
			}
			set
			{
				AimNews_AimNew previousValue = this._AimNews_AimNew.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_AimNew.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_AimNew.Entity = null;
						previousValue.AimNews_Mails.Remove(this);
					}
					this._AimNews_AimNew.Entity = value;
					if ((value != null))
					{
						value.AimNews_Mails.Add(this);
						this._AimNewsID = value.ID;
					}
					else
					{
						this._AimNewsID = default(int);
					}
					this.SendPropertyChanged("AimNews_AimNew");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_Histories(AimNews_History entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Mail = this;
		}
		
		private void detach_AimNews_Histories(AimNews_History entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_Mail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_MailGroup")]
	public partial class AimNews_MailGroup
	{
		
		private int _ID;
		
		private int _MailID;
		
		private int _GroupID;
		
		public AimNews_MailGroup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailID", DbType="Int NOT NULL")]
		public int MailID
		{
			get
			{
				return this._MailID;
			}
			set
			{
				if ((this._MailID != value))
				{
					this._MailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Site")]
	public partial class AimNews_Site
	{
		
		private int _ID;
		
		private int _SiteID;
		
		private int _AimNewsID;
		
		public AimNews_Site()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimNewsID", DbType="Int NOT NULL")]
		public int AimNewsID
		{
			get
			{
				return this._AimNewsID;
			}
			set
			{
				if ((this._AimNewsID != value))
				{
					this._AimNewsID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimNews_Users")]
	public partial class AimNews_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AimNewsID;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Company;
		
		private string _Telephone;
		
		private string _Mobile;
		
		private string _Fax;
		
		private string _Address;
		
		private string _Postal;
		
		private string _City;
		
		private string _Country;
		
		private string _Orgnr;
		
		private System.Nullable<bool> _Unregistered;
		
		private EntitySet<AimNews_GroupUser> _AimNews_GroupUsers;
		
		private EntityRef<AimNews_AimNew> _AimNews_AimNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAimNewsIDChanging(int value);
    partial void OnAimNewsIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostalChanging(string value);
    partial void OnPostalChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnOrgnrChanging(string value);
    partial void OnOrgnrChanged();
    partial void OnUnregisteredChanging(System.Nullable<bool> value);
    partial void OnUnregisteredChanged();
    #endregion
		
		public AimNews_User()
		{
			this._AimNews_GroupUsers = new EntitySet<AimNews_GroupUser>(new Action<AimNews_GroupUser>(this.attach_AimNews_GroupUsers), new Action<AimNews_GroupUser>(this.detach_AimNews_GroupUsers));
			this._AimNews_AimNew = default(EntityRef<AimNews_AimNew>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimNewsID", DbType="Int NOT NULL")]
		public int AimNewsID
		{
			get
			{
				return this._AimNewsID;
			}
			set
			{
				if ((this._AimNewsID != value))
				{
					if (this._AimNews_AimNew.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimNewsIDChanging(value);
					this.SendPropertyChanging();
					this._AimNewsID = value;
					this.SendPropertyChanged("AimNewsID");
					this.OnAimNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(100)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal", DbType="NVarChar(50)")]
		public string Postal
		{
			get
			{
				return this._Postal;
			}
			set
			{
				if ((this._Postal != value))
				{
					this.OnPostalChanging(value);
					this.SendPropertyChanging();
					this._Postal = value;
					this.SendPropertyChanged("Postal");
					this.OnPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orgnr", DbType="NVarChar(100)")]
		public string Orgnr
		{
			get
			{
				return this._Orgnr;
			}
			set
			{
				if ((this._Orgnr != value))
				{
					this.OnOrgnrChanging(value);
					this.SendPropertyChanging();
					this._Orgnr = value;
					this.SendPropertyChanged("Orgnr");
					this.OnOrgnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unregistered", DbType="Bit")]
		public System.Nullable<bool> Unregistered
		{
			get
			{
				return this._Unregistered;
			}
			set
			{
				if ((this._Unregistered != value))
				{
					this.OnUnregisteredChanging(value);
					this.SendPropertyChanging();
					this._Unregistered = value;
					this.SendPropertyChanged("Unregistered");
					this.OnUnregisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_User_AimNews_GroupUser", Storage="_AimNews_GroupUsers", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<AimNews_GroupUser> AimNews_GroupUsers
		{
			get
			{
				return this._AimNews_GroupUsers;
			}
			set
			{
				this._AimNews_GroupUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimNews_AimNew_AimNews_User", Storage="_AimNews_AimNew", ThisKey="AimNewsID", OtherKey="ID", IsForeignKey=true)]
		public AimNews_AimNew AimNews_AimNew
		{
			get
			{
				return this._AimNews_AimNew.Entity;
			}
			set
			{
				AimNews_AimNew previousValue = this._AimNews_AimNew.Entity;
				if (((previousValue != value) 
							|| (this._AimNews_AimNew.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimNews_AimNew.Entity = null;
						previousValue.AimNews_Users.Remove(this);
					}
					this._AimNews_AimNew.Entity = value;
					if ((value != null))
					{
						value.AimNews_Users.Add(this);
						this._AimNewsID = value.ID;
					}
					else
					{
						this._AimNewsID = default(int);
					}
					this.SendPropertyChanged("AimNews_AimNew");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimNews_GroupUsers(AimNews_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_User = this;
		}
		
		private void detach_AimNews_GroupUsers(AimNews_GroupUser entity)
		{
			this.SendPropertyChanging();
			entity.AimNews_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimScrum_Iterations")]
	public partial class AimScrum_Iteration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AimScrum_Project_FK;
		
		private int _IterationNumber;
		
		private int _AimScrum_Status_FK;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DevelopStarttime;
		
		private System.Nullable<System.DateTime> _TestStarttime;
		
		private System.Nullable<System.DateTime> _FeedbackStarttime;
		
		private System.Nullable<System.DateTime> _IterationEndtime;
		
		private EntitySet<AimScrum_Task> _AimScrum_Tasks;
		
		private EntityRef<AimScrum_Project> _AimScrum_Project;
		
		private EntityRef<AimScrum_Status> _AimScrum_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAimScrum_Project_FKChanging(int value);
    partial void OnAimScrum_Project_FKChanged();
    partial void OnIterationNumberChanging(int value);
    partial void OnIterationNumberChanged();
    partial void OnAimScrum_Status_FKChanging(int value);
    partial void OnAimScrum_Status_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDevelopStarttimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDevelopStarttimeChanged();
    partial void OnTestStarttimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTestStarttimeChanged();
    partial void OnFeedbackStarttimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFeedbackStarttimeChanged();
    partial void OnIterationEndtimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIterationEndtimeChanged();
    #endregion
		
		public AimScrum_Iteration()
		{
			this._AimScrum_Tasks = new EntitySet<AimScrum_Task>(new Action<AimScrum_Task>(this.attach_AimScrum_Tasks), new Action<AimScrum_Task>(this.detach_AimScrum_Tasks));
			this._AimScrum_Project = default(EntityRef<AimScrum_Project>);
			this._AimScrum_Status = default(EntityRef<AimScrum_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimScrum_Project_FK", DbType="Int NOT NULL")]
		public int AimScrum_Project_FK
		{
			get
			{
				return this._AimScrum_Project_FK;
			}
			set
			{
				if ((this._AimScrum_Project_FK != value))
				{
					if (this._AimScrum_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimScrum_Project_FKChanging(value);
					this.SendPropertyChanging();
					this._AimScrum_Project_FK = value;
					this.SendPropertyChanged("AimScrum_Project_FK");
					this.OnAimScrum_Project_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IterationNumber", DbType="Int NOT NULL")]
		public int IterationNumber
		{
			get
			{
				return this._IterationNumber;
			}
			set
			{
				if ((this._IterationNumber != value))
				{
					this.OnIterationNumberChanging(value);
					this.SendPropertyChanging();
					this._IterationNumber = value;
					this.SendPropertyChanged("IterationNumber");
					this.OnIterationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimScrum_Status_FK", DbType="Int NOT NULL")]
		public int AimScrum_Status_FK
		{
			get
			{
				return this._AimScrum_Status_FK;
			}
			set
			{
				if ((this._AimScrum_Status_FK != value))
				{
					if (this._AimScrum_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimScrum_Status_FKChanging(value);
					this.SendPropertyChanging();
					this._AimScrum_Status_FK = value;
					this.SendPropertyChanged("AimScrum_Status_FK");
					this.OnAimScrum_Status_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopStarttime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DevelopStarttime
		{
			get
			{
				return this._DevelopStarttime;
			}
			set
			{
				if ((this._DevelopStarttime != value))
				{
					this.OnDevelopStarttimeChanging(value);
					this.SendPropertyChanging();
					this._DevelopStarttime = value;
					this.SendPropertyChanged("DevelopStarttime");
					this.OnDevelopStarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestStarttime", DbType="DateTime")]
		public System.Nullable<System.DateTime> TestStarttime
		{
			get
			{
				return this._TestStarttime;
			}
			set
			{
				if ((this._TestStarttime != value))
				{
					this.OnTestStarttimeChanging(value);
					this.SendPropertyChanging();
					this._TestStarttime = value;
					this.SendPropertyChanged("TestStarttime");
					this.OnTestStarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedbackStarttime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FeedbackStarttime
		{
			get
			{
				return this._FeedbackStarttime;
			}
			set
			{
				if ((this._FeedbackStarttime != value))
				{
					this.OnFeedbackStarttimeChanging(value);
					this.SendPropertyChanging();
					this._FeedbackStarttime = value;
					this.SendPropertyChanged("FeedbackStarttime");
					this.OnFeedbackStarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IterationEndtime", DbType="DateTime")]
		public System.Nullable<System.DateTime> IterationEndtime
		{
			get
			{
				return this._IterationEndtime;
			}
			set
			{
				if ((this._IterationEndtime != value))
				{
					this.OnIterationEndtimeChanging(value);
					this.SendPropertyChanging();
					this._IterationEndtime = value;
					this.SendPropertyChanged("IterationEndtime");
					this.OnIterationEndtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimScrum_Iteration_AimScrum_Task", Storage="_AimScrum_Tasks", ThisKey="ID", OtherKey="AimScrum_Iteration_FK")]
		public EntitySet<AimScrum_Task> AimScrum_Tasks
		{
			get
			{
				return this._AimScrum_Tasks;
			}
			set
			{
				this._AimScrum_Tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimScrum_Project_AimScrum_Iteration", Storage="_AimScrum_Project", ThisKey="AimScrum_Project_FK", OtherKey="ID", IsForeignKey=true)]
		public AimScrum_Project AimScrum_Project
		{
			get
			{
				return this._AimScrum_Project.Entity;
			}
			set
			{
				AimScrum_Project previousValue = this._AimScrum_Project.Entity;
				if (((previousValue != value) 
							|| (this._AimScrum_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimScrum_Project.Entity = null;
						previousValue.AimScrum_Iterations.Remove(this);
					}
					this._AimScrum_Project.Entity = value;
					if ((value != null))
					{
						value.AimScrum_Iterations.Add(this);
						this._AimScrum_Project_FK = value.ID;
					}
					else
					{
						this._AimScrum_Project_FK = default(int);
					}
					this.SendPropertyChanged("AimScrum_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimScrum_Status_AimScrum_Iteration", Storage="_AimScrum_Status", ThisKey="AimScrum_Status_FK", OtherKey="ID", IsForeignKey=true)]
		public AimScrum_Status AimScrum_Status
		{
			get
			{
				return this._AimScrum_Status.Entity;
			}
			set
			{
				AimScrum_Status previousValue = this._AimScrum_Status.Entity;
				if (((previousValue != value) 
							|| (this._AimScrum_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimScrum_Status.Entity = null;
						previousValue.AimScrum_Iterations.Remove(this);
					}
					this._AimScrum_Status.Entity = value;
					if ((value != null))
					{
						value.AimScrum_Iterations.Add(this);
						this._AimScrum_Status_FK = value.ID;
					}
					else
					{
						this._AimScrum_Status_FK = default(int);
					}
					this.SendPropertyChanged("AimScrum_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimScrum_Tasks(AimScrum_Task entity)
		{
			this.SendPropertyChanging();
			entity.AimScrum_Iteration = this;
		}
		
		private void detach_AimScrum_Tasks(AimScrum_Task entity)
		{
			this.SendPropertyChanging();
			entity.AimScrum_Iteration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimScrum_Projects")]
	public partial class AimScrum_Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _DebitLevel;
		
		private EntitySet<AimScrum_Iteration> _AimScrum_Iterations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDebitLevelChanging(System.Nullable<int> value);
    partial void OnDebitLevelChanged();
    #endregion
		
		public AimScrum_Project()
		{
			this._AimScrum_Iterations = new EntitySet<AimScrum_Iteration>(new Action<AimScrum_Iteration>(this.attach_AimScrum_Iterations), new Action<AimScrum_Iteration>(this.detach_AimScrum_Iterations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitLevel", DbType="Int")]
		public System.Nullable<int> DebitLevel
		{
			get
			{
				return this._DebitLevel;
			}
			set
			{
				if ((this._DebitLevel != value))
				{
					this.OnDebitLevelChanging(value);
					this.SendPropertyChanging();
					this._DebitLevel = value;
					this.SendPropertyChanged("DebitLevel");
					this.OnDebitLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimScrum_Project_AimScrum_Iteration", Storage="_AimScrum_Iterations", ThisKey="ID", OtherKey="AimScrum_Project_FK")]
		public EntitySet<AimScrum_Iteration> AimScrum_Iterations
		{
			get
			{
				return this._AimScrum_Iterations;
			}
			set
			{
				this._AimScrum_Iterations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimScrum_Iterations(AimScrum_Iteration entity)
		{
			this.SendPropertyChanging();
			entity.AimScrum_Project = this;
		}
		
		private void detach_AimScrum_Iterations(AimScrum_Iteration entity)
		{
			this.SendPropertyChanging();
			entity.AimScrum_Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimScrum_Status")]
	public partial class AimScrum_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Status;
		
		private EntitySet<AimScrum_Iteration> _AimScrum_Iterations;
		
		private EntitySet<AimScrum_Task> _AimScrum_Tasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public AimScrum_Status()
		{
			this._AimScrum_Iterations = new EntitySet<AimScrum_Iteration>(new Action<AimScrum_Iteration>(this.attach_AimScrum_Iterations), new Action<AimScrum_Iteration>(this.detach_AimScrum_Iterations));
			this._AimScrum_Tasks = new EntitySet<AimScrum_Task>(new Action<AimScrum_Task>(this.attach_AimScrum_Tasks), new Action<AimScrum_Task>(this.detach_AimScrum_Tasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimScrum_Status_AimScrum_Iteration", Storage="_AimScrum_Iterations", ThisKey="ID", OtherKey="AimScrum_Status_FK")]
		public EntitySet<AimScrum_Iteration> AimScrum_Iterations
		{
			get
			{
				return this._AimScrum_Iterations;
			}
			set
			{
				this._AimScrum_Iterations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimScrum_Status_AimScrum_Task", Storage="_AimScrum_Tasks", ThisKey="ID", OtherKey="AimScrum_Status_FK")]
		public EntitySet<AimScrum_Task> AimScrum_Tasks
		{
			get
			{
				return this._AimScrum_Tasks;
			}
			set
			{
				this._AimScrum_Tasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimScrum_Iterations(AimScrum_Iteration entity)
		{
			this.SendPropertyChanging();
			entity.AimScrum_Status = this;
		}
		
		private void detach_AimScrum_Iterations(AimScrum_Iteration entity)
		{
			this.SendPropertyChanging();
			entity.AimScrum_Status = null;
		}
		
		private void attach_AimScrum_Tasks(AimScrum_Task entity)
		{
			this.SendPropertyChanging();
			entity.AimScrum_Status = this;
		}
		
		private void detach_AimScrum_Tasks(AimScrum_Task entity)
		{
			this.SendPropertyChanging();
			entity.AimScrum_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimScrum_Tasks")]
	public partial class AimScrum_Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AimScrum_Iteration_FK;
		
		private int _SortOrder;
		
		private int _AimScrum_Status_FK;
		
		private string _Name;
		
		private string _Description;
		
		private int _EstimatedTime;
		
		private System.Nullable<int> _UsedDevelopingTime;
		
		private System.Nullable<int> _UsedTestingTime;
		
		private string _TestComment;
		
		private EntityRef<AimScrum_Iteration> _AimScrum_Iteration;
		
		private EntityRef<AimScrum_Status> _AimScrum_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAimScrum_Iteration_FKChanging(int value);
    partial void OnAimScrum_Iteration_FKChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnAimScrum_Status_FKChanging(int value);
    partial void OnAimScrum_Status_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEstimatedTimeChanging(int value);
    partial void OnEstimatedTimeChanged();
    partial void OnUsedDevelopingTimeChanging(System.Nullable<int> value);
    partial void OnUsedDevelopingTimeChanged();
    partial void OnUsedTestingTimeChanging(System.Nullable<int> value);
    partial void OnUsedTestingTimeChanged();
    partial void OnTestCommentChanging(string value);
    partial void OnTestCommentChanged();
    #endregion
		
		public AimScrum_Task()
		{
			this._AimScrum_Iteration = default(EntityRef<AimScrum_Iteration>);
			this._AimScrum_Status = default(EntityRef<AimScrum_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimScrum_Iteration_FK", DbType="Int NOT NULL")]
		public int AimScrum_Iteration_FK
		{
			get
			{
				return this._AimScrum_Iteration_FK;
			}
			set
			{
				if ((this._AimScrum_Iteration_FK != value))
				{
					if (this._AimScrum_Iteration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimScrum_Iteration_FKChanging(value);
					this.SendPropertyChanging();
					this._AimScrum_Iteration_FK = value;
					this.SendPropertyChanged("AimScrum_Iteration_FK");
					this.OnAimScrum_Iteration_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimScrum_Status_FK", DbType="Int NOT NULL")]
		public int AimScrum_Status_FK
		{
			get
			{
				return this._AimScrum_Status_FK;
			}
			set
			{
				if ((this._AimScrum_Status_FK != value))
				{
					if (this._AimScrum_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAimScrum_Status_FKChanging(value);
					this.SendPropertyChanging();
					this._AimScrum_Status_FK = value;
					this.SendPropertyChanged("AimScrum_Status_FK");
					this.OnAimScrum_Status_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedTime", DbType="Int NOT NULL")]
		public int EstimatedTime
		{
			get
			{
				return this._EstimatedTime;
			}
			set
			{
				if ((this._EstimatedTime != value))
				{
					this.OnEstimatedTimeChanging(value);
					this.SendPropertyChanging();
					this._EstimatedTime = value;
					this.SendPropertyChanged("EstimatedTime");
					this.OnEstimatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedDevelopingTime", DbType="Int")]
		public System.Nullable<int> UsedDevelopingTime
		{
			get
			{
				return this._UsedDevelopingTime;
			}
			set
			{
				if ((this._UsedDevelopingTime != value))
				{
					this.OnUsedDevelopingTimeChanging(value);
					this.SendPropertyChanging();
					this._UsedDevelopingTime = value;
					this.SendPropertyChanged("UsedDevelopingTime");
					this.OnUsedDevelopingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedTestingTime", DbType="Int")]
		public System.Nullable<int> UsedTestingTime
		{
			get
			{
				return this._UsedTestingTime;
			}
			set
			{
				if ((this._UsedTestingTime != value))
				{
					this.OnUsedTestingTimeChanging(value);
					this.SendPropertyChanging();
					this._UsedTestingTime = value;
					this.SendPropertyChanged("UsedTestingTime");
					this.OnUsedTestingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestComment", DbType="NVarChar(MAX)")]
		public string TestComment
		{
			get
			{
				return this._TestComment;
			}
			set
			{
				if ((this._TestComment != value))
				{
					this.OnTestCommentChanging(value);
					this.SendPropertyChanging();
					this._TestComment = value;
					this.SendPropertyChanged("TestComment");
					this.OnTestCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimScrum_Iteration_AimScrum_Task", Storage="_AimScrum_Iteration", ThisKey="AimScrum_Iteration_FK", OtherKey="ID", IsForeignKey=true)]
		public AimScrum_Iteration AimScrum_Iteration
		{
			get
			{
				return this._AimScrum_Iteration.Entity;
			}
			set
			{
				AimScrum_Iteration previousValue = this._AimScrum_Iteration.Entity;
				if (((previousValue != value) 
							|| (this._AimScrum_Iteration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimScrum_Iteration.Entity = null;
						previousValue.AimScrum_Tasks.Remove(this);
					}
					this._AimScrum_Iteration.Entity = value;
					if ((value != null))
					{
						value.AimScrum_Tasks.Add(this);
						this._AimScrum_Iteration_FK = value.ID;
					}
					else
					{
						this._AimScrum_Iteration_FK = default(int);
					}
					this.SendPropertyChanged("AimScrum_Iteration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimScrum_Status_AimScrum_Task", Storage="_AimScrum_Status", ThisKey="AimScrum_Status_FK", OtherKey="ID", IsForeignKey=true)]
		public AimScrum_Status AimScrum_Status
		{
			get
			{
				return this._AimScrum_Status.Entity;
			}
			set
			{
				AimScrum_Status previousValue = this._AimScrum_Status.Entity;
				if (((previousValue != value) 
							|| (this._AimScrum_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimScrum_Status.Entity = null;
						previousValue.AimScrum_Tasks.Remove(this);
					}
					this._AimScrum_Status.Entity = value;
					if ((value != null))
					{
						value.AimScrum_Tasks.Add(this);
						this._AimScrum_Status_FK = value.ID;
					}
					else
					{
						this._AimScrum_Status_FK = default(int);
					}
					this.SendPropertyChanged("AimScrum_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimWalk_Groups")]
	public partial class AimWalk_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private int _CompanyID;
		
		private string _GroupName;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public AimWalk_Group()
		{
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_AimWalk_Group", Storage="_Site", ThisKey="CompanyID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.AimWalk_Groups.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.AimWalk_Groups.Add(this);
						this._CompanyID = value.SiteID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimWalk_Steps")]
	public partial class AimWalk_Step : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StepID;
		
		private System.Guid _UserID;
		
		private System.DateTime _StepDate;
		
		private int _Steps;
		
		private EntityRef<AimWalk_UsersInCompany> _AimWalk_UsersInCompany;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStepIDChanging(int value);
    partial void OnStepIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnStepDateChanging(System.DateTime value);
    partial void OnStepDateChanged();
    partial void OnStepsChanging(int value);
    partial void OnStepsChanged();
    #endregion
		
		public AimWalk_Step()
		{
			this._AimWalk_UsersInCompany = default(EntityRef<AimWalk_UsersInCompany>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StepID
		{
			get
			{
				return this._StepID;
			}
			set
			{
				if ((this._StepID != value))
				{
					this.OnStepIDChanging(value);
					this.SendPropertyChanging();
					this._StepID = value;
					this.SendPropertyChanged("StepID");
					this.OnStepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if ((this._AimWalk_UsersInCompany.HasLoadedOrAssignedValue || this._aspnet_User.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepDate", DbType="DateTime NOT NULL")]
		public System.DateTime StepDate
		{
			get
			{
				return this._StepDate;
			}
			set
			{
				if ((this._StepDate != value))
				{
					this.OnStepDateChanging(value);
					this.SendPropertyChanging();
					this._StepDate = value;
					this.SendPropertyChanged("StepDate");
					this.OnStepDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Steps", DbType="Int NOT NULL")]
		public int Steps
		{
			get
			{
				return this._Steps;
			}
			set
			{
				if ((this._Steps != value))
				{
					this.OnStepsChanging(value);
					this.SendPropertyChanging();
					this._Steps = value;
					this.SendPropertyChanged("Steps");
					this.OnStepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimWalk_UsersInCompany_AimWalk_Step", Storage="_AimWalk_UsersInCompany", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public AimWalk_UsersInCompany AimWalk_UsersInCompany
		{
			get
			{
				return this._AimWalk_UsersInCompany.Entity;
			}
			set
			{
				AimWalk_UsersInCompany previousValue = this._AimWalk_UsersInCompany.Entity;
				if (((previousValue != value) 
							|| (this._AimWalk_UsersInCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimWalk_UsersInCompany.Entity = null;
						previousValue.AimWalk_Steps.Remove(this);
					}
					this._AimWalk_UsersInCompany.Entity = value;
					if ((value != null))
					{
						value.AimWalk_Steps.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("AimWalk_UsersInCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_AimWalk_Step", Storage="_aspnet_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.AimWalk_Steps.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.AimWalk_Steps.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimWalk_UsersInCompany")]
	public partial class AimWalk_UsersInCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private System.Nullable<int> _CompanyID;
		
		private EntitySet<AimWalk_Step> _AimWalk_Steps;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public AimWalk_UsersInCompany()
		{
			this._AimWalk_Steps = new EntitySet<AimWalk_Step>(new Action<AimWalk_Step>(this.attach_AimWalk_Steps), new Action<AimWalk_Step>(this.detach_AimWalk_Steps));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AimWalk_UsersInCompany_AimWalk_Step", Storage="_AimWalk_Steps", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<AimWalk_Step> AimWalk_Steps
		{
			get
			{
				return this._AimWalk_Steps;
			}
			set
			{
				this._AimWalk_Steps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_AimWalk_UsersInCompany", Storage="_Site", ThisKey="CompanyID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.AimWalk_UsersInCompanies.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.AimWalk_UsersInCompanies.Add(this);
						this._CompanyID = value.SiteID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimWalk_Steps(AimWalk_Step entity)
		{
			this.SendPropertyChanging();
			entity.AimWalk_UsersInCompany = this;
		}
		
		private void detach_AimWalk_Steps(AimWalk_Step entity)
		{
			this.SendPropertyChanging();
			entity.AimWalk_UsersInCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AimWalk_UsersInGroup")]
	public partial class AimWalk_UsersInGroup
	{
		
		private System.Guid _UserID;
		
		private int _GroupID;
		
		public AimWalk_UsersInGroup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlbumPhoto")]
	public partial class AlbumPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Filename;
		
		private int _PhotoCategoryID;
		
		private System.Nullable<int> _Sort;
		
		private string _Comment;
		
		private bool _Deleted;
		
		private EntityRef<AlbumPhotoCategory> _AlbumPhotoCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnPhotoCategoryIDChanging(int value);
    partial void OnPhotoCategoryIDChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public AlbumPhoto()
		{
			this._AlbumPhotoCategory = default(EntityRef<AlbumPhotoCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(50)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoCategoryID", DbType="Int NOT NULL")]
		public int PhotoCategoryID
		{
			get
			{
				return this._PhotoCategoryID;
			}
			set
			{
				if ((this._PhotoCategoryID != value))
				{
					if (this._AlbumPhotoCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoCategoryID = value;
					this.SendPropertyChanged("PhotoCategoryID");
					this.OnPhotoCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AlbumPhotoCategory_AlbumPhoto", Storage="_AlbumPhotoCategory", ThisKey="PhotoCategoryID", OtherKey="ID", IsForeignKey=true)]
		public AlbumPhotoCategory AlbumPhotoCategory
		{
			get
			{
				return this._AlbumPhotoCategory.Entity;
			}
			set
			{
				AlbumPhotoCategory previousValue = this._AlbumPhotoCategory.Entity;
				if (((previousValue != value) 
							|| (this._AlbumPhotoCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AlbumPhotoCategory.Entity = null;
						previousValue.AlbumPhotos.Remove(this);
					}
					this._AlbumPhotoCategory.Entity = value;
					if ((value != null))
					{
						value.AlbumPhotos.Add(this);
						this._PhotoCategoryID = value.ID;
					}
					else
					{
						this._PhotoCategoryID = default(int);
					}
					this.SendPropertyChanged("AlbumPhotoCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlbumPhotoCategory")]
	public partial class AlbumPhotoCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CategoryName;
		
		private int _ObjectID;
		
		private bool _Deleted;
		
		private System.Nullable<System.DateTime> _CategoryDate;
		
		private string _CategoryComment;
		
		private System.Nullable<int> _AlbumCover;
		
		private EntitySet<AlbumPhoto> _AlbumPhotos;
		
		private EntitySet<AlbumPhotoInRole> _AlbumPhotoInRoles;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnCategoryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCategoryDateChanged();
    partial void OnCategoryCommentChanging(string value);
    partial void OnCategoryCommentChanged();
    partial void OnAlbumCoverChanging(System.Nullable<int> value);
    partial void OnAlbumCoverChanged();
    #endregion
		
		public AlbumPhotoCategory()
		{
			this._AlbumPhotos = new EntitySet<AlbumPhoto>(new Action<AlbumPhoto>(this.attach_AlbumPhotos), new Action<AlbumPhoto>(this.detach_AlbumPhotos));
			this._AlbumPhotoInRoles = new EntitySet<AlbumPhotoInRole>(new Action<AlbumPhotoInRole>(this.attach_AlbumPhotoInRoles), new Action<AlbumPhotoInRole>(this.detach_AlbumPhotoInRoles));
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(255)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CategoryDate
		{
			get
			{
				return this._CategoryDate;
			}
			set
			{
				if ((this._CategoryDate != value))
				{
					this.OnCategoryDateChanging(value);
					this.SendPropertyChanging();
					this._CategoryDate = value;
					this.SendPropertyChanged("CategoryDate");
					this.OnCategoryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryComment", DbType="NVarChar(255)")]
		public string CategoryComment
		{
			get
			{
				return this._CategoryComment;
			}
			set
			{
				if ((this._CategoryComment != value))
				{
					this.OnCategoryCommentChanging(value);
					this.SendPropertyChanging();
					this._CategoryComment = value;
					this.SendPropertyChanged("CategoryComment");
					this.OnCategoryCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumCover", DbType="Int")]
		public System.Nullable<int> AlbumCover
		{
			get
			{
				return this._AlbumCover;
			}
			set
			{
				if ((this._AlbumCover != value))
				{
					this.OnAlbumCoverChanging(value);
					this.SendPropertyChanging();
					this._AlbumCover = value;
					this.SendPropertyChanged("AlbumCover");
					this.OnAlbumCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AlbumPhotoCategory_AlbumPhoto", Storage="_AlbumPhotos", ThisKey="ID", OtherKey="PhotoCategoryID")]
		public EntitySet<AlbumPhoto> AlbumPhotos
		{
			get
			{
				return this._AlbumPhotos;
			}
			set
			{
				this._AlbumPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AlbumPhotoCategory_AlbumPhotoInRole", Storage="_AlbumPhotoInRoles", ThisKey="ID", OtherKey="PhotoCategoryId")]
		public EntitySet<AlbumPhotoInRole> AlbumPhotoInRoles
		{
			get
			{
				return this._AlbumPhotoInRoles;
			}
			set
			{
				this._AlbumPhotoInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_AlbumPhotoCategory", Storage="_Object", ThisKey="ObjectID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.AlbumPhotoCategories.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.AlbumPhotoCategories.Add(this);
						this._ObjectID = value.ObjectID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlbumPhotos(AlbumPhoto entity)
		{
			this.SendPropertyChanging();
			entity.AlbumPhotoCategory = this;
		}
		
		private void detach_AlbumPhotos(AlbumPhoto entity)
		{
			this.SendPropertyChanging();
			entity.AlbumPhotoCategory = null;
		}
		
		private void attach_AlbumPhotoInRoles(AlbumPhotoInRole entity)
		{
			this.SendPropertyChanging();
			entity.AlbumPhotoCategory = this;
		}
		
		private void detach_AlbumPhotoInRoles(AlbumPhotoInRole entity)
		{
			this.SendPropertyChanging();
			entity.AlbumPhotoCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlbumPhotoInRoles")]
	public partial class AlbumPhotoInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhotoCategoryId;
		
		private System.Guid _RoleId;
		
		private EntityRef<AlbumPhotoCategory> _AlbumPhotoCategory;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoCategoryIdChanging(int value);
    partial void OnPhotoCategoryIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AlbumPhotoInRole()
		{
			this._AlbumPhotoCategory = default(EntityRef<AlbumPhotoCategory>);
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoCategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PhotoCategoryId
		{
			get
			{
				return this._PhotoCategoryId;
			}
			set
			{
				if ((this._PhotoCategoryId != value))
				{
					if (this._AlbumPhotoCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoCategoryId = value;
					this.SendPropertyChanged("PhotoCategoryId");
					this.OnPhotoCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AlbumPhotoCategory_AlbumPhotoInRole", Storage="_AlbumPhotoCategory", ThisKey="PhotoCategoryId", OtherKey="ID", IsForeignKey=true)]
		public AlbumPhotoCategory AlbumPhotoCategory
		{
			get
			{
				return this._AlbumPhotoCategory.Entity;
			}
			set
			{
				AlbumPhotoCategory previousValue = this._AlbumPhotoCategory.Entity;
				if (((previousValue != value) 
							|| (this._AlbumPhotoCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AlbumPhotoCategory.Entity = null;
						previousValue.AlbumPhotoInRoles.Remove(this);
					}
					this._AlbumPhotoCategory.Entity = value;
					if ((value != null))
					{
						value.AlbumPhotoInRoles.Add(this);
						this._PhotoCategoryId = value.ID;
					}
					else
					{
						this._PhotoCategoryId = default(int);
					}
					this.SendPropertyChanged("AlbumPhotoCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_AlbumPhotoInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.AlbumPhotoInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.AlbumPhotoInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_AimFor2022")]
	public partial class Articles_AimFor2022 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CaseName;
		
		private string _Image;
		
		private string _DescriptionText;
		
		private int _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCaseNameChanging(string value);
    partial void OnCaseNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
		
		public Articles_AimFor2022()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CaseName
		{
			get
			{
				return this._CaseName;
			}
			set
			{
				if ((this._CaseName != value))
				{
					this.OnCaseNameChanging(value);
					this.SendPropertyChanging();
					this._CaseName = value;
					this.SendPropertyChanged("CaseName");
					this.OnCaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(MAX)")]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_Article")]
	public partial class Articles_Article
	{
		
		private System.Nullable<int> _ObjectID;
		
		private int _ID;
		
		private string _Grupp;
		
		private string _ArticleNo;
		
		private string _Name;
		
		private string _Description;
		
		private string _Material;
		
		private string _Dimension;
		
		private System.Nullable<double> _Price;
		
		private string _Unit;
		
		private string _Picture;
		
		private string _Lowres;
		
		private string _Highres;
		
		private System.Nullable<int> _visible;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedByID;
		
		private System.Nullable<System.DateTime> _Changed;
		
		private string _WebSite;
		
		private string _TaxRate;
		
		private string _Category;
		
		private System.Nullable<int> _CatalogID;
		
		private string _HTMLContent;
		
		private System.Nullable<int> _Sort;
		
		private string _SearchWords;
		
		private System.Nullable<int> _Stock;
		
		private System.Nullable<bool> _Outofstock;
		
		public Articles_Article()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grupp", DbType="NVarChar(10)")]
		public string Grupp
		{
			get
			{
				return this._Grupp;
			}
			set
			{
				if ((this._Grupp != value))
				{
					this._Grupp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleNo", DbType="NVarChar(50)")]
		public string ArticleNo
		{
			get
			{
				return this._ArticleNo;
			}
			set
			{
				if ((this._ArticleNo != value))
				{
					this._ArticleNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(100)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this._Material = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimension", DbType="NVarChar(100)")]
		public string Dimension
		{
			get
			{
				return this._Dimension;
			}
			set
			{
				if ((this._Dimension != value))
				{
					this._Dimension = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(10)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(500)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this._Picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lowres", DbType="NVarChar(200)")]
		public string Lowres
		{
			get
			{
				return this._Lowres;
			}
			set
			{
				if ((this._Lowres != value))
				{
					this._Lowres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Highres", DbType="NVarChar(200)")]
		public string Highres
		{
			get
			{
				return this._Highres;
			}
			set
			{
				if ((this._Highres != value))
				{
					this._Highres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visible", DbType="Int")]
		public System.Nullable<int> visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if ((this._visible != value))
				{
					this._visible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByID", DbType="NVarChar(25)")]
		public string CreatedByID
		{
			get
			{
				return this._CreatedByID;
			}
			set
			{
				if ((this._CreatedByID != value))
				{
					this._CreatedByID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Changed
		{
			get
			{
				return this._Changed;
			}
			set
			{
				if ((this._Changed != value))
				{
					this._Changed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(6)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="NVarChar(50)")]
		public string TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this._TaxRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(500)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogID", DbType="Int")]
		public System.Nullable<int> CatalogID
		{
			get
			{
				return this._CatalogID;
			}
			set
			{
				if ((this._CatalogID != value))
				{
					this._CatalogID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this._HTMLContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this._Sort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWords", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SearchWords
		{
			get
			{
				return this._SearchWords;
			}
			set
			{
				if ((this._SearchWords != value))
				{
					this._SearchWords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Int")]
		public System.Nullable<int> Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outofstock", DbType="Bit")]
		public System.Nullable<bool> Outofstock
		{
			get
			{
				return this._Outofstock;
			}
			set
			{
				if ((this._Outofstock != value))
				{
					this._Outofstock = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_Article_Info")]
	public partial class Articles_Article_Info
	{
		
		private int _ID;
		
		private string _ArticleID;
		
		private string _Price;
		
		private string _Volume;
		
		private string _Weight;
		
		public Articles_Article_Info()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					this._ArticleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="NVarChar(50)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="NVarChar(50)")]
		public string Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this._Volume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_Customer")]
	public partial class Articles_Customer
	{
		
		private int _CustomerID;
		
		private string _DelStore;
		
		private string _DelName;
		
		private string _DelOrgNo;
		
		private string _DelEmail;
		
		private string _DelPhone;
		
		private string _DelStreet;
		
		private string _DelZipCode;
		
		private string _DelCity;
		
		private string _DelCountry;
		
		private string _InvCompany;
		
		private string _InvAttention;
		
		private string _InvStreet;
		
		private string _InvZipCode;
		
		private string _InvCity;
		
		private string _InvCountry;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<int> _ActorID;
		
		public Articles_Customer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelStore", DbType="NVarChar(50)")]
		public string DelStore
		{
			get
			{
				return this._DelStore;
			}
			set
			{
				if ((this._DelStore != value))
				{
					this._DelStore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelName", DbType="NVarChar(50)")]
		public string DelName
		{
			get
			{
				return this._DelName;
			}
			set
			{
				if ((this._DelName != value))
				{
					this._DelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelOrgNo", DbType="NVarChar(50)")]
		public string DelOrgNo
		{
			get
			{
				return this._DelOrgNo;
			}
			set
			{
				if ((this._DelOrgNo != value))
				{
					this._DelOrgNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelEmail", DbType="NVarChar(50)")]
		public string DelEmail
		{
			get
			{
				return this._DelEmail;
			}
			set
			{
				if ((this._DelEmail != value))
				{
					this._DelEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelPhone", DbType="NVarChar(50)")]
		public string DelPhone
		{
			get
			{
				return this._DelPhone;
			}
			set
			{
				if ((this._DelPhone != value))
				{
					this._DelPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelStreet", DbType="NVarChar(50)")]
		public string DelStreet
		{
			get
			{
				return this._DelStreet;
			}
			set
			{
				if ((this._DelStreet != value))
				{
					this._DelStreet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelZipCode", DbType="NVarChar(50)")]
		public string DelZipCode
		{
			get
			{
				return this._DelZipCode;
			}
			set
			{
				if ((this._DelZipCode != value))
				{
					this._DelZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelCity", DbType="NVarChar(50)")]
		public string DelCity
		{
			get
			{
				return this._DelCity;
			}
			set
			{
				if ((this._DelCity != value))
				{
					this._DelCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelCountry", DbType="NVarChar(50)")]
		public string DelCountry
		{
			get
			{
				return this._DelCountry;
			}
			set
			{
				if ((this._DelCountry != value))
				{
					this._DelCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvCompany", DbType="NVarChar(50)")]
		public string InvCompany
		{
			get
			{
				return this._InvCompany;
			}
			set
			{
				if ((this._InvCompany != value))
				{
					this._InvCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvAttention", DbType="NVarChar(50)")]
		public string InvAttention
		{
			get
			{
				return this._InvAttention;
			}
			set
			{
				if ((this._InvAttention != value))
				{
					this._InvAttention = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvStreet", DbType="NVarChar(50)")]
		public string InvStreet
		{
			get
			{
				return this._InvStreet;
			}
			set
			{
				if ((this._InvStreet != value))
				{
					this._InvStreet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvZipCode", DbType="NVarChar(50)")]
		public string InvZipCode
		{
			get
			{
				return this._InvZipCode;
			}
			set
			{
				if ((this._InvZipCode != value))
				{
					this._InvZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvCity", DbType="NVarChar(50)")]
		public string InvCity
		{
			get
			{
				return this._InvCity;
			}
			set
			{
				if ((this._InvCity != value))
				{
					this._InvCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvCountry", DbType="NVarChar(50)")]
		public string InvCountry
		{
			get
			{
				return this._InvCountry;
			}
			set
			{
				if ((this._InvCountry != value))
				{
					this._InvCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorID", DbType="Int")]
		public System.Nullable<int> ActorID
		{
			get
			{
				return this._ActorID;
			}
			set
			{
				if ((this._ActorID != value))
				{
					this._ActorID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_DeliveryType")]
	public partial class Articles_DeliveryType
	{
		
		private int _ID;
		
		private string _LevSatt;
		
		private System.Nullable<int> _Pris;
		
		public Articles_DeliveryType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevSatt", DbType="NVarChar(255)")]
		public string LevSatt
		{
			get
			{
				return this._LevSatt;
			}
			set
			{
				if ((this._LevSatt != value))
				{
					this._LevSatt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pris", DbType="Int")]
		public System.Nullable<int> Pris
		{
			get
			{
				return this._Pris;
			}
			set
			{
				if ((this._Pris != value))
				{
					this._Pris = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_FIVE_Catalogs")]
	public partial class Articles_FIVE_Catalog
	{
		
		private int _CatalogID;
		
		private string _CatalogName;
		
		public Articles_FIVE_Catalog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int CatalogID
		{
			get
			{
				return this._CatalogID;
			}
			set
			{
				if ((this._CatalogID != value))
				{
					this._CatalogID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CatalogName
		{
			get
			{
				return this._CatalogName;
			}
			set
			{
				if ((this._CatalogName != value))
				{
					this._CatalogName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_FIVE_Colours")]
	public partial class Articles_FIVE_Colour
	{
		
		private int _ID;
		
		private string _ColourID;
		
		private string _ColourName;
		
		public Articles_FIVE_Colour()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColourID", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string ColourID
		{
			get
			{
				return this._ColourID;
			}
			set
			{
				if ((this._ColourID != value))
				{
					this._ColourID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColourName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ColourName
		{
			get
			{
				return this._ColourName;
			}
			set
			{
				if ((this._ColourName != value))
				{
					this._ColourName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_FIVE_Symbols")]
	public partial class Articles_FIVE_Symbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SymbolID;
		
		private string _SymbolName;
		
		private string _SymbolImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSymbolIDChanging(System.Nullable<int> value);
    partial void OnSymbolIDChanged();
    partial void OnSymbolNameChanging(string value);
    partial void OnSymbolNameChanged();
    partial void OnSymbolImageChanging(string value);
    partial void OnSymbolImageChanged();
    #endregion
		
		public Articles_FIVE_Symbol()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int")]
		public System.Nullable<int> SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this.OnSymbolIDChanging(value);
					this.SendPropertyChanging();
					this._SymbolID = value;
					this.SendPropertyChanged("SymbolID");
					this.OnSymbolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string SymbolName
		{
			get
			{
				return this._SymbolName;
			}
			set
			{
				if ((this._SymbolName != value))
				{
					this.OnSymbolNameChanging(value);
					this.SendPropertyChanging();
					this._SymbolName = value;
					this.SendPropertyChanged("SymbolName");
					this.OnSymbolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolImage", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		public string SymbolImage
		{
			get
			{
				return this._SymbolImage;
			}
			set
			{
				if ((this._SymbolImage != value))
				{
					this.OnSymbolImageChanging(value);
					this.SendPropertyChanging();
					this._SymbolImage = value;
					this.SendPropertyChanged("SymbolImage");
					this.OnSymbolImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_FIVE_SymbolsArticles")]
	public partial class Articles_FIVE_SymbolsArticle
	{
		
		private int _ID;
		
		private System.Nullable<int> _SymbolID;
		
		private string _ArticleID;
		
		private System.Nullable<int> _JacketSymbolID;
		
		private System.Nullable<int> _PantSymbolID;
		
		public Articles_FIVE_SymbolsArticle()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolID", DbType="Int")]
		public System.Nullable<int> SymbolID
		{
			get
			{
				return this._SymbolID;
			}
			set
			{
				if ((this._SymbolID != value))
				{
					this._SymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					this._ArticleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JacketSymbolID", DbType="Int")]
		public System.Nullable<int> JacketSymbolID
		{
			get
			{
				return this._JacketSymbolID;
			}
			set
			{
				if ((this._JacketSymbolID != value))
				{
					this._JacketSymbolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PantSymbolID", DbType="Int")]
		public System.Nullable<int> PantSymbolID
		{
			get
			{
				return this._PantSymbolID;
			}
			set
			{
				if ((this._PantSymbolID != value))
				{
					this._PantSymbolID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_GlobalFashion_AdComments")]
	public partial class Articles_GlobalFashion_AdComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Articles_GlobalFashion_Ads_FK;
		
		private System.Guid _User_FK;
		
		private string _Text;
		
		private System.DateTime _PublishDate;
		
		private EntityRef<Articles_GlobalFashion_Ad> _Articles_GlobalFashion_Ad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArticles_GlobalFashion_Ads_FKChanging(int value);
    partial void OnArticles_GlobalFashion_Ads_FKChanged();
    partial void OnUser_FKChanging(System.Guid value);
    partial void OnUser_FKChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnPublishDateChanging(System.DateTime value);
    partial void OnPublishDateChanged();
    #endregion
		
		public Articles_GlobalFashion_AdComment()
		{
			this._Articles_GlobalFashion_Ad = default(EntityRef<Articles_GlobalFashion_Ad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Articles_GlobalFashion_Ads_FK", DbType="Int NOT NULL")]
		public int Articles_GlobalFashion_Ads_FK
		{
			get
			{
				return this._Articles_GlobalFashion_Ads_FK;
			}
			set
			{
				if ((this._Articles_GlobalFashion_Ads_FK != value))
				{
					if (this._Articles_GlobalFashion_Ad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticles_GlobalFashion_Ads_FKChanging(value);
					this.SendPropertyChanging();
					this._Articles_GlobalFashion_Ads_FK = value;
					this.SendPropertyChanged("Articles_GlobalFashion_Ads_FK");
					this.OnArticles_GlobalFashion_Ads_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_FK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid User_FK
		{
			get
			{
				return this._User_FK;
			}
			set
			{
				if ((this._User_FK != value))
				{
					this.OnUser_FKChanging(value);
					this.SendPropertyChanging();
					this._User_FK = value;
					this.SendPropertyChanged("User_FK");
					this.OnUser_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="DateTime NOT NULL")]
		public System.DateTime PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articles_GlobalFashion_Ad_Articles_GlobalFashion_AdComment", Storage="_Articles_GlobalFashion_Ad", ThisKey="Articles_GlobalFashion_Ads_FK", OtherKey="ID", IsForeignKey=true)]
		public Articles_GlobalFashion_Ad Articles_GlobalFashion_Ad
		{
			get
			{
				return this._Articles_GlobalFashion_Ad.Entity;
			}
			set
			{
				Articles_GlobalFashion_Ad previousValue = this._Articles_GlobalFashion_Ad.Entity;
				if (((previousValue != value) 
							|| (this._Articles_GlobalFashion_Ad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articles_GlobalFashion_Ad.Entity = null;
						previousValue.Articles_GlobalFashion_AdComments.Remove(this);
					}
					this._Articles_GlobalFashion_Ad.Entity = value;
					if ((value != null))
					{
						value.Articles_GlobalFashion_AdComments.Add(this);
						this._Articles_GlobalFashion_Ads_FK = value.ID;
					}
					else
					{
						this._Articles_GlobalFashion_Ads_FK = default(int);
					}
					this.SendPropertyChanged("Articles_GlobalFashion_Ad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_GlobalFashion_Ads")]
	public partial class Articles_GlobalFashion_Ad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AnnonsTyp_FK;
		
		private int _AnnonsUnderkategori_FK;
		
		private System.Guid _User_FK;
		
		private System.DateTime _PublishDate;
		
		private int _Price;
		
		private string _AdTitle;
		
		private string _AdText;
		
		private string _ImagePath;
		
		private string _ImagePath2;
		
		private bool _Published;
		
		private bool _Deleted;
		
		private bool _Preview;
		
		private EntitySet<Articles_GlobalFashion_AdComment> _Articles_GlobalFashion_AdComments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAnnonsTyp_FKChanging(int value);
    partial void OnAnnonsTyp_FKChanged();
    partial void OnAnnonsUnderkategori_FKChanging(int value);
    partial void OnAnnonsUnderkategori_FKChanged();
    partial void OnUser_FKChanging(System.Guid value);
    partial void OnUser_FKChanged();
    partial void OnPublishDateChanging(System.DateTime value);
    partial void OnPublishDateChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnAdTitleChanging(string value);
    partial void OnAdTitleChanged();
    partial void OnAdTextChanging(string value);
    partial void OnAdTextChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnImagePath2Changing(string value);
    partial void OnImagePath2Changed();
    partial void OnPublishedChanging(bool value);
    partial void OnPublishedChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnPreviewChanging(bool value);
    partial void OnPreviewChanged();
    #endregion
		
		public Articles_GlobalFashion_Ad()
		{
			this._Articles_GlobalFashion_AdComments = new EntitySet<Articles_GlobalFashion_AdComment>(new Action<Articles_GlobalFashion_AdComment>(this.attach_Articles_GlobalFashion_AdComments), new Action<Articles_GlobalFashion_AdComment>(this.detach_Articles_GlobalFashion_AdComments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnonsTyp_FK", DbType="Int NOT NULL")]
		public int AnnonsTyp_FK
		{
			get
			{
				return this._AnnonsTyp_FK;
			}
			set
			{
				if ((this._AnnonsTyp_FK != value))
				{
					this.OnAnnonsTyp_FKChanging(value);
					this.SendPropertyChanging();
					this._AnnonsTyp_FK = value;
					this.SendPropertyChanged("AnnonsTyp_FK");
					this.OnAnnonsTyp_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnonsUnderkategori_FK", DbType="Int NOT NULL")]
		public int AnnonsUnderkategori_FK
		{
			get
			{
				return this._AnnonsUnderkategori_FK;
			}
			set
			{
				if ((this._AnnonsUnderkategori_FK != value))
				{
					this.OnAnnonsUnderkategori_FKChanging(value);
					this.SendPropertyChanging();
					this._AnnonsUnderkategori_FK = value;
					this.SendPropertyChanged("AnnonsUnderkategori_FK");
					this.OnAnnonsUnderkategori_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_FK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid User_FK
		{
			get
			{
				return this._User_FK;
			}
			set
			{
				if ((this._User_FK != value))
				{
					this.OnUser_FKChanging(value);
					this.SendPropertyChanging();
					this._User_FK = value;
					this.SendPropertyChanged("User_FK");
					this.OnUser_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="DateTime NOT NULL")]
		public System.DateTime PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdTitle", DbType="NVarChar(255)")]
		public string AdTitle
		{
			get
			{
				return this._AdTitle;
			}
			set
			{
				if ((this._AdTitle != value))
				{
					this.OnAdTitleChanging(value);
					this.SendPropertyChanging();
					this._AdTitle = value;
					this.SendPropertyChanged("AdTitle");
					this.OnAdTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdText", DbType="NVarChar(MAX)")]
		public string AdText
		{
			get
			{
				return this._AdText;
			}
			set
			{
				if ((this._AdText != value))
				{
					this.OnAdTextChanging(value);
					this.SendPropertyChanging();
					this._AdText = value;
					this.SendPropertyChanged("AdText");
					this.OnAdTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(400)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath2", DbType="NVarChar(400)")]
		public string ImagePath2
		{
			get
			{
				return this._ImagePath2;
			}
			set
			{
				if ((this._ImagePath2 != value))
				{
					this.OnImagePath2Changing(value);
					this.SendPropertyChanging();
					this._ImagePath2 = value;
					this.SendPropertyChanged("ImagePath2");
					this.OnImagePath2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preview", DbType="Bit NOT NULL")]
		public bool Preview
		{
			get
			{
				return this._Preview;
			}
			set
			{
				if ((this._Preview != value))
				{
					this.OnPreviewChanging(value);
					this.SendPropertyChanging();
					this._Preview = value;
					this.SendPropertyChanged("Preview");
					this.OnPreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articles_GlobalFashion_Ad_Articles_GlobalFashion_AdComment", Storage="_Articles_GlobalFashion_AdComments", ThisKey="ID", OtherKey="Articles_GlobalFashion_Ads_FK")]
		public EntitySet<Articles_GlobalFashion_AdComment> Articles_GlobalFashion_AdComments
		{
			get
			{
				return this._Articles_GlobalFashion_AdComments;
			}
			set
			{
				this._Articles_GlobalFashion_AdComments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles_GlobalFashion_AdComments(Articles_GlobalFashion_AdComment entity)
		{
			this.SendPropertyChanging();
			entity.Articles_GlobalFashion_Ad = this;
		}
		
		private void detach_Articles_GlobalFashion_AdComments(Articles_GlobalFashion_AdComment entity)
		{
			this.SendPropertyChanging();
			entity.Articles_GlobalFashion_Ad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_GlobalFashion_Common")]
	public partial class Articles_GlobalFashion_Common : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ListID;
		
		private System.Nullable<int> _Sort;
		
		private string _Properties;
		
		private string _Data;
		
		private EntityRef<Articles_GlobalFashion_ListName> _Articles_GlobalFashion_ListName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnListIDChanging(int value);
    partial void OnListIDChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public Articles_GlobalFashion_Common()
		{
			this._Articles_GlobalFashion_ListName = default(EntityRef<Articles_GlobalFashion_ListName>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int NOT NULL")]
		public int ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					if (this._Articles_GlobalFashion_ListName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articles_GlobalFashion_ListName_Articles_GlobalFashion_Common", Storage="_Articles_GlobalFashion_ListName", ThisKey="ListID", OtherKey="ID", IsForeignKey=true)]
		public Articles_GlobalFashion_ListName Articles_GlobalFashion_ListName
		{
			get
			{
				return this._Articles_GlobalFashion_ListName.Entity;
			}
			set
			{
				Articles_GlobalFashion_ListName previousValue = this._Articles_GlobalFashion_ListName.Entity;
				if (((previousValue != value) 
							|| (this._Articles_GlobalFashion_ListName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articles_GlobalFashion_ListName.Entity = null;
						previousValue.Articles_GlobalFashion_Commons.Remove(this);
					}
					this._Articles_GlobalFashion_ListName.Entity = value;
					if ((value != null))
					{
						value.Articles_GlobalFashion_Commons.Add(this);
						this._ListID = value.ID;
					}
					else
					{
						this._ListID = default(int);
					}
					this.SendPropertyChanged("Articles_GlobalFashion_ListName");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_GlobalFashion_ListNames")]
	public partial class Articles_GlobalFashion_ListName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ListName;
		
		private string _Columns;
		
		private EntitySet<Articles_GlobalFashion_Common> _Articles_GlobalFashion_Commons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnListNameChanging(string value);
    partial void OnListNameChanged();
    partial void OnColumnsChanging(string value);
    partial void OnColumnsChanged();
    #endregion
		
		public Articles_GlobalFashion_ListName()
		{
			this._Articles_GlobalFashion_Commons = new EntitySet<Articles_GlobalFashion_Common>(new Action<Articles_GlobalFashion_Common>(this.attach_Articles_GlobalFashion_Commons), new Action<Articles_GlobalFashion_Common>(this.detach_Articles_GlobalFashion_Commons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ListName
		{
			get
			{
				return this._ListName;
			}
			set
			{
				if ((this._ListName != value))
				{
					this.OnListNameChanging(value);
					this.SendPropertyChanging();
					this._ListName = value;
					this.SendPropertyChanged("ListName");
					this.OnListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Columns", DbType="NVarChar(MAX)")]
		public string Columns
		{
			get
			{
				return this._Columns;
			}
			set
			{
				if ((this._Columns != value))
				{
					this.OnColumnsChanging(value);
					this.SendPropertyChanging();
					this._Columns = value;
					this.SendPropertyChanged("Columns");
					this.OnColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articles_GlobalFashion_ListName_Articles_GlobalFashion_Common", Storage="_Articles_GlobalFashion_Commons", ThisKey="ID", OtherKey="ListID")]
		public EntitySet<Articles_GlobalFashion_Common> Articles_GlobalFashion_Commons
		{
			get
			{
				return this._Articles_GlobalFashion_Commons;
			}
			set
			{
				this._Articles_GlobalFashion_Commons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles_GlobalFashion_Commons(Articles_GlobalFashion_Common entity)
		{
			this.SendPropertyChanging();
			entity.Articles_GlobalFashion_ListName = this;
		}
		
		private void detach_Articles_GlobalFashion_Commons(Articles_GlobalFashion_Common entity)
		{
			this.SendPropertyChanging();
			entity.Articles_GlobalFashion_ListName = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_OrderDetail")]
	public partial class Articles_OrderDetail
	{
		
		private int _OrderID;
		
		private int _OrderDetailID;
		
		private System.Nullable<int> _PageID;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<double> _Price;
		
		private string _OrderDetailComment;
		
		private System.Nullable<int> _Shipped;
		
		public Articles_OrderDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int OrderDetailID
		{
			get
			{
				return this._OrderDetailID;
			}
			set
			{
				if ((this._OrderDetailID != value))
				{
					this._OrderDetailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this._PageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailComment", DbType="NVarChar(500)")]
		public string OrderDetailComment
		{
			get
			{
				return this._OrderDetailComment;
			}
			set
			{
				if ((this._OrderDetailComment != value))
				{
					this._OrderDetailComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipped", DbType="Int")]
		public System.Nullable<int> Shipped
		{
			get
			{
				return this._Shipped;
			}
			set
			{
				if ((this._Shipped != value))
				{
					this._Shipped = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_OrderEmail")]
	public partial class Articles_OrderEmail
	{
		
		private int _OrderEmailID;
		
		private string _OrderEmailAddress;
		
		public Articles_OrderEmail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEmailID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int OrderEmailID
		{
			get
			{
				return this._OrderEmailID;
			}
			set
			{
				if ((this._OrderEmailID != value))
				{
					this._OrderEmailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEmailAddress", DbType="NVarChar(100)")]
		public string OrderEmailAddress
		{
			get
			{
				return this._OrderEmailAddress;
			}
			set
			{
				if ((this._OrderEmailAddress != value))
				{
					this._OrderEmailAddress = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_OrderHead")]
	public partial class Articles_OrderHead
	{
		
		private int _OrderID;
		
		private string _YourRef;
		
		private string _OrderLabel;
		
		private string _OrderComment;
		
		private string _SessionID;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private int _AllowSplitDelivery;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Adress;
		
		private string _ZipCode;
		
		private string _City;
		
		private string _Phone;
		
		private string _Phone2;
		
		private string _Fax;
		
		private System.DateTime _DateTime;
		
		private string _CareOf;
		
		private string _PaymentMethod;
		
		private int _SiteID;
		
		private System.Nullable<int> _BillingAddress;
		
		private System.Nullable<int> _ShippingAddress;
		
		private System.Nullable<bool> _Completed;
		
		private string _ShippingMethod;
		
		private System.Nullable<decimal> _ShippingPrice;
		
		public Articles_OrderHead()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YourRef", DbType="NVarChar(50)")]
		public string YourRef
		{
			get
			{
				return this._YourRef;
			}
			set
			{
				if ((this._YourRef != value))
				{
					this._YourRef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderLabel", DbType="NVarChar(50)")]
		public string OrderLabel
		{
			get
			{
				return this._OrderLabel;
			}
			set
			{
				if ((this._OrderLabel != value))
				{
					this._OrderLabel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderComment", DbType="NVarChar(200)")]
		public string OrderComment
		{
			get
			{
				return this._OrderComment;
			}
			set
			{
				if ((this._OrderComment != value))
				{
					this._OrderComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this._SessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this._OrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSplitDelivery", DbType="Int NOT NULL")]
		public int AllowSplitDelivery
		{
			get
			{
				return this._AllowSplitDelivery;
			}
			set
			{
				if ((this._AllowSplitDelivery != value))
				{
					this._AllowSplitDelivery = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this._DeliveryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(500)")]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this._Adress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this._ZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(100)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this._Phone2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareOf", DbType="NVarChar(100)")]
		public string CareOf
		{
			get
			{
				return this._CareOf;
			}
			set
			{
				if ((this._CareOf != value))
				{
					this._CareOf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethod", DbType="NVarChar(100)")]
		public string PaymentMethod
		{
			get
			{
				return this._PaymentMethod;
			}
			set
			{
				if ((this._PaymentMethod != value))
				{
					this._PaymentMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress", DbType="Int")]
		public System.Nullable<int> BillingAddress
		{
			get
			{
				return this._BillingAddress;
			}
			set
			{
				if ((this._BillingAddress != value))
				{
					this._BillingAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress", DbType="Int")]
		public System.Nullable<int> ShippingAddress
		{
			get
			{
				return this._ShippingAddress;
			}
			set
			{
				if ((this._ShippingAddress != value))
				{
					this._ShippingAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Bit")]
		public System.Nullable<bool> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMethod", DbType="NVarChar(350)")]
		public string ShippingMethod
		{
			get
			{
				return this._ShippingMethod;
			}
			set
			{
				if ((this._ShippingMethod != value))
				{
					this._ShippingMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingPrice", DbType="SmallMoney")]
		public System.Nullable<decimal> ShippingPrice
		{
			get
			{
				return this._ShippingPrice;
			}
			set
			{
				if ((this._ShippingPrice != value))
				{
					this._ShippingPrice = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_OrderHead_Deleted")]
	public partial class Articles_OrderHead_Deleted : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrderID;
		
		private System.DateTime _DeletedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnDeletedDateChanging(System.DateTime value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public Articles_OrderHead_Deleted()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_PaymentDetails")]
	public partial class Articles_PaymentDetail
	{
		
		private int _OrderID;
		
		private string _InvoiceID;
		
		private string _AuthID;
		
		private System.Nullable<byte> _PayedWithCreditCard;
		
		private System.Nullable<byte> _Success;
		
		private string _ResponseCode;
		
		private System.DateTime _DateTime;
		
		public Articles_PaymentDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="NVarChar(100)")]
		public string InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this._InvoiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthID", DbType="NVarChar(100)")]
		public string AuthID
		{
			get
			{
				return this._AuthID;
			}
			set
			{
				if ((this._AuthID != value))
				{
					this._AuthID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedWithCreditCard", DbType="TinyInt")]
		public System.Nullable<byte> PayedWithCreditCard
		{
			get
			{
				return this._PayedWithCreditCard;
			}
			set
			{
				if ((this._PayedWithCreditCard != value))
				{
					this._PayedWithCreditCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Success", DbType="TinyInt")]
		public System.Nullable<byte> Success
		{
			get
			{
				return this._Success;
			}
			set
			{
				if ((this._Success != value))
				{
					this._Success = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="NVarChar(50)")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this._ResponseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_Properties")]
	public partial class Articles_Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PropertyID;
		
		private int _ArticleID;
		
		private string _Property;
		
		private string _PropertyValues;
		
		private string _Color;
		
		private string _Size;
		
		private string _Picture;
		
		private System.Nullable<double> _Price;
		
		private string _Info;
		
		private string _ArtNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyIDChanging(int value);
    partial void OnPropertyIDChanged();
    partial void OnArticleIDChanging(int value);
    partial void OnArticleIDChanged();
    partial void OnPropertyChanging(string value);
    partial void OnPropertyChanged();
    partial void OnPropertyValuesChanging(string value);
    partial void OnPropertyValuesChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnArtNoChanging(string value);
    partial void OnArtNoChanged();
    #endregion
		
		public Articles_Property()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					this.OnPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyID = value;
					this.SendPropertyChanged("PropertyID");
					this.OnPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="Int NOT NULL")]
		public int ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					this.OnArticleIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleID = value;
					this.SendPropertyChanged("ArticleID");
					this.OnArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Property", DbType="NVarChar(255)")]
		public string Property
		{
			get
			{
				return this._Property;
			}
			set
			{
				if ((this._Property != value))
				{
					this.OnPropertyChanging(value);
					this.SendPropertyChanging();
					this._Property = value;
					this.SendPropertyChanged("Property");
					this.OnPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValues", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PropertyValues
		{
			get
			{
				return this._PropertyValues;
			}
			set
			{
				if ((this._PropertyValues != value))
				{
					this.OnPropertyValuesChanging(value);
					this.SendPropertyChanging();
					this._PropertyValues = value;
					this.SendPropertyChanged("PropertyValues");
					this.OnPropertyValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(100)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtNo", DbType="NVarChar(100)")]
		public string ArtNo
		{
			get
			{
				return this._ArtNo;
			}
			set
			{
				if ((this._ArtNo != value))
				{
					this.OnArtNoChanging(value);
					this.SendPropertyChanging();
					this._ArtNo = value;
					this.SendPropertyChanged("ArtNo");
					this.OnArtNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_Stavdal_ArticleFiles")]
	public partial class Articles_Stavdal_ArticleFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Article_FK;
		
		private string _FileName;
		
		private string _FileDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArticle_FKChanging(int value);
    partial void OnArticle_FKChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileDescriptionChanging(string value);
    partial void OnFileDescriptionChanged();
    #endregion
		
		public Articles_Stavdal_ArticleFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_FK", DbType="Int NOT NULL")]
		public int Article_FK
		{
			get
			{
				return this._Article_FK;
			}
			set
			{
				if ((this._Article_FK != value))
				{
					this.OnArticle_FKChanging(value);
					this.SendPropertyChanging();
					this._Article_FK = value;
					this.SendPropertyChanged("Article_FK");
					this.OnArticle_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDescription", DbType="NVarChar(255)")]
		public string FileDescription
		{
			get
			{
				return this._FileDescription;
			}
			set
			{
				if ((this._FileDescription != value))
				{
					this.OnFileDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FileDescription = value;
					this.SendPropertyChanged("FileDescription");
					this.OnFileDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_Stavdal_Categories")]
	public partial class Articles_Stavdal_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Parent_FK;
		
		private string _Name;
		
		private int _ObjectID;
		
		private byte _Deleted;
		
		private EntitySet<Articles_Stavdal_Category> _Articles_Stavdal_Categories;
		
		private EntityRef<Articles_Stavdal_Category> _Articles_Stavdal_Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParent_FKChanging(System.Nullable<int> value);
    partial void OnParent_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnDeletedChanging(byte value);
    partial void OnDeletedChanged();
    #endregion
		
		public Articles_Stavdal_Category()
		{
			this._Articles_Stavdal_Categories = new EntitySet<Articles_Stavdal_Category>(new Action<Articles_Stavdal_Category>(this.attach_Articles_Stavdal_Categories), new Action<Articles_Stavdal_Category>(this.detach_Articles_Stavdal_Categories));
			this._Articles_Stavdal_Category1 = default(EntityRef<Articles_Stavdal_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_FK", DbType="Int")]
		public System.Nullable<int> Parent_FK
		{
			get
			{
				return this._Parent_FK;
			}
			set
			{
				if ((this._Parent_FK != value))
				{
					if (this._Articles_Stavdal_Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParent_FKChanging(value);
					this.SendPropertyChanging();
					this._Parent_FK = value;
					this.SendPropertyChanged("Parent_FK");
					this.OnParent_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="TinyInt NOT NULL")]
		public byte Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articles_Stavdal_Category_Articles_Stavdal_Category", Storage="_Articles_Stavdal_Categories", ThisKey="ID", OtherKey="Parent_FK")]
		public EntitySet<Articles_Stavdal_Category> Articles_Stavdal_Categories
		{
			get
			{
				return this._Articles_Stavdal_Categories;
			}
			set
			{
				this._Articles_Stavdal_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Articles_Stavdal_Category_Articles_Stavdal_Category", Storage="_Articles_Stavdal_Category1", ThisKey="Parent_FK", OtherKey="ID", IsForeignKey=true)]
		public Articles_Stavdal_Category Articles_Stavdal_Category1
		{
			get
			{
				return this._Articles_Stavdal_Category1.Entity;
			}
			set
			{
				Articles_Stavdal_Category previousValue = this._Articles_Stavdal_Category1.Entity;
				if (((previousValue != value) 
							|| (this._Articles_Stavdal_Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Articles_Stavdal_Category1.Entity = null;
						previousValue.Articles_Stavdal_Categories.Remove(this);
					}
					this._Articles_Stavdal_Category1.Entity = value;
					if ((value != null))
					{
						value.Articles_Stavdal_Categories.Add(this);
						this._Parent_FK = value.ID;
					}
					else
					{
						this._Parent_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Articles_Stavdal_Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles_Stavdal_Categories(Articles_Stavdal_Category entity)
		{
			this.SendPropertyChanging();
			entity.Articles_Stavdal_Category1 = this;
		}
		
		private void detach_Articles_Stavdal_Categories(Articles_Stavdal_Category entity)
		{
			this.SendPropertyChanging();
			entity.Articles_Stavdal_Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_TempOrderDetail")]
	public partial class Articles_TempOrderDetail
	{
		
		private int _TempID;
		
		private System.Nullable<int> _ArticleID;
		
		private System.Nullable<int> _Quantity;
		
		private string _ExtraText;
		
		private string _SessionID;
		
		private System.DateTime _DateTime;
		
		public Articles_TempOrderDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TempID
		{
			get
			{
				return this._TempID;
			}
			set
			{
				if ((this._TempID != value))
				{
					this._TempID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="Int")]
		public System.Nullable<int> ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					this._ArticleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraText", DbType="NVarChar(200)")]
		public string ExtraText
		{
			get
			{
				return this._ExtraText;
			}
			set
			{
				if ((this._ExtraText != value))
				{
					this._ExtraText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", DbType="NVarChar(100)")]
		public string SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this._SessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles_Tjuge22")]
	public partial class Articles_Tjuge22 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Image;
		
		private string _DescriptionText;
		
		private int _Position;
		
		private int _ObjectId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnObjectIdChanging(int value);
    partial void OnObjectIdChanged();
    #endregion
		
		public Articles_Tjuge22()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(MAX)")]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int NOT NULL")]
		public int ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
		private EntitySet<RoleGroup> _RoleGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			this._RoleGroups = new EntitySet<RoleGroup>(new Action<RoleGroup>(this.attach_RoleGroups), new Action<RoleGroup>(this.detach_RoleGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_RoleGroup", Storage="_RoleGroups", ThisKey="ApplicationId", OtherKey="aspnet_Applications_FK")]
		public EntitySet<RoleGroup> RoleGroups
		{
			get
			{
				return this._RoleGroups;
			}
			set
			{
				this._RoleGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_RoleGroups(RoleGroup entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_RoleGroups(RoleGroup entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<AlbumPhotoInRole> _AlbumPhotoInRoles;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<Connect_Region> _Connect_Regions;
		
		private EntitySet<DocumentCategories_X_aspnet_Role> _DocumentCategories_X_aspnet_Roles;
		
		private EntitySet<Documents_X_aspnet_Role> _Documents_X_aspnet_Roles;
		
		private EntitySet<IntranetRoleInfo> _IntranetRoleInfos;
		
		private EntitySet<ObjectsInRole> _ObjectsInRoles;
		
		private EntitySet<RoleGroups_X_aspnet_Role> _RoleGroups_X_aspnet_Roles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._AlbumPhotoInRoles = new EntitySet<AlbumPhotoInRole>(new Action<AlbumPhotoInRole>(this.attach_AlbumPhotoInRoles), new Action<AlbumPhotoInRole>(this.detach_AlbumPhotoInRoles));
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._Connect_Regions = new EntitySet<Connect_Region>(new Action<Connect_Region>(this.attach_Connect_Regions), new Action<Connect_Region>(this.detach_Connect_Regions));
			this._DocumentCategories_X_aspnet_Roles = new EntitySet<DocumentCategories_X_aspnet_Role>(new Action<DocumentCategories_X_aspnet_Role>(this.attach_DocumentCategories_X_aspnet_Roles), new Action<DocumentCategories_X_aspnet_Role>(this.detach_DocumentCategories_X_aspnet_Roles));
			this._Documents_X_aspnet_Roles = new EntitySet<Documents_X_aspnet_Role>(new Action<Documents_X_aspnet_Role>(this.attach_Documents_X_aspnet_Roles), new Action<Documents_X_aspnet_Role>(this.detach_Documents_X_aspnet_Roles));
			this._IntranetRoleInfos = new EntitySet<IntranetRoleInfo>(new Action<IntranetRoleInfo>(this.attach_IntranetRoleInfos), new Action<IntranetRoleInfo>(this.detach_IntranetRoleInfos));
			this._ObjectsInRoles = new EntitySet<ObjectsInRole>(new Action<ObjectsInRole>(this.attach_ObjectsInRoles), new Action<ObjectsInRole>(this.detach_ObjectsInRoles));
			this._RoleGroups_X_aspnet_Roles = new EntitySet<RoleGroups_X_aspnet_Role>(new Action<RoleGroups_X_aspnet_Role>(this.attach_RoleGroups_X_aspnet_Roles), new Action<RoleGroups_X_aspnet_Role>(this.detach_RoleGroups_X_aspnet_Roles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_AlbumPhotoInRole", Storage="_AlbumPhotoInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<AlbumPhotoInRole> AlbumPhotoInRoles
		{
			get
			{
				return this._AlbumPhotoInRoles;
			}
			set
			{
				this._AlbumPhotoInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_Connect_Region", Storage="_Connect_Regions", ThisKey="RoleId", OtherKey="aspnet_Roles_FK")]
		public EntitySet<Connect_Region> Connect_Regions
		{
			get
			{
				return this._Connect_Regions;
			}
			set
			{
				this._Connect_Regions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_DocumentCategories_X_aspnet_Role", Storage="_DocumentCategories_X_aspnet_Roles", ThisKey="RoleId", OtherKey="RoleID")]
		public EntitySet<DocumentCategories_X_aspnet_Role> DocumentCategories_X_aspnet_Roles
		{
			get
			{
				return this._DocumentCategories_X_aspnet_Roles;
			}
			set
			{
				this._DocumentCategories_X_aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_Documents_X_aspnet_Role", Storage="_Documents_X_aspnet_Roles", ThisKey="RoleId", OtherKey="RoleID")]
		public EntitySet<Documents_X_aspnet_Role> Documents_X_aspnet_Roles
		{
			get
			{
				return this._Documents_X_aspnet_Roles;
			}
			set
			{
				this._Documents_X_aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_IntranetRoleInfo", Storage="_IntranetRoleInfos", ThisKey="RoleId", OtherKey="RoleID")]
		public EntitySet<IntranetRoleInfo> IntranetRoleInfos
		{
			get
			{
				return this._IntranetRoleInfos;
			}
			set
			{
				this._IntranetRoleInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_ObjectsInRole", Storage="_ObjectsInRoles", ThisKey="RoleId", OtherKey="RoleID")]
		public EntitySet<ObjectsInRole> ObjectsInRoles
		{
			get
			{
				return this._ObjectsInRoles;
			}
			set
			{
				this._ObjectsInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_RoleGroups_X_aspnet_Role", Storage="_RoleGroups_X_aspnet_Roles", ThisKey="RoleId", OtherKey="aspnet_Roles_FK")]
		public EntitySet<RoleGroups_X_aspnet_Role> RoleGroups_X_aspnet_Roles
		{
			get
			{
				return this._RoleGroups_X_aspnet_Roles;
			}
			set
			{
				this._RoleGroups_X_aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlbumPhotoInRoles(AlbumPhotoInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_AlbumPhotoInRoles(AlbumPhotoInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_Connect_Regions(Connect_Region entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_Connect_Regions(Connect_Region entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_DocumentCategories_X_aspnet_Roles(DocumentCategories_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_DocumentCategories_X_aspnet_Roles(DocumentCategories_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_Documents_X_aspnet_Roles(Documents_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_Documents_X_aspnet_Roles(Documents_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_IntranetRoleInfos(IntranetRoleInfo entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_IntranetRoleInfos(IntranetRoleInfo entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_ObjectsInRoles(ObjectsInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_ObjectsInRoles(ObjectsInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_RoleGroups_X_aspnet_Roles(RoleGroups_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_RoleGroups_X_aspnet_Roles(RoleGroups_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<AimWalk_Step> _AimWalk_Steps;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntityRef<aspnet_User> _aspnet_User2;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<Planinglist_Resource> _Planinglist_Resources;
		
		private EntitySet<Skogshjortarna_InternalComp_X_aspnet_User> _Skogshjortarna_InternalComp_X_aspnet_Users;
		
		private EntitySet<Skogshjortarna_NewsOwner> _Skogshjortarna_NewsOwners;
		
		private EntitySet<Skogshjortarna_TrainingDiary> _Skogshjortarna_TrainingDiaries;
		
		private EntitySet<TechnicalTip_Answer> _TechnicalTip_Answers;
		
		private EntitySet<TechnicalTip_Question> _TechnicalTip_Questions;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._AimWalk_Steps = new EntitySet<AimWalk_Step>(new Action<AimWalk_Step>(this.attach_AimWalk_Steps), new Action<AimWalk_Step>(this.detach_AimWalk_Steps));
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_User2 = default(EntityRef<aspnet_User>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._Planinglist_Resources = new EntitySet<Planinglist_Resource>(new Action<Planinglist_Resource>(this.attach_Planinglist_Resources), new Action<Planinglist_Resource>(this.detach_Planinglist_Resources));
			this._Skogshjortarna_InternalComp_X_aspnet_Users = new EntitySet<Skogshjortarna_InternalComp_X_aspnet_User>(new Action<Skogshjortarna_InternalComp_X_aspnet_User>(this.attach_Skogshjortarna_InternalComp_X_aspnet_Users), new Action<Skogshjortarna_InternalComp_X_aspnet_User>(this.detach_Skogshjortarna_InternalComp_X_aspnet_Users));
			this._Skogshjortarna_NewsOwners = new EntitySet<Skogshjortarna_NewsOwner>(new Action<Skogshjortarna_NewsOwner>(this.attach_Skogshjortarna_NewsOwners), new Action<Skogshjortarna_NewsOwner>(this.detach_Skogshjortarna_NewsOwners));
			this._Skogshjortarna_TrainingDiaries = new EntitySet<Skogshjortarna_TrainingDiary>(new Action<Skogshjortarna_TrainingDiary>(this.attach_Skogshjortarna_TrainingDiaries), new Action<Skogshjortarna_TrainingDiary>(this.detach_Skogshjortarna_TrainingDiaries));
			this._TechnicalTip_Answers = new EntitySet<TechnicalTip_Answer>(new Action<TechnicalTip_Answer>(this.attach_TechnicalTip_Answers), new Action<TechnicalTip_Answer>(this.detach_TechnicalTip_Answers));
			this._TechnicalTip_Questions = new EntitySet<TechnicalTip_Question>(new Action<TechnicalTip_Question>(this.attach_TechnicalTip_Questions), new Action<TechnicalTip_Question>(this.detach_TechnicalTip_Questions));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User1 = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_AimWalk_Step", Storage="_AimWalk_Steps", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<AimWalk_Step> AimWalk_Steps
		{
			get
			{
				return this._AimWalk_Steps;
			}
			set
			{
				this._AimWalk_Steps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_User", Storage="_aspnet_User2", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_User aspnet_User2
		{
			get
			{
				return this._aspnet_User2.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User2.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User2.Entity = null;
						previousValue.aspnet_User1 = null;
					}
					this._aspnet_User2.Entity = value;
					if ((value != null))
					{
						value.aspnet_User1 = this;
					}
					this.SendPropertyChanged("aspnet_User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Planinglist_Resource", Storage="_Planinglist_Resources", ThisKey="UserId", OtherKey="UserId_FK")]
		public EntitySet<Planinglist_Resource> Planinglist_Resources
		{
			get
			{
				return this._Planinglist_Resources;
			}
			set
			{
				this._Planinglist_Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Skogshjortarna_InternalComp_X_aspnet_User", Storage="_Skogshjortarna_InternalComp_X_aspnet_Users", ThisKey="UserId", OtherKey="aspnet_User_FK")]
		public EntitySet<Skogshjortarna_InternalComp_X_aspnet_User> Skogshjortarna_InternalComp_X_aspnet_Users
		{
			get
			{
				return this._Skogshjortarna_InternalComp_X_aspnet_Users;
			}
			set
			{
				this._Skogshjortarna_InternalComp_X_aspnet_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Skogshjortarna_NewsOwner", Storage="_Skogshjortarna_NewsOwners", ThisKey="UserId", OtherKey="OwnerUser")]
		public EntitySet<Skogshjortarna_NewsOwner> Skogshjortarna_NewsOwners
		{
			get
			{
				return this._Skogshjortarna_NewsOwners;
			}
			set
			{
				this._Skogshjortarna_NewsOwners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Skogshjortarna_TrainingDiary", Storage="_Skogshjortarna_TrainingDiaries", ThisKey="UserId", OtherKey="aspnet_User_FK")]
		public EntitySet<Skogshjortarna_TrainingDiary> Skogshjortarna_TrainingDiaries
		{
			get
			{
				return this._Skogshjortarna_TrainingDiaries;
			}
			set
			{
				this._Skogshjortarna_TrainingDiaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_TechnicalTip_Answer", Storage="_TechnicalTip_Answers", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<TechnicalTip_Answer> TechnicalTip_Answers
		{
			get
			{
				return this._TechnicalTip_Answers;
			}
			set
			{
				this._TechnicalTip_Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_TechnicalTip_Question", Storage="_TechnicalTip_Questions", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<TechnicalTip_Question> TechnicalTip_Questions
		{
			get
			{
				return this._TechnicalTip_Questions;
			}
			set
			{
				this._TechnicalTip_Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_User", Storage="_aspnet_User1", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User1
		{
			get
			{
				return this._aspnet_User1.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User1.Entity = null;
						previousValue.aspnet_User2 = null;
					}
					this._aspnet_User1.Entity = value;
					if ((value != null))
					{
						value.aspnet_User2 = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AimWalk_Steps(AimWalk_Step entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_AimWalk_Steps(AimWalk_Step entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Planinglist_Resources(Planinglist_Resource entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Planinglist_Resources(Planinglist_Resource entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Skogshjortarna_InternalComp_X_aspnet_Users(Skogshjortarna_InternalComp_X_aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Skogshjortarna_InternalComp_X_aspnet_Users(Skogshjortarna_InternalComp_X_aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Skogshjortarna_NewsOwners(Skogshjortarna_NewsOwner entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Skogshjortarna_NewsOwners(Skogshjortarna_NewsOwner entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Skogshjortarna_TrainingDiaries(Skogshjortarna_TrainingDiary entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Skogshjortarna_TrainingDiaries(Skogshjortarna_TrainingDiary entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_TechnicalTip_Answers(TechnicalTip_Answer entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_TechnicalTip_Answers(TechnicalTip_Answer entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_TechnicalTip_Questions(TechnicalTip_Question entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_TechnicalTip_Questions(TechnicalTip_Question entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booking_GSPublicItems_Resource")]
	public partial class Booking_GSPublicItems_Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _GSPublicItemsID;
		
		private int _ResourceID;
		
		private EntityRef<BookingResource> _BookingResource;
		
		private EntityRef<GS_BookingPublicItem> _GS_BookingPublicItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGSPublicItemsIDChanging(int value);
    partial void OnGSPublicItemsIDChanged();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    #endregion
		
		public Booking_GSPublicItems_Resource()
		{
			this._BookingResource = default(EntityRef<BookingResource>);
			this._GS_BookingPublicItem = default(EntityRef<GS_BookingPublicItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSPublicItemsID", DbType="Int NOT NULL")]
		public int GSPublicItemsID
		{
			get
			{
				return this._GSPublicItemsID;
			}
			set
			{
				if ((this._GSPublicItemsID != value))
				{
					if (this._GS_BookingPublicItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSPublicItemsIDChanging(value);
					this.SendPropertyChanging();
					this._GSPublicItemsID = value;
					this.SendPropertyChanged("GSPublicItemsID");
					this.OnGSPublicItemsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="Int NOT NULL")]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._BookingResource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingResource_Booking_GSPublicItems_Resource", Storage="_BookingResource", ThisKey="ResourceID", OtherKey="ID", IsForeignKey=true)]
		public BookingResource BookingResource
		{
			get
			{
				return this._BookingResource.Entity;
			}
			set
			{
				BookingResource previousValue = this._BookingResource.Entity;
				if (((previousValue != value) 
							|| (this._BookingResource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingResource.Entity = null;
						previousValue.Booking_GSPublicItems_Resources.Remove(this);
					}
					this._BookingResource.Entity = value;
					if ((value != null))
					{
						value.Booking_GSPublicItems_Resources.Add(this);
						this._ResourceID = value.ID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("BookingResource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GS_BookingPublicItem_Booking_GSPublicItems_Resource", Storage="_GS_BookingPublicItem", ThisKey="GSPublicItemsID", OtherKey="ID", IsForeignKey=true)]
		public GS_BookingPublicItem GS_BookingPublicItem
		{
			get
			{
				return this._GS_BookingPublicItem.Entity;
			}
			set
			{
				GS_BookingPublicItem previousValue = this._GS_BookingPublicItem.Entity;
				if (((previousValue != value) 
							|| (this._GS_BookingPublicItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GS_BookingPublicItem.Entity = null;
						previousValue.Booking_GSPublicItems_Resources.Remove(this);
					}
					this._GS_BookingPublicItem.Entity = value;
					if ((value != null))
					{
						value.Booking_GSPublicItems_Resources.Add(this);
						this._GSPublicItemsID = value.ID;
					}
					else
					{
						this._GSPublicItemsID = default(int);
					}
					this.SendPropertyChanged("GS_BookingPublicItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booking_Object_GSPublicItems")]
	public partial class Booking_Object_GSPublicItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _GS_PublicItemsID;
		
		private int _ObjectID;
		
		private EntityRef<BookingObject> _BookingObject;
		
		private EntityRef<GS_BookingPublicItem> _GS_BookingPublicItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGS_PublicItemsIDChanging(int value);
    partial void OnGS_PublicItemsIDChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    #endregion
		
		public Booking_Object_GSPublicItem()
		{
			this._BookingObject = default(EntityRef<BookingObject>);
			this._GS_BookingPublicItem = default(EntityRef<GS_BookingPublicItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GS_PublicItemsID", DbType="Int NOT NULL")]
		public int GS_PublicItemsID
		{
			get
			{
				return this._GS_PublicItemsID;
			}
			set
			{
				if ((this._GS_PublicItemsID != value))
				{
					if (this._GS_BookingPublicItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGS_PublicItemsIDChanging(value);
					this.SendPropertyChanging();
					this._GS_PublicItemsID = value;
					this.SendPropertyChanged("GS_PublicItemsID");
					this.OnGS_PublicItemsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._BookingObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingObject_Booking_Object_GSPublicItem", Storage="_BookingObject", ThisKey="ObjectID", OtherKey="ID", IsForeignKey=true)]
		public BookingObject BookingObject
		{
			get
			{
				return this._BookingObject.Entity;
			}
			set
			{
				BookingObject previousValue = this._BookingObject.Entity;
				if (((previousValue != value) 
							|| (this._BookingObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingObject.Entity = null;
						previousValue.Booking_Object_GSPublicItems.Remove(this);
					}
					this._BookingObject.Entity = value;
					if ((value != null))
					{
						value.Booking_Object_GSPublicItems.Add(this);
						this._ObjectID = value.ID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("BookingObject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GS_BookingPublicItem_Booking_Object_GSPublicItem", Storage="_GS_BookingPublicItem", ThisKey="GS_PublicItemsID", OtherKey="ID", IsForeignKey=true)]
		public GS_BookingPublicItem GS_BookingPublicItem
		{
			get
			{
				return this._GS_BookingPublicItem.Entity;
			}
			set
			{
				GS_BookingPublicItem previousValue = this._GS_BookingPublicItem.Entity;
				if (((previousValue != value) 
							|| (this._GS_BookingPublicItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GS_BookingPublicItem.Entity = null;
						previousValue.Booking_Object_GSPublicItems.Remove(this);
					}
					this._GS_BookingPublicItem.Entity = value;
					if ((value != null))
					{
						value.Booking_Object_GSPublicItems.Add(this);
						this._GS_PublicItemsID = value.ID;
					}
					else
					{
						this._GS_PublicItemsID = default(int);
					}
					this.SendPropertyChanged("GS_BookingPublicItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booking_X_NewsletterGroup")]
	public partial class Booking_X_NewsletterGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BookingWebUsers_FK;
		
		private int _Groups_FK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBookingWebUsers_FKChanging(int value);
    partial void OnBookingWebUsers_FKChanged();
    partial void OnGroups_FKChanging(int value);
    partial void OnGroups_FKChanged();
    #endregion
		
		public Booking_X_NewsletterGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingWebUsers_FK", DbType="Int NOT NULL")]
		public int BookingWebUsers_FK
		{
			get
			{
				return this._BookingWebUsers_FK;
			}
			set
			{
				if ((this._BookingWebUsers_FK != value))
				{
					this.OnBookingWebUsers_FKChanging(value);
					this.SendPropertyChanging();
					this._BookingWebUsers_FK = value;
					this.SendPropertyChanged("BookingWebUsers_FK");
					this.OnBookingWebUsers_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Groups_FK", DbType="Int NOT NULL")]
		public int Groups_FK
		{
			get
			{
				return this._Groups_FK;
			}
			set
			{
				if ((this._Groups_FK != value))
				{
					this.OnGroups_FKChanging(value);
					this.SendPropertyChanging();
					this._Groups_FK = value;
					this.SendPropertyChanged("Groups_FK");
					this.OnGroups_FKChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingCategory")]
	public partial class BookingCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _WebSite;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<int> _StudentActorID;
		
		private EntitySet<BookingHoliday> _BookingHolidays;
		
		private EntitySet<BookingObject> _BookingObjects;
		
		private EntitySet<BookingPreference> _BookingPreferences;
		
		private EntitySet<BookingSchema> _BookingSchemas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWebSiteChanging(System.Nullable<int> value);
    partial void OnWebSiteChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnStudentActorIDChanging(System.Nullable<int> value);
    partial void OnStudentActorIDChanged();
    #endregion
		
		public BookingCategory()
		{
			this._BookingHolidays = new EntitySet<BookingHoliday>(new Action<BookingHoliday>(this.attach_BookingHolidays), new Action<BookingHoliday>(this.detach_BookingHolidays));
			this._BookingObjects = new EntitySet<BookingObject>(new Action<BookingObject>(this.attach_BookingObjects), new Action<BookingObject>(this.detach_BookingObjects));
			this._BookingPreferences = new EntitySet<BookingPreference>(new Action<BookingPreference>(this.attach_BookingPreferences), new Action<BookingPreference>(this.detach_BookingPreferences));
			this._BookingSchemas = new EntitySet<BookingSchema>(new Action<BookingSchema>(this.attach_BookingSchemas), new Action<BookingSchema>(this.detach_BookingSchemas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="Int")]
		public System.Nullable<int> WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentActorID", DbType="Int")]
		public System.Nullable<int> StudentActorID
		{
			get
			{
				return this._StudentActorID;
			}
			set
			{
				if ((this._StudentActorID != value))
				{
					this.OnStudentActorIDChanging(value);
					this.SendPropertyChanging();
					this._StudentActorID = value;
					this.SendPropertyChanged("StudentActorID");
					this.OnStudentActorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCategory_BookingHoliday", Storage="_BookingHolidays", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<BookingHoliday> BookingHolidays
		{
			get
			{
				return this._BookingHolidays;
			}
			set
			{
				this._BookingHolidays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCategory_BookingObject", Storage="_BookingObjects", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<BookingObject> BookingObjects
		{
			get
			{
				return this._BookingObjects;
			}
			set
			{
				this._BookingObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCategory_BookingPreference", Storage="_BookingPreferences", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<BookingPreference> BookingPreferences
		{
			get
			{
				return this._BookingPreferences;
			}
			set
			{
				this._BookingPreferences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCategory_BookingSchema", Storage="_BookingSchemas", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<BookingSchema> BookingSchemas
		{
			get
			{
				return this._BookingSchemas;
			}
			set
			{
				this._BookingSchemas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingHolidays(BookingHoliday entity)
		{
			this.SendPropertyChanging();
			entity.BookingCategory = this;
		}
		
		private void detach_BookingHolidays(BookingHoliday entity)
		{
			this.SendPropertyChanging();
			entity.BookingCategory = null;
		}
		
		private void attach_BookingObjects(BookingObject entity)
		{
			this.SendPropertyChanging();
			entity.BookingCategory = this;
		}
		
		private void detach_BookingObjects(BookingObject entity)
		{
			this.SendPropertyChanging();
			entity.BookingCategory = null;
		}
		
		private void attach_BookingPreferences(BookingPreference entity)
		{
			this.SendPropertyChanging();
			entity.BookingCategory = this;
		}
		
		private void detach_BookingPreferences(BookingPreference entity)
		{
			this.SendPropertyChanging();
			entity.BookingCategory = null;
		}
		
		private void attach_BookingSchemas(BookingSchema entity)
		{
			this.SendPropertyChanging();
			entity.BookingCategory = this;
		}
		
		private void detach_BookingSchemas(BookingSchema entity)
		{
			this.SendPropertyChanging();
			entity.BookingCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingConfig")]
	public partial class BookingConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SiteID;
		
		private System.Nullable<bool> _ResourceIsUsed;
		
		private System.Nullable<bool> _JournalIsUsed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnResourceIsUsedChanging(System.Nullable<bool> value);
    partial void OnResourceIsUsedChanged();
    partial void OnJournalIsUsedChanging(System.Nullable<bool> value);
    partial void OnJournalIsUsedChanged();
    #endregion
		
		public BookingConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceIsUsed", DbType="Bit")]
		public System.Nullable<bool> ResourceIsUsed
		{
			get
			{
				return this._ResourceIsUsed;
			}
			set
			{
				if ((this._ResourceIsUsed != value))
				{
					this.OnResourceIsUsedChanging(value);
					this.SendPropertyChanging();
					this._ResourceIsUsed = value;
					this.SendPropertyChanged("ResourceIsUsed");
					this.OnResourceIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalIsUsed", DbType="Bit")]
		public System.Nullable<bool> JournalIsUsed
		{
			get
			{
				return this._JournalIsUsed;
			}
			set
			{
				if ((this._JournalIsUsed != value))
				{
					this.OnJournalIsUsedChanging(value);
					this.SendPropertyChanging();
					this._JournalIsUsed = value;
					this.SendPropertyChanged("JournalIsUsed");
					this.OnJournalIsUsedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingDay")]
	public partial class BookingDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<BookingSchema> _BookingSchemas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public BookingDay()
		{
			this._BookingSchemas = new EntitySet<BookingSchema>(new Action<BookingSchema>(this.attach_BookingSchemas), new Action<BookingSchema>(this.detach_BookingSchemas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(15)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingDay_BookingSchema", Storage="_BookingSchemas", ThisKey="ID", OtherKey="DayID")]
		public EntitySet<BookingSchema> BookingSchemas
		{
			get
			{
				return this._BookingSchemas;
			}
			set
			{
				this._BookingSchemas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingSchemas(BookingSchema entity)
		{
			this.SendPropertyChanging();
			entity.BookingDay = this;
		}
		
		private void detach_BookingSchemas(BookingSchema entity)
		{
			this.SendPropertyChanging();
			entity.BookingDay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingHolidays")]
	public partial class BookingHoliday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CategoryID;
		
		private int _HolidayYear;
		
		private System.DateTime _Holiday;
		
		private string _Description;
		
		private bool _Deleted;
		
		private EntityRef<BookingCategory> _BookingCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnHolidayYearChanging(int value);
    partial void OnHolidayYearChanged();
    partial void OnHolidayChanging(System.DateTime value);
    partial void OnHolidayChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public BookingHoliday()
		{
			this._BookingCategory = default(EntityRef<BookingCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._BookingCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayYear", DbType="Int NOT NULL")]
		public int HolidayYear
		{
			get
			{
				return this._HolidayYear;
			}
			set
			{
				if ((this._HolidayYear != value))
				{
					this.OnHolidayYearChanging(value);
					this.SendPropertyChanging();
					this._HolidayYear = value;
					this.SendPropertyChanged("HolidayYear");
					this.OnHolidayYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Holiday", DbType="DateTime NOT NULL")]
		public System.DateTime Holiday
		{
			get
			{
				return this._Holiday;
			}
			set
			{
				if ((this._Holiday != value))
				{
					this.OnHolidayChanging(value);
					this.SendPropertyChanging();
					this._Holiday = value;
					this.SendPropertyChanged("Holiday");
					this.OnHolidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCategory_BookingHoliday", Storage="_BookingCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public BookingCategory BookingCategory
		{
			get
			{
				return this._BookingCategory.Entity;
			}
			set
			{
				BookingCategory previousValue = this._BookingCategory.Entity;
				if (((previousValue != value) 
							|| (this._BookingCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCategory.Entity = null;
						previousValue.BookingHolidays.Remove(this);
					}
					this._BookingCategory.Entity = value;
					if ((value != null))
					{
						value.BookingHolidays.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("BookingCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingObject")]
	public partial class BookingObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CategoryID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<int> _CreatedBy;
		
		private bool _Deleted;
		
		private EntitySet<Booking_Object_GSPublicItem> _Booking_Object_GSPublicItems;
		
		private EntitySet<BookingTime> _BookingTimes;
		
		private EntityRef<BookingCategory> _BookingCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public BookingObject()
		{
			this._Booking_Object_GSPublicItems = new EntitySet<Booking_Object_GSPublicItem>(new Action<Booking_Object_GSPublicItem>(this.attach_Booking_Object_GSPublicItems), new Action<Booking_Object_GSPublicItem>(this.detach_Booking_Object_GSPublicItems));
			this._BookingTimes = new EntitySet<BookingTime>(new Action<BookingTime>(this.attach_BookingTimes), new Action<BookingTime>(this.detach_BookingTimes));
			this._BookingCategory = default(EntityRef<BookingCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._BookingCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingObject_Booking_Object_GSPublicItem", Storage="_Booking_Object_GSPublicItems", ThisKey="ID", OtherKey="ObjectID")]
		public EntitySet<Booking_Object_GSPublicItem> Booking_Object_GSPublicItems
		{
			get
			{
				return this._Booking_Object_GSPublicItems;
			}
			set
			{
				this._Booking_Object_GSPublicItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingObject_BookingTime", Storage="_BookingTimes", ThisKey="ID", OtherKey="ObjectID")]
		public EntitySet<BookingTime> BookingTimes
		{
			get
			{
				return this._BookingTimes;
			}
			set
			{
				this._BookingTimes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCategory_BookingObject", Storage="_BookingCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public BookingCategory BookingCategory
		{
			get
			{
				return this._BookingCategory.Entity;
			}
			set
			{
				BookingCategory previousValue = this._BookingCategory.Entity;
				if (((previousValue != value) 
							|| (this._BookingCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCategory.Entity = null;
						previousValue.BookingObjects.Remove(this);
					}
					this._BookingCategory.Entity = value;
					if ((value != null))
					{
						value.BookingObjects.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("BookingCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Booking_Object_GSPublicItems(Booking_Object_GSPublicItem entity)
		{
			this.SendPropertyChanging();
			entity.BookingObject = this;
		}
		
		private void detach_Booking_Object_GSPublicItems(Booking_Object_GSPublicItem entity)
		{
			this.SendPropertyChanging();
			entity.BookingObject = null;
		}
		
		private void attach_BookingTimes(BookingTime entity)
		{
			this.SendPropertyChanging();
			entity.BookingObject = this;
		}
		
		private void detach_BookingTimes(BookingTime entity)
		{
			this.SendPropertyChanging();
			entity.BookingObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingPreferences")]
	public partial class BookingPreference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CategoryID;
		
		private System.Nullable<int> _DaysAdvance;
		
		private System.Nullable<int> _DaysEdit;
		
		private EntityRef<BookingCategory> _BookingCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnDaysAdvanceChanging(System.Nullable<int> value);
    partial void OnDaysAdvanceChanged();
    partial void OnDaysEditChanging(System.Nullable<int> value);
    partial void OnDaysEditChanged();
    #endregion
		
		public BookingPreference()
		{
			this._BookingCategory = default(EntityRef<BookingCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._BookingCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysAdvance", DbType="Int")]
		public System.Nullable<int> DaysAdvance
		{
			get
			{
				return this._DaysAdvance;
			}
			set
			{
				if ((this._DaysAdvance != value))
				{
					this.OnDaysAdvanceChanging(value);
					this.SendPropertyChanging();
					this._DaysAdvance = value;
					this.SendPropertyChanged("DaysAdvance");
					this.OnDaysAdvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysEdit", DbType="Int")]
		public System.Nullable<int> DaysEdit
		{
			get
			{
				return this._DaysEdit;
			}
			set
			{
				if ((this._DaysEdit != value))
				{
					this.OnDaysEditChanging(value);
					this.SendPropertyChanging();
					this._DaysEdit = value;
					this.SendPropertyChanged("DaysEdit");
					this.OnDaysEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCategory_BookingPreference", Storage="_BookingCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public BookingCategory BookingCategory
		{
			get
			{
				return this._BookingCategory.Entity;
			}
			set
			{
				BookingCategory previousValue = this._BookingCategory.Entity;
				if (((previousValue != value) 
							|| (this._BookingCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCategory.Entity = null;
						previousValue.BookingPreferences.Remove(this);
					}
					this._BookingCategory.Entity = value;
					if ((value != null))
					{
						value.BookingPreferences.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("BookingCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingResource")]
	public partial class BookingResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CategoryID;
		
		private string _Name_First;
		
		private string _Name_Last;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<bool> _Deleted;
		
		private EntitySet<Booking_GSPublicItems_Resource> _Booking_GSPublicItems_Resources;
		
		private EntitySet<BookingResourceHoliday> _BookingResourceHolidays;
		
		private EntitySet<BookingResourceSchema> _BookingResourceSchemas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnName_FirstChanging(string value);
    partial void OnName_FirstChanged();
    partial void OnName_LastChanging(string value);
    partial void OnName_LastChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public BookingResource()
		{
			this._Booking_GSPublicItems_Resources = new EntitySet<Booking_GSPublicItems_Resource>(new Action<Booking_GSPublicItems_Resource>(this.attach_Booking_GSPublicItems_Resources), new Action<Booking_GSPublicItems_Resource>(this.detach_Booking_GSPublicItems_Resources));
			this._BookingResourceHolidays = new EntitySet<BookingResourceHoliday>(new Action<BookingResourceHoliday>(this.attach_BookingResourceHolidays), new Action<BookingResourceHoliday>(this.detach_BookingResourceHolidays));
			this._BookingResourceSchemas = new EntitySet<BookingResourceSchema>(new Action<BookingResourceSchema>(this.attach_BookingResourceSchemas), new Action<BookingResourceSchema>(this.detach_BookingResourceSchemas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_First", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_First
		{
			get
			{
				return this._Name_First;
			}
			set
			{
				if ((this._Name_First != value))
				{
					this.OnName_FirstChanging(value);
					this.SendPropertyChanging();
					this._Name_First = value;
					this.SendPropertyChanged("Name_First");
					this.OnName_FirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Last", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_Last
		{
			get
			{
				return this._Name_Last;
			}
			set
			{
				if ((this._Name_Last != value))
				{
					this.OnName_LastChanging(value);
					this.SendPropertyChanging();
					this._Name_Last = value;
					this.SendPropertyChanged("Name_Last");
					this.OnName_LastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingResource_Booking_GSPublicItems_Resource", Storage="_Booking_GSPublicItems_Resources", ThisKey="ID", OtherKey="ResourceID")]
		public EntitySet<Booking_GSPublicItems_Resource> Booking_GSPublicItems_Resources
		{
			get
			{
				return this._Booking_GSPublicItems_Resources;
			}
			set
			{
				this._Booking_GSPublicItems_Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingResource_BookingResourceHoliday", Storage="_BookingResourceHolidays", ThisKey="ID", OtherKey="Resource_FK")]
		public EntitySet<BookingResourceHoliday> BookingResourceHolidays
		{
			get
			{
				return this._BookingResourceHolidays;
			}
			set
			{
				this._BookingResourceHolidays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingResource_BookingResourceSchema", Storage="_BookingResourceSchemas", ThisKey="ID", OtherKey="ResourceID")]
		public EntitySet<BookingResourceSchema> BookingResourceSchemas
		{
			get
			{
				return this._BookingResourceSchemas;
			}
			set
			{
				this._BookingResourceSchemas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Booking_GSPublicItems_Resources(Booking_GSPublicItems_Resource entity)
		{
			this.SendPropertyChanging();
			entity.BookingResource = this;
		}
		
		private void detach_Booking_GSPublicItems_Resources(Booking_GSPublicItems_Resource entity)
		{
			this.SendPropertyChanging();
			entity.BookingResource = null;
		}
		
		private void attach_BookingResourceHolidays(BookingResourceHoliday entity)
		{
			this.SendPropertyChanging();
			entity.BookingResource = this;
		}
		
		private void detach_BookingResourceHolidays(BookingResourceHoliday entity)
		{
			this.SendPropertyChanging();
			entity.BookingResource = null;
		}
		
		private void attach_BookingResourceSchemas(BookingResourceSchema entity)
		{
			this.SendPropertyChanging();
			entity.BookingResource = this;
		}
		
		private void detach_BookingResourceSchemas(BookingResourceSchema entity)
		{
			this.SendPropertyChanging();
			entity.BookingResource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingResourceHoliday")]
	public partial class BookingResourceHoliday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Resource_FK;
		
		private System.DateTime _StartDay;
		
		private System.DateTime _EndDay;
		
		private EntityRef<BookingResource> _BookingResource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResource_FKChanging(int value);
    partial void OnResource_FKChanged();
    partial void OnStartDayChanging(System.DateTime value);
    partial void OnStartDayChanged();
    partial void OnEndDayChanging(System.DateTime value);
    partial void OnEndDayChanged();
    #endregion
		
		public BookingResourceHoliday()
		{
			this._BookingResource = default(EntityRef<BookingResource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_FK", DbType="Int NOT NULL")]
		public int Resource_FK
		{
			get
			{
				return this._Resource_FK;
			}
			set
			{
				if ((this._Resource_FK != value))
				{
					if (this._BookingResource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResource_FKChanging(value);
					this.SendPropertyChanging();
					this._Resource_FK = value;
					this.SendPropertyChanged("Resource_FK");
					this.OnResource_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDay", DbType="DateTime NOT NULL")]
		public System.DateTime StartDay
		{
			get
			{
				return this._StartDay;
			}
			set
			{
				if ((this._StartDay != value))
				{
					this.OnStartDayChanging(value);
					this.SendPropertyChanging();
					this._StartDay = value;
					this.SendPropertyChanged("StartDay");
					this.OnStartDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDay", DbType="DateTime NOT NULL")]
		public System.DateTime EndDay
		{
			get
			{
				return this._EndDay;
			}
			set
			{
				if ((this._EndDay != value))
				{
					this.OnEndDayChanging(value);
					this.SendPropertyChanging();
					this._EndDay = value;
					this.SendPropertyChanged("EndDay");
					this.OnEndDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingResource_BookingResourceHoliday", Storage="_BookingResource", ThisKey="Resource_FK", OtherKey="ID", IsForeignKey=true)]
		public BookingResource BookingResource
		{
			get
			{
				return this._BookingResource.Entity;
			}
			set
			{
				BookingResource previousValue = this._BookingResource.Entity;
				if (((previousValue != value) 
							|| (this._BookingResource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingResource.Entity = null;
						previousValue.BookingResourceHolidays.Remove(this);
					}
					this._BookingResource.Entity = value;
					if ((value != null))
					{
						value.BookingResourceHolidays.Add(this);
						this._Resource_FK = value.ID;
					}
					else
					{
						this._Resource_FK = default(int);
					}
					this.SendPropertyChanged("BookingResource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingResourceSchema")]
	public partial class BookingResourceSchema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResourceID;
		
		private int _DayID;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private EntityRef<BookingResource> _BookingResource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnDayIDChanging(int value);
    partial void OnDayIDChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    #endregion
		
		public BookingResourceSchema()
		{
			this._BookingResource = default(EntityRef<BookingResource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="Int NOT NULL")]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._BookingResource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayID", DbType="Int NOT NULL")]
		public int DayID
		{
			get
			{
				return this._DayID;
			}
			set
			{
				if ((this._DayID != value))
				{
					this.OnDayIDChanging(value);
					this.SendPropertyChanging();
					this._DayID = value;
					this.SendPropertyChanged("DayID");
					this.OnDayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="NVarChar(5)")]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NVarChar(5)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingResource_BookingResourceSchema", Storage="_BookingResource", ThisKey="ResourceID", OtherKey="ID", IsForeignKey=true)]
		public BookingResource BookingResource
		{
			get
			{
				return this._BookingResource.Entity;
			}
			set
			{
				BookingResource previousValue = this._BookingResource.Entity;
				if (((previousValue != value) 
							|| (this._BookingResource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingResource.Entity = null;
						previousValue.BookingResourceSchemas.Remove(this);
					}
					this._BookingResource.Entity = value;
					if ((value != null))
					{
						value.BookingResourceSchemas.Add(this);
						this._ResourceID = value.ID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("BookingResource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingSchema")]
	public partial class BookingSchema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CategoryID;
		
		private int _DayID;
		
		private string _DayFrom;
		
		private string _DayTo;
		
		private string _DayClosedFrom;
		
		private string _DayClosedTo;
		
		private EntityRef<BookingCategory> _BookingCategory;
		
		private EntityRef<BookingDay> _BookingDay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnDayIDChanging(int value);
    partial void OnDayIDChanged();
    partial void OnDayFromChanging(string value);
    partial void OnDayFromChanged();
    partial void OnDayToChanging(string value);
    partial void OnDayToChanged();
    partial void OnDayClosedFromChanging(string value);
    partial void OnDayClosedFromChanged();
    partial void OnDayClosedToChanging(string value);
    partial void OnDayClosedToChanged();
    #endregion
		
		public BookingSchema()
		{
			this._BookingCategory = default(EntityRef<BookingCategory>);
			this._BookingDay = default(EntityRef<BookingDay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._BookingCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayID", DbType="Int NOT NULL")]
		public int DayID
		{
			get
			{
				return this._DayID;
			}
			set
			{
				if ((this._DayID != value))
				{
					if (this._BookingDay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayIDChanging(value);
					this.SendPropertyChanging();
					this._DayID = value;
					this.SendPropertyChanged("DayID");
					this.OnDayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayFrom", DbType="NVarChar(5)")]
		public string DayFrom
		{
			get
			{
				return this._DayFrom;
			}
			set
			{
				if ((this._DayFrom != value))
				{
					this.OnDayFromChanging(value);
					this.SendPropertyChanging();
					this._DayFrom = value;
					this.SendPropertyChanged("DayFrom");
					this.OnDayFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayTo", DbType="NVarChar(5)")]
		public string DayTo
		{
			get
			{
				return this._DayTo;
			}
			set
			{
				if ((this._DayTo != value))
				{
					this.OnDayToChanging(value);
					this.SendPropertyChanging();
					this._DayTo = value;
					this.SendPropertyChanged("DayTo");
					this.OnDayToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayClosedFrom", DbType="NVarChar(5)")]
		public string DayClosedFrom
		{
			get
			{
				return this._DayClosedFrom;
			}
			set
			{
				if ((this._DayClosedFrom != value))
				{
					this.OnDayClosedFromChanging(value);
					this.SendPropertyChanging();
					this._DayClosedFrom = value;
					this.SendPropertyChanged("DayClosedFrom");
					this.OnDayClosedFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayClosedTo", DbType="NVarChar(5)")]
		public string DayClosedTo
		{
			get
			{
				return this._DayClosedTo;
			}
			set
			{
				if ((this._DayClosedTo != value))
				{
					this.OnDayClosedToChanging(value);
					this.SendPropertyChanging();
					this._DayClosedTo = value;
					this.SendPropertyChanged("DayClosedTo");
					this.OnDayClosedToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCategory_BookingSchema", Storage="_BookingCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public BookingCategory BookingCategory
		{
			get
			{
				return this._BookingCategory.Entity;
			}
			set
			{
				BookingCategory previousValue = this._BookingCategory.Entity;
				if (((previousValue != value) 
							|| (this._BookingCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCategory.Entity = null;
						previousValue.BookingSchemas.Remove(this);
					}
					this._BookingCategory.Entity = value;
					if ((value != null))
					{
						value.BookingSchemas.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("BookingCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingDay_BookingSchema", Storage="_BookingDay", ThisKey="DayID", OtherKey="ID", IsForeignKey=true)]
		public BookingDay BookingDay
		{
			get
			{
				return this._BookingDay.Entity;
			}
			set
			{
				BookingDay previousValue = this._BookingDay.Entity;
				if (((previousValue != value) 
							|| (this._BookingDay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingDay.Entity = null;
						previousValue.BookingSchemas.Remove(this);
					}
					this._BookingDay.Entity = value;
					if ((value != null))
					{
						value.BookingSchemas.Add(this);
						this._DayID = value.ID;
					}
					else
					{
						this._DayID = default(int);
					}
					this.SendPropertyChanged("BookingDay");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingTimes")]
	public partial class BookingTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RepeatingParentID;
		
		private System.Nullable<int> _ObjectID;
		
		private System.DateTime _BookedDate;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<System.DateTime> _Changed;
		
		private string _Comment;
		
		private bool _Deleted;
		
		private string _Notes;
		
		private System.Nullable<int> _Signature;
		
		private System.Nullable<int> _BookingsResourceID;
		
		private string _Journal;
		
		private EntityRef<BookingObject> _BookingObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRepeatingParentIDChanging(System.Nullable<int> value);
    partial void OnRepeatingParentIDChanged();
    partial void OnObjectIDChanging(System.Nullable<int> value);
    partial void OnObjectIDChanged();
    partial void OnBookedDateChanging(System.DateTime value);
    partial void OnBookedDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSignatureChanging(System.Nullable<int> value);
    partial void OnSignatureChanged();
    partial void OnBookingsResourceIDChanging(System.Nullable<int> value);
    partial void OnBookingsResourceIDChanged();
    partial void OnJournalChanging(string value);
    partial void OnJournalChanged();
    #endregion
		
		public BookingTime()
		{
			this._BookingObject = default(EntityRef<BookingObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepeatingParentID", DbType="Int")]
		public System.Nullable<int> RepeatingParentID
		{
			get
			{
				return this._RepeatingParentID;
			}
			set
			{
				if ((this._RepeatingParentID != value))
				{
					this.OnRepeatingParentIDChanging(value);
					this.SendPropertyChanging();
					this._RepeatingParentID = value;
					this.SendPropertyChanged("RepeatingParentID");
					this.OnRepeatingParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._BookingObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookedDate", DbType="DateTime NOT NULL")]
		public System.DateTime BookedDate
		{
			get
			{
				return this._BookedDate;
			}
			set
			{
				if ((this._BookedDate != value))
				{
					this.OnBookedDateChanging(value);
					this.SendPropertyChanging();
					this._BookedDate = value;
					this.SendPropertyChanged("BookedDate");
					this.OnBookedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Changed
		{
			get
			{
				return this._Changed;
			}
			set
			{
				if ((this._Changed != value))
				{
					this.OnChangedChanging(value);
					this.SendPropertyChanging();
					this._Changed = value;
					this.SendPropertyChanged("Changed");
					this.OnChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(300)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="Int")]
		public System.Nullable<int> Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingsResourceID", DbType="Int")]
		public System.Nullable<int> BookingsResourceID
		{
			get
			{
				return this._BookingsResourceID;
			}
			set
			{
				if ((this._BookingsResourceID != value))
				{
					this.OnBookingsResourceIDChanging(value);
					this.SendPropertyChanging();
					this._BookingsResourceID = value;
					this.SendPropertyChanged("BookingsResourceID");
					this.OnBookingsResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Journal", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Journal
		{
			get
			{
				return this._Journal;
			}
			set
			{
				if ((this._Journal != value))
				{
					this.OnJournalChanging(value);
					this.SendPropertyChanging();
					this._Journal = value;
					this.SendPropertyChanged("Journal");
					this.OnJournalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingObject_BookingTime", Storage="_BookingObject", ThisKey="ObjectID", OtherKey="ID", IsForeignKey=true)]
		public BookingObject BookingObject
		{
			get
			{
				return this._BookingObject.Entity;
			}
			set
			{
				BookingObject previousValue = this._BookingObject.Entity;
				if (((previousValue != value) 
							|| (this._BookingObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingObject.Entity = null;
						previousValue.BookingTimes.Remove(this);
					}
					this._BookingObject.Entity = value;
					if ((value != null))
					{
						value.BookingTimes.Add(this);
						this._ObjectID = value.ID;
					}
					else
					{
						this._ObjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookingObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingWebUsers")]
	public partial class BookingWebUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Email;
		
		private string _Password;
		
		private string _Website;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _Zipcode;
		
		private string _City;
		
		private string _Phone;
		
		private string _MobilePhone;
		
		private string _Birthdate;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<bool> _Verified;
		
		private bool _Deleted;
		
		private string _ActivationCode;
		
		private byte _SendInfo;
		
		private string _ExtraInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnBirthdateChanging(string value);
    partial void OnBirthdateChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnVerifiedChanging(System.Nullable<bool> value);
    partial void OnVerifiedChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnActivationCodeChanging(string value);
    partial void OnActivationCodeChanged();
    partial void OnSendInfoChanging(byte value);
    partial void OnSendInfoChanged();
    partial void OnExtraInfoChanging(string value);
    partial void OnExtraInfoChanged();
    #endregion
		
		public BookingWebUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="NVarChar(10)")]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(20)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="NVarChar(15)")]
		public string Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verified", DbType="Bit")]
		public System.Nullable<bool> Verified
		{
			get
			{
				return this._Verified;
			}
			set
			{
				if ((this._Verified != value))
				{
					this.OnVerifiedChanging(value);
					this.SendPropertyChanging();
					this._Verified = value;
					this.SendPropertyChanged("Verified");
					this.OnVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationCode", DbType="NVarChar(20)")]
		public string ActivationCode
		{
			get
			{
				return this._ActivationCode;
			}
			set
			{
				if ((this._ActivationCode != value))
				{
					this.OnActivationCodeChanging(value);
					this.SendPropertyChanging();
					this._ActivationCode = value;
					this.SendPropertyChanged("ActivationCode");
					this.OnActivationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendInfo", DbType="TinyInt NOT NULL")]
		public byte SendInfo
		{
			get
			{
				return this._SendInfo;
			}
			set
			{
				if ((this._SendInfo != value))
				{
					this.OnSendInfoChanging(value);
					this.SendPropertyChanging();
					this._SendInfo = value;
					this.SendPropertyChanged("SendInfo");
					this.OnSendInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraInfo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ExtraInfo
		{
			get
			{
				return this._ExtraInfo;
			}
			set
			{
				if ((this._ExtraInfo != value))
				{
					this.OnExtraInfoChanging(value);
					this.SendPropertyChanging();
					this._ExtraInfo = value;
					this.SendPropertyChanged("ExtraInfo");
					this.OnExtraInfoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calendar_Event_Category")]
	public partial class Calendar_Event_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ObjectID;
		
		private System.Nullable<int> _SiteID;
		
		private string _Title;
		
		private System.Nullable<byte> _PublicEdit;
		
		private EntitySet<Calendar_Event> _Calendar_Events;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnObjectIDChanging(System.Nullable<int> value);
    partial void OnObjectIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPublicEditChanging(System.Nullable<byte> value);
    partial void OnPublicEditChanged();
    #endregion
		
		public Calendar_Event_Category()
		{
			this._Calendar_Events = new EntitySet<Calendar_Event>(new Action<Calendar_Event>(this.attach_Calendar_Events), new Action<Calendar_Event>(this.detach_Calendar_Events));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicEdit", DbType="TinyInt")]
		public System.Nullable<byte> PublicEdit
		{
			get
			{
				return this._PublicEdit;
			}
			set
			{
				if ((this._PublicEdit != value))
				{
					this.OnPublicEditChanging(value);
					this.SendPropertyChanging();
					this._PublicEdit = value;
					this.SendPropertyChanged("PublicEdit");
					this.OnPublicEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calendar_Event_Category_Calendar_Event", Storage="_Calendar_Events", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Calendar_Event> Calendar_Events
		{
			get
			{
				return this._Calendar_Events;
			}
			set
			{
				this._Calendar_Events.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Calendar_Events(Calendar_Event entity)
		{
			this.SendPropertyChanging();
			entity.Calendar_Event_Category = this;
		}
		
		private void detach_Calendar_Events(Calendar_Event entity)
		{
			this.SendPropertyChanging();
			entity.Calendar_Event_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calendar_Events")]
	public partial class Calendar_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ObjectID;
		
		private System.Nullable<int> _SiteID;
		
		private System.Nullable<System.DateTime> _SelectedDay;
		
		private System.Nullable<System.DateTime> _TimeFrom;
		
		private System.Nullable<System.DateTime> _TimeTo;
		
		private string _EventHeader;
		
		private string _EventText;
		
		private System.Nullable<int> _CategoryID;
		
		private string _ExternalLink;
		
		private EntityRef<Calendar_Event_Category> _Calendar_Event_Category;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnObjectIDChanging(System.Nullable<int> value);
    partial void OnObjectIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnSelectedDayChanging(System.Nullable<System.DateTime> value);
    partial void OnSelectedDayChanged();
    partial void OnTimeFromChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeFromChanged();
    partial void OnTimeToChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeToChanged();
    partial void OnEventHeaderChanging(string value);
    partial void OnEventHeaderChanged();
    partial void OnEventTextChanging(string value);
    partial void OnEventTextChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnExternalLinkChanging(string value);
    partial void OnExternalLinkChanged();
    #endregion
		
		public Calendar_Event()
		{
			this._Calendar_Event_Category = default(EntityRef<Calendar_Event_Category>);
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> SelectedDay
		{
			get
			{
				return this._SelectedDay;
			}
			set
			{
				if ((this._SelectedDay != value))
				{
					this.OnSelectedDayChanging(value);
					this.SendPropertyChanging();
					this._SelectedDay = value;
					this.SendPropertyChanged("SelectedDay");
					this.OnSelectedDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeFrom
		{
			get
			{
				return this._TimeFrom;
			}
			set
			{
				if ((this._TimeFrom != value))
				{
					this.OnTimeFromChanging(value);
					this.SendPropertyChanging();
					this._TimeFrom = value;
					this.SendPropertyChanged("TimeFrom");
					this.OnTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeTo
		{
			get
			{
				return this._TimeTo;
			}
			set
			{
				if ((this._TimeTo != value))
				{
					this.OnTimeToChanging(value);
					this.SendPropertyChanging();
					this._TimeTo = value;
					this.SendPropertyChanged("TimeTo");
					this.OnTimeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventHeader", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string EventHeader
		{
			get
			{
				return this._EventHeader;
			}
			set
			{
				if ((this._EventHeader != value))
				{
					this.OnEventHeaderChanging(value);
					this.SendPropertyChanging();
					this._EventHeader = value;
					this.SendPropertyChanged("EventHeader");
					this.OnEventHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string EventText
		{
			get
			{
				return this._EventText;
			}
			set
			{
				if ((this._EventText != value))
				{
					this.OnEventTextChanging(value);
					this.SendPropertyChanging();
					this._EventText = value;
					this.SendPropertyChanged("EventText");
					this.OnEventTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Calendar_Event_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalLink", DbType="NVarChar(100)")]
		public string ExternalLink
		{
			get
			{
				return this._ExternalLink;
			}
			set
			{
				if ((this._ExternalLink != value))
				{
					this.OnExternalLinkChanging(value);
					this.SendPropertyChanging();
					this._ExternalLink = value;
					this.SendPropertyChanged("ExternalLink");
					this.OnExternalLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calendar_Event_Category_Calendar_Event", Storage="_Calendar_Event_Category", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public Calendar_Event_Category Calendar_Event_Category
		{
			get
			{
				return this._Calendar_Event_Category.Entity;
			}
			set
			{
				Calendar_Event_Category previousValue = this._Calendar_Event_Category.Entity;
				if (((previousValue != value) 
							|| (this._Calendar_Event_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Calendar_Event_Category.Entity = null;
						previousValue.Calendar_Events.Remove(this);
					}
					this._Calendar_Event_Category.Entity = value;
					if ((value != null))
					{
						value.Calendar_Events.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Calendar_Event_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Calendar_Event", Storage="_Object", ThisKey="ObjectID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Calendar_Events.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Calendar_Events.Add(this);
						this._ObjectID = value.ObjectID;
					}
					else
					{
						this._ObjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CG_Article")]
	public partial class CG_Article
	{
		
		private System.Nullable<int> _PageID;
		
		private int _ID;
		
		private string _Grupp;
		
		private string _ArticleNo;
		
		private string _Name;
		
		private string _Description;
		
		private string _Material;
		
		private string _Dimension;
		
		private System.Nullable<double> _Price;
		
		private string _Unit;
		
		private System.Nullable<int> _StralforsPicture;
		
		private string _Picture;
		
		private string _Pdf;
		
		private string _Lowres;
		
		private string _Highres;
		
		private string _Dwg;
		
		private System.Nullable<int> _OrderEmailID;
		
		private System.Nullable<int> _visible;
		
		private System.Nullable<System.DateTime> _Created;
		
		private string _CreatedByID;
		
		private System.Nullable<System.DateTime> _Changed;
		
		private string _ChangedBy;
		
		private string _WebSite;
		
		private string _Name_eng;
		
		private string _Description_eng;
		
		private string _Material_eng;
		
		private string _Dimension_eng;
		
		public CG_Article()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this._PageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grupp", DbType="NVarChar(10)")]
		public string Grupp
		{
			get
			{
				return this._Grupp;
			}
			set
			{
				if ((this._Grupp != value))
				{
					this._Grupp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleNo", DbType="NVarChar(50)")]
		public string ArticleNo
		{
			get
			{
				return this._ArticleNo;
			}
			set
			{
				if ((this._ArticleNo != value))
				{
					this._ArticleNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(100)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this._Material = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimension", DbType="NVarChar(100)")]
		public string Dimension
		{
			get
			{
				return this._Dimension;
			}
			set
			{
				if ((this._Dimension != value))
				{
					this._Dimension = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(10)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StralforsPicture", DbType="Int")]
		public System.Nullable<int> StralforsPicture
		{
			get
			{
				return this._StralforsPicture;
			}
			set
			{
				if ((this._StralforsPicture != value))
				{
					this._StralforsPicture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(500)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this._Picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdf", DbType="NVarChar(200)")]
		public string Pdf
		{
			get
			{
				return this._Pdf;
			}
			set
			{
				if ((this._Pdf != value))
				{
					this._Pdf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lowres", DbType="NVarChar(200)")]
		public string Lowres
		{
			get
			{
				return this._Lowres;
			}
			set
			{
				if ((this._Lowres != value))
				{
					this._Lowres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Highres", DbType="NVarChar(200)")]
		public string Highres
		{
			get
			{
				return this._Highres;
			}
			set
			{
				if ((this._Highres != value))
				{
					this._Highres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dwg", DbType="NVarChar(200)")]
		public string Dwg
		{
			get
			{
				return this._Dwg;
			}
			set
			{
				if ((this._Dwg != value))
				{
					this._Dwg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEmailID", DbType="Int")]
		public System.Nullable<int> OrderEmailID
		{
			get
			{
				return this._OrderEmailID;
			}
			set
			{
				if ((this._OrderEmailID != value))
				{
					this._OrderEmailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visible", DbType="Int")]
		public System.Nullable<int> visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if ((this._visible != value))
				{
					this._visible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByID", DbType="NVarChar(25)")]
		public string CreatedByID
		{
			get
			{
				return this._CreatedByID;
			}
			set
			{
				if ((this._CreatedByID != value))
				{
					this._CreatedByID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Changed
		{
			get
			{
				return this._Changed;
			}
			set
			{
				if ((this._Changed != value))
				{
					this._Changed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this._ChangedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(6)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_eng", DbType="NVarChar(50)")]
		public string Name_eng
		{
			get
			{
				return this._Name_eng;
			}
			set
			{
				if ((this._Name_eng != value))
				{
					this._Name_eng = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description_eng", DbType="NVarChar(500)")]
		public string Description_eng
		{
			get
			{
				return this._Description_eng;
			}
			set
			{
				if ((this._Description_eng != value))
				{
					this._Description_eng = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material_eng", DbType="NVarChar(100)")]
		public string Material_eng
		{
			get
			{
				return this._Material_eng;
			}
			set
			{
				if ((this._Material_eng != value))
				{
					this._Material_eng = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimension_eng", DbType="NVarChar(100)")]
		public string Dimension_eng
		{
			get
			{
				return this._Dimension_eng;
			}
			set
			{
				if ((this._Dimension_eng != value))
				{
					this._Dimension_eng = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CG_Article_Info")]
	public partial class CG_Article_Info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ArticleID;
		
		private string _Price;
		
		private string _Volume;
		
		private string _Weight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArticleIDChanging(string value);
    partial void OnArticleIDChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnVolumeChanging(string value);
    partial void OnVolumeChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    #endregion
		
		public CG_Article_Info()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleID
		{
			get
			{
				return this._ArticleID;
			}
			set
			{
				if ((this._ArticleID != value))
				{
					this.OnArticleIDChanging(value);
					this.SendPropertyChanging();
					this._ArticleID = value;
					this.SendPropertyChanged("ArticleID");
					this.OnArticleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="NVarChar(50)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="NVarChar(50)")]
		public string Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CG_Customer")]
	public partial class CG_Customer
	{
		
		private int _CustomerID;
		
		private string _DelStore;
		
		private string _DelName;
		
		private string _DelOrgNo;
		
		private string _DelEmail;
		
		private string _DelPhone;
		
		private string _DelStreet;
		
		private string _DelZipCode;
		
		private string _DelCity;
		
		private string _DelCountry;
		
		private string _InvCompany;
		
		private string _InvAttention;
		
		private string _InvStreet;
		
		private string _InvZipCode;
		
		private string _InvCity;
		
		private string _InvCountry;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<int> _ActorID;
		
		public CG_Customer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelStore", DbType="NVarChar(50)")]
		public string DelStore
		{
			get
			{
				return this._DelStore;
			}
			set
			{
				if ((this._DelStore != value))
				{
					this._DelStore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelName", DbType="NVarChar(50)")]
		public string DelName
		{
			get
			{
				return this._DelName;
			}
			set
			{
				if ((this._DelName != value))
				{
					this._DelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelOrgNo", DbType="NVarChar(50)")]
		public string DelOrgNo
		{
			get
			{
				return this._DelOrgNo;
			}
			set
			{
				if ((this._DelOrgNo != value))
				{
					this._DelOrgNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelEmail", DbType="NVarChar(50)")]
		public string DelEmail
		{
			get
			{
				return this._DelEmail;
			}
			set
			{
				if ((this._DelEmail != value))
				{
					this._DelEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelPhone", DbType="NVarChar(50)")]
		public string DelPhone
		{
			get
			{
				return this._DelPhone;
			}
			set
			{
				if ((this._DelPhone != value))
				{
					this._DelPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelStreet", DbType="NVarChar(50)")]
		public string DelStreet
		{
			get
			{
				return this._DelStreet;
			}
			set
			{
				if ((this._DelStreet != value))
				{
					this._DelStreet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelZipCode", DbType="NVarChar(50)")]
		public string DelZipCode
		{
			get
			{
				return this._DelZipCode;
			}
			set
			{
				if ((this._DelZipCode != value))
				{
					this._DelZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelCity", DbType="NVarChar(50)")]
		public string DelCity
		{
			get
			{
				return this._DelCity;
			}
			set
			{
				if ((this._DelCity != value))
				{
					this._DelCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelCountry", DbType="NVarChar(50)")]
		public string DelCountry
		{
			get
			{
				return this._DelCountry;
			}
			set
			{
				if ((this._DelCountry != value))
				{
					this._DelCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvCompany", DbType="NVarChar(50)")]
		public string InvCompany
		{
			get
			{
				return this._InvCompany;
			}
			set
			{
				if ((this._InvCompany != value))
				{
					this._InvCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvAttention", DbType="NVarChar(50)")]
		public string InvAttention
		{
			get
			{
				return this._InvAttention;
			}
			set
			{
				if ((this._InvAttention != value))
				{
					this._InvAttention = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvStreet", DbType="NVarChar(50)")]
		public string InvStreet
		{
			get
			{
				return this._InvStreet;
			}
			set
			{
				if ((this._InvStreet != value))
				{
					this._InvStreet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvZipCode", DbType="NVarChar(50)")]
		public string InvZipCode
		{
			get
			{
				return this._InvZipCode;
			}
			set
			{
				if ((this._InvZipCode != value))
				{
					this._InvZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvCity", DbType="NVarChar(50)")]
		public string InvCity
		{
			get
			{
				return this._InvCity;
			}
			set
			{
				if ((this._InvCity != value))
				{
					this._InvCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvCountry", DbType="NVarChar(50)")]
		public string InvCountry
		{
			get
			{
				return this._InvCountry;
			}
			set
			{
				if ((this._InvCountry != value))
				{
					this._InvCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorID", DbType="Int")]
		public System.Nullable<int> ActorID
		{
			get
			{
				return this._ActorID;
			}
			set
			{
				if ((this._ActorID != value))
				{
					this._ActorID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CG_DeliveryType")]
	public partial class CG_DeliveryType
	{
		
		private int _ID;
		
		private string _LevSatt;
		
		private System.Nullable<int> _Pris;
		
		public CG_DeliveryType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevSatt", DbType="NVarChar(255)")]
		public string LevSatt
		{
			get
			{
				return this._LevSatt;
			}
			set
			{
				if ((this._LevSatt != value))
				{
					this._LevSatt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pris", DbType="Int")]
		public System.Nullable<int> Pris
		{
			get
			{
				return this._Pris;
			}
			set
			{
				if ((this._Pris != value))
				{
					this._Pris = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CG_OrderDetail")]
	public partial class CG_OrderDetail
	{
		
		private int _OrderID;
		
		private int _OrderDetailID;
		
		private System.Nullable<int> _PageID;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<double> _Price;
		
		private string _OrderDetailComment;
		
		public CG_OrderDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int OrderDetailID
		{
			get
			{
				return this._OrderDetailID;
			}
			set
			{
				if ((this._OrderDetailID != value))
				{
					this._OrderDetailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this._PageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailComment", DbType="NVarChar(50)")]
		public string OrderDetailComment
		{
			get
			{
				return this._OrderDetailComment;
			}
			set
			{
				if ((this._OrderDetailComment != value))
				{
					this._OrderDetailComment = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CG_OrderEmail")]
	public partial class CG_OrderEmail
	{
		
		private int _OrderEmailID;
		
		private string _OrderEmailAddress;
		
		public CG_OrderEmail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEmailID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int OrderEmailID
		{
			get
			{
				return this._OrderEmailID;
			}
			set
			{
				if ((this._OrderEmailID != value))
				{
					this._OrderEmailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEmailAddress", DbType="NVarChar(100)")]
		public string OrderEmailAddress
		{
			get
			{
				return this._OrderEmailAddress;
			}
			set
			{
				if ((this._OrderEmailAddress != value))
				{
					this._OrderEmailAddress = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CG_OrderHead")]
	public partial class CG_OrderHead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private string _YourRef;
		
		private string _OrderLabel;
		
		private string _OrderComment;
		
		private string _ActorID;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private int _AllowSplitDelivery;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Adress;
		
		private string _ZipCode;
		
		private string _City;
		
		private string _Phone;
		
		private string _Phone2;
		
		private System.DateTime _DateTime;
		
		private string _CareOf;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnYourRefChanging(string value);
    partial void OnYourRefChanged();
    partial void OnOrderLabelChanging(string value);
    partial void OnOrderLabelChanged();
    partial void OnOrderCommentChanging(string value);
    partial void OnOrderCommentChanged();
    partial void OnActorIDChanging(string value);
    partial void OnActorIDChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnAllowSplitDeliveryChanging(int value);
    partial void OnAllowSplitDeliveryChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnCareOfChanging(string value);
    partial void OnCareOfChanged();
    #endregion
		
		public CG_OrderHead()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YourRef", DbType="NVarChar(50)")]
		public string YourRef
		{
			get
			{
				return this._YourRef;
			}
			set
			{
				if ((this._YourRef != value))
				{
					this.OnYourRefChanging(value);
					this.SendPropertyChanging();
					this._YourRef = value;
					this.SendPropertyChanged("YourRef");
					this.OnYourRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderLabel", DbType="NVarChar(50)")]
		public string OrderLabel
		{
			get
			{
				return this._OrderLabel;
			}
			set
			{
				if ((this._OrderLabel != value))
				{
					this.OnOrderLabelChanging(value);
					this.SendPropertyChanging();
					this._OrderLabel = value;
					this.SendPropertyChanged("OrderLabel");
					this.OnOrderLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderComment", DbType="NVarChar(200)")]
		public string OrderComment
		{
			get
			{
				return this._OrderComment;
			}
			set
			{
				if ((this._OrderComment != value))
				{
					this.OnOrderCommentChanging(value);
					this.SendPropertyChanging();
					this._OrderComment = value;
					this.SendPropertyChanged("OrderComment");
					this.OnOrderCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ActorID
		{
			get
			{
				return this._ActorID;
			}
			set
			{
				if ((this._ActorID != value))
				{
					this.OnActorIDChanging(value);
					this.SendPropertyChanging();
					this._ActorID = value;
					this.SendPropertyChanged("ActorID");
					this.OnActorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSplitDelivery", DbType="Int NOT NULL")]
		public int AllowSplitDelivery
		{
			get
			{
				return this._AllowSplitDelivery;
			}
			set
			{
				if ((this._AllowSplitDelivery != value))
				{
					this.OnAllowSplitDeliveryChanging(value);
					this.SendPropertyChanging();
					this._AllowSplitDelivery = value;
					this.SendPropertyChanged("AllowSplitDelivery");
					this.OnAllowSplitDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(500)")]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._Adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(100)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareOf", DbType="NVarChar(100)")]
		public string CareOf
		{
			get
			{
				return this._CareOf;
			}
			set
			{
				if ((this._CareOf != value))
				{
					this.OnCareOfChanging(value);
					this.SendPropertyChanging();
					this._CareOf = value;
					this.SendPropertyChanged("CareOf");
					this.OnCareOfChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CG_PaymentDetails")]
	public partial class CG_PaymentDetail
	{
		
		private int _OrderID;
		
		private string _InvoiceID;
		
		private string _AuthID;
		
		private System.Nullable<byte> _PayedWithCreditCard;
		
		private System.Nullable<byte> _Success;
		
		private string _ResponseCode;
		
		private System.DateTime _DateTime;
		
		public CG_PaymentDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="NVarChar(100)")]
		public string InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this._InvoiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthID", DbType="NVarChar(100)")]
		public string AuthID
		{
			get
			{
				return this._AuthID;
			}
			set
			{
				if ((this._AuthID != value))
				{
					this._AuthID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedWithCreditCard", DbType="TinyInt")]
		public System.Nullable<byte> PayedWithCreditCard
		{
			get
			{
				return this._PayedWithCreditCard;
			}
			set
			{
				if ((this._PayedWithCreditCard != value))
				{
					this._PayedWithCreditCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Success", DbType="TinyInt")]
		public System.Nullable<byte> Success
		{
			get
			{
				return this._Success;
			}
			set
			{
				if ((this._Success != value))
				{
					this._Success = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="NVarChar(50)")]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this._ResponseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CG_TempOrderDetail")]
	public partial class CG_TempOrderDetail
	{
		
		private int _TempID;
		
		private System.Nullable<int> _PageID;
		
		private System.Nullable<int> _Quantity;
		
		private string _ActorID;
		
		private System.DateTime _DateTime;
		
		public CG_TempOrderDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TempID
		{
			get
			{
				return this._TempID;
			}
			set
			{
				if ((this._TempID != value))
				{
					this._TempID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this._PageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorID", DbType="NVarChar(100)")]
		public string ActorID
		{
			get
			{
				return this._ActorID;
			}
			set
			{
				if ((this._ActorID != value))
				{
					this._ActorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyInfo")]
	public partial class CompanyInfo
	{
		
		private int _ID;
		
		private string _UserID;
		
		private string _HtmlContent;
		
		public CompanyInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HtmlContent
		{
			get
			{
				return this._HtmlContent;
			}
			set
			{
				if ((this._HtmlContent != value))
				{
					this._HtmlContent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Config")]
	public partial class Config : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _siteurl;
		
		private string _customerpath;
		
		private string _cssfile;
		
		private string _cssfile_editor;
		
		private string _cssfile_public;
		
		private string _frommail;
		
		private string _mailserver;
		
		private string _mailserverlogin;
		
		private string _mailserverpassword;
		
		private string _documentfilters;
		
		private string _imagefilters;
		
		private string _editorscheme;
		
		private System.Nullable<int> _maxuploadbytesize;
		
		private string _imagespathstostrip;
		
		private string _anchorpathstostrip;
		
		private System.Nullable<int> _startpageID;
		
		private System.Nullable<int> _rootID;
		
		private System.Nullable<int> _lcid;
		
		private string _applicationname;
		
		private string _objectpath;
		
		private string _filearchivepath;
		
		private string _aimbusinesspath;
		
		private string _aimstatspath;
		
		private System.Nullable<int> _visitors;
		
		private System.Nullable<bool> _showContentDropDown;
		
		private string _liveStats;
		
		private string _aimphotopath;
		
		private string _secureEditing;
		
		private System.Nullable<bool> _useJournal;
		
		private int _objectTrashedNumOfDays;
		
		private string _productregisterpath;
		
		private string _backgroundcolor;
		
		private string _publicurl;
		
		private bool _useAdminRoles;
		
		private EntitySet<Site> _Sites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsiteurlChanging(string value);
    partial void OnsiteurlChanged();
    partial void OncustomerpathChanging(string value);
    partial void OncustomerpathChanged();
    partial void OncssfileChanging(string value);
    partial void OncssfileChanged();
    partial void Oncssfile_editorChanging(string value);
    partial void Oncssfile_editorChanged();
    partial void Oncssfile_publicChanging(string value);
    partial void Oncssfile_publicChanged();
    partial void OnfrommailChanging(string value);
    partial void OnfrommailChanged();
    partial void OnmailserverChanging(string value);
    partial void OnmailserverChanged();
    partial void OnmailserverloginChanging(string value);
    partial void OnmailserverloginChanged();
    partial void OnmailserverpasswordChanging(string value);
    partial void OnmailserverpasswordChanged();
    partial void OndocumentfiltersChanging(string value);
    partial void OndocumentfiltersChanged();
    partial void OnimagefiltersChanging(string value);
    partial void OnimagefiltersChanged();
    partial void OneditorschemeChanging(string value);
    partial void OneditorschemeChanged();
    partial void OnmaxuploadbytesizeChanging(System.Nullable<int> value);
    partial void OnmaxuploadbytesizeChanged();
    partial void OnimagespathstostripChanging(string value);
    partial void OnimagespathstostripChanged();
    partial void OnanchorpathstostripChanging(string value);
    partial void OnanchorpathstostripChanged();
    partial void OnstartpageIDChanging(System.Nullable<int> value);
    partial void OnstartpageIDChanged();
    partial void OnrootIDChanging(System.Nullable<int> value);
    partial void OnrootIDChanged();
    partial void OnlcidChanging(System.Nullable<int> value);
    partial void OnlcidChanged();
    partial void OnapplicationnameChanging(string value);
    partial void OnapplicationnameChanged();
    partial void OnobjectpathChanging(string value);
    partial void OnobjectpathChanged();
    partial void OnfilearchivepathChanging(string value);
    partial void OnfilearchivepathChanged();
    partial void OnaimbusinesspathChanging(string value);
    partial void OnaimbusinesspathChanged();
    partial void OnaimstatspathChanging(string value);
    partial void OnaimstatspathChanged();
    partial void OnvisitorsChanging(System.Nullable<int> value);
    partial void OnvisitorsChanged();
    partial void OnshowContentDropDownChanging(System.Nullable<bool> value);
    partial void OnshowContentDropDownChanged();
    partial void OnliveStatsChanging(string value);
    partial void OnliveStatsChanged();
    partial void OnaimphotopathChanging(string value);
    partial void OnaimphotopathChanged();
    partial void OnsecureEditingChanging(string value);
    partial void OnsecureEditingChanged();
    partial void OnuseJournalChanging(System.Nullable<bool> value);
    partial void OnuseJournalChanged();
    partial void OnobjectTrashedNumOfDaysChanging(int value);
    partial void OnobjectTrashedNumOfDaysChanged();
    partial void OnproductregisterpathChanging(string value);
    partial void OnproductregisterpathChanged();
    partial void OnbackgroundcolorChanging(string value);
    partial void OnbackgroundcolorChanged();
    partial void OnpublicurlChanging(string value);
    partial void OnpublicurlChanged();
    partial void OnuseAdminRolesChanging(bool value);
    partial void OnuseAdminRolesChanged();
    #endregion
		
		public Config()
		{
			this._Sites = new EntitySet<Site>(new Action<Site>(this.attach_Sites), new Action<Site>(this.detach_Sites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteurl", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string siteurl
		{
			get
			{
				return this._siteurl;
			}
			set
			{
				if ((this._siteurl != value))
				{
					this.OnsiteurlChanging(value);
					this.SendPropertyChanging();
					this._siteurl = value;
					this.SendPropertyChanged("siteurl");
					this.OnsiteurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerpath", DbType="NVarChar(100)")]
		public string customerpath
		{
			get
			{
				return this._customerpath;
			}
			set
			{
				if ((this._customerpath != value))
				{
					this.OncustomerpathChanging(value);
					this.SendPropertyChanging();
					this._customerpath = value;
					this.SendPropertyChanged("customerpath");
					this.OncustomerpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cssfile", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string cssfile
		{
			get
			{
				return this._cssfile;
			}
			set
			{
				if ((this._cssfile != value))
				{
					this.OncssfileChanging(value);
					this.SendPropertyChanging();
					this._cssfile = value;
					this.SendPropertyChanged("cssfile");
					this.OncssfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cssfile_editor", DbType="NVarChar(100)")]
		public string cssfile_editor
		{
			get
			{
				return this._cssfile_editor;
			}
			set
			{
				if ((this._cssfile_editor != value))
				{
					this.Oncssfile_editorChanging(value);
					this.SendPropertyChanging();
					this._cssfile_editor = value;
					this.SendPropertyChanged("cssfile_editor");
					this.Oncssfile_editorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cssfile_public", DbType="NVarChar(100)")]
		public string cssfile_public
		{
			get
			{
				return this._cssfile_public;
			}
			set
			{
				if ((this._cssfile_public != value))
				{
					this.Oncssfile_publicChanging(value);
					this.SendPropertyChanging();
					this._cssfile_public = value;
					this.SendPropertyChanged("cssfile_public");
					this.Oncssfile_publicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frommail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string frommail
		{
			get
			{
				return this._frommail;
			}
			set
			{
				if ((this._frommail != value))
				{
					this.OnfrommailChanging(value);
					this.SendPropertyChanging();
					this._frommail = value;
					this.SendPropertyChanged("frommail");
					this.OnfrommailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailserver", DbType="NVarChar(100)")]
		public string mailserver
		{
			get
			{
				return this._mailserver;
			}
			set
			{
				if ((this._mailserver != value))
				{
					this.OnmailserverChanging(value);
					this.SendPropertyChanging();
					this._mailserver = value;
					this.SendPropertyChanged("mailserver");
					this.OnmailserverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailserverlogin", DbType="NVarChar(50)")]
		public string mailserverlogin
		{
			get
			{
				return this._mailserverlogin;
			}
			set
			{
				if ((this._mailserverlogin != value))
				{
					this.OnmailserverloginChanging(value);
					this.SendPropertyChanging();
					this._mailserverlogin = value;
					this.SendPropertyChanged("mailserverlogin");
					this.OnmailserverloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailserverpassword", DbType="NVarChar(50)")]
		public string mailserverpassword
		{
			get
			{
				return this._mailserverpassword;
			}
			set
			{
				if ((this._mailserverpassword != value))
				{
					this.OnmailserverpasswordChanging(value);
					this.SendPropertyChanging();
					this._mailserverpassword = value;
					this.SendPropertyChanged("mailserverpassword");
					this.OnmailserverpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentfilters", DbType="NVarChar(100)")]
		public string documentfilters
		{
			get
			{
				return this._documentfilters;
			}
			set
			{
				if ((this._documentfilters != value))
				{
					this.OndocumentfiltersChanging(value);
					this.SendPropertyChanging();
					this._documentfilters = value;
					this.SendPropertyChanged("documentfilters");
					this.OndocumentfiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagefilters", DbType="NVarChar(100)")]
		public string imagefilters
		{
			get
			{
				return this._imagefilters;
			}
			set
			{
				if ((this._imagefilters != value))
				{
					this.OnimagefiltersChanging(value);
					this.SendPropertyChanging();
					this._imagefilters = value;
					this.SendPropertyChanged("imagefilters");
					this.OnimagefiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_editorscheme", DbType="NVarChar(50)")]
		public string editorscheme
		{
			get
			{
				return this._editorscheme;
			}
			set
			{
				if ((this._editorscheme != value))
				{
					this.OneditorschemeChanging(value);
					this.SendPropertyChanging();
					this._editorscheme = value;
					this.SendPropertyChanged("editorscheme");
					this.OneditorschemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxuploadbytesize", DbType="Int")]
		public System.Nullable<int> maxuploadbytesize
		{
			get
			{
				return this._maxuploadbytesize;
			}
			set
			{
				if ((this._maxuploadbytesize != value))
				{
					this.OnmaxuploadbytesizeChanging(value);
					this.SendPropertyChanging();
					this._maxuploadbytesize = value;
					this.SendPropertyChanged("maxuploadbytesize");
					this.OnmaxuploadbytesizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagespathstostrip", DbType="NVarChar(200)")]
		public string imagespathstostrip
		{
			get
			{
				return this._imagespathstostrip;
			}
			set
			{
				if ((this._imagespathstostrip != value))
				{
					this.OnimagespathstostripChanging(value);
					this.SendPropertyChanging();
					this._imagespathstostrip = value;
					this.SendPropertyChanged("imagespathstostrip");
					this.OnimagespathstostripChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anchorpathstostrip", DbType="NVarChar(200)")]
		public string anchorpathstostrip
		{
			get
			{
				return this._anchorpathstostrip;
			}
			set
			{
				if ((this._anchorpathstostrip != value))
				{
					this.OnanchorpathstostripChanging(value);
					this.SendPropertyChanging();
					this._anchorpathstostrip = value;
					this.SendPropertyChanged("anchorpathstostrip");
					this.OnanchorpathstostripChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startpageID", DbType="Int")]
		public System.Nullable<int> startpageID
		{
			get
			{
				return this._startpageID;
			}
			set
			{
				if ((this._startpageID != value))
				{
					this.OnstartpageIDChanging(value);
					this.SendPropertyChanging();
					this._startpageID = value;
					this.SendPropertyChanged("startpageID");
					this.OnstartpageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rootID", DbType="Int")]
		public System.Nullable<int> rootID
		{
			get
			{
				return this._rootID;
			}
			set
			{
				if ((this._rootID != value))
				{
					this.OnrootIDChanging(value);
					this.SendPropertyChanging();
					this._rootID = value;
					this.SendPropertyChanged("rootID");
					this.OnrootIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lcid", DbType="Int")]
		public System.Nullable<int> lcid
		{
			get
			{
				return this._lcid;
			}
			set
			{
				if ((this._lcid != value))
				{
					this.OnlcidChanging(value);
					this.SendPropertyChanging();
					this._lcid = value;
					this.SendPropertyChanged("lcid");
					this.OnlcidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicationname", DbType="NVarChar(100)")]
		public string applicationname
		{
			get
			{
				return this._applicationname;
			}
			set
			{
				if ((this._applicationname != value))
				{
					this.OnapplicationnameChanging(value);
					this.SendPropertyChanging();
					this._applicationname = value;
					this.SendPropertyChanged("applicationname");
					this.OnapplicationnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectpath", DbType="NVarChar(255)")]
		public string objectpath
		{
			get
			{
				return this._objectpath;
			}
			set
			{
				if ((this._objectpath != value))
				{
					this.OnobjectpathChanging(value);
					this.SendPropertyChanging();
					this._objectpath = value;
					this.SendPropertyChanged("objectpath");
					this.OnobjectpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filearchivepath", DbType="NVarChar(255)")]
		public string filearchivepath
		{
			get
			{
				return this._filearchivepath;
			}
			set
			{
				if ((this._filearchivepath != value))
				{
					this.OnfilearchivepathChanging(value);
					this.SendPropertyChanging();
					this._filearchivepath = value;
					this.SendPropertyChanged("filearchivepath");
					this.OnfilearchivepathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aimbusinesspath", DbType="NVarChar(255)")]
		public string aimbusinesspath
		{
			get
			{
				return this._aimbusinesspath;
			}
			set
			{
				if ((this._aimbusinesspath != value))
				{
					this.OnaimbusinesspathChanging(value);
					this.SendPropertyChanging();
					this._aimbusinesspath = value;
					this.SendPropertyChanged("aimbusinesspath");
					this.OnaimbusinesspathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aimstatspath", DbType="NVarChar(255)")]
		public string aimstatspath
		{
			get
			{
				return this._aimstatspath;
			}
			set
			{
				if ((this._aimstatspath != value))
				{
					this.OnaimstatspathChanging(value);
					this.SendPropertyChanging();
					this._aimstatspath = value;
					this.SendPropertyChanged("aimstatspath");
					this.OnaimstatspathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visitors", DbType="Int")]
		public System.Nullable<int> visitors
		{
			get
			{
				return this._visitors;
			}
			set
			{
				if ((this._visitors != value))
				{
					this.OnvisitorsChanging(value);
					this.SendPropertyChanging();
					this._visitors = value;
					this.SendPropertyChanged("visitors");
					this.OnvisitorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showContentDropDown", DbType="Bit")]
		public System.Nullable<bool> showContentDropDown
		{
			get
			{
				return this._showContentDropDown;
			}
			set
			{
				if ((this._showContentDropDown != value))
				{
					this.OnshowContentDropDownChanging(value);
					this.SendPropertyChanging();
					this._showContentDropDown = value;
					this.SendPropertyChanged("showContentDropDown");
					this.OnshowContentDropDownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_liveStats", DbType="NVarChar(255)")]
		public string liveStats
		{
			get
			{
				return this._liveStats;
			}
			set
			{
				if ((this._liveStats != value))
				{
					this.OnliveStatsChanging(value);
					this.SendPropertyChanging();
					this._liveStats = value;
					this.SendPropertyChanged("liveStats");
					this.OnliveStatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aimphotopath", DbType="NVarChar(255)")]
		public string aimphotopath
		{
			get
			{
				return this._aimphotopath;
			}
			set
			{
				if ((this._aimphotopath != value))
				{
					this.OnaimphotopathChanging(value);
					this.SendPropertyChanging();
					this._aimphotopath = value;
					this.SendPropertyChanged("aimphotopath");
					this.OnaimphotopathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secureEditing", DbType="NVarChar(255)")]
		public string secureEditing
		{
			get
			{
				return this._secureEditing;
			}
			set
			{
				if ((this._secureEditing != value))
				{
					this.OnsecureEditingChanging(value);
					this.SendPropertyChanging();
					this._secureEditing = value;
					this.SendPropertyChanged("secureEditing");
					this.OnsecureEditingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useJournal", DbType="Bit")]
		public System.Nullable<bool> useJournal
		{
			get
			{
				return this._useJournal;
			}
			set
			{
				if ((this._useJournal != value))
				{
					this.OnuseJournalChanging(value);
					this.SendPropertyChanging();
					this._useJournal = value;
					this.SendPropertyChanged("useJournal");
					this.OnuseJournalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectTrashedNumOfDays", DbType="Int NOT NULL")]
		public int objectTrashedNumOfDays
		{
			get
			{
				return this._objectTrashedNumOfDays;
			}
			set
			{
				if ((this._objectTrashedNumOfDays != value))
				{
					this.OnobjectTrashedNumOfDaysChanging(value);
					this.SendPropertyChanging();
					this._objectTrashedNumOfDays = value;
					this.SendPropertyChanged("objectTrashedNumOfDays");
					this.OnobjectTrashedNumOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productregisterpath", DbType="NVarChar(255)")]
		public string productregisterpath
		{
			get
			{
				return this._productregisterpath;
			}
			set
			{
				if ((this._productregisterpath != value))
				{
					this.OnproductregisterpathChanging(value);
					this.SendPropertyChanging();
					this._productregisterpath = value;
					this.SendPropertyChanged("productregisterpath");
					this.OnproductregisterpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_backgroundcolor", DbType="NVarChar(7)")]
		public string backgroundcolor
		{
			get
			{
				return this._backgroundcolor;
			}
			set
			{
				if ((this._backgroundcolor != value))
				{
					this.OnbackgroundcolorChanging(value);
					this.SendPropertyChanging();
					this._backgroundcolor = value;
					this.SendPropertyChanged("backgroundcolor");
					this.OnbackgroundcolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publicurl", DbType="NVarChar(255)")]
		public string publicurl
		{
			get
			{
				return this._publicurl;
			}
			set
			{
				if ((this._publicurl != value))
				{
					this.OnpublicurlChanging(value);
					this.SendPropertyChanging();
					this._publicurl = value;
					this.SendPropertyChanged("publicurl");
					this.OnpublicurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useAdminRoles", DbType="Bit NOT NULL")]
		public bool useAdminRoles
		{
			get
			{
				return this._useAdminRoles;
			}
			set
			{
				if ((this._useAdminRoles != value))
				{
					this.OnuseAdminRolesChanging(value);
					this.SendPropertyChanging();
					this._useAdminRoles = value;
					this.SendPropertyChanged("useAdminRoles");
					this.OnuseAdminRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Config_Site", Storage="_Sites", ThisKey="ID", OtherKey="ConfigID")]
		public EntitySet<Site> Sites
		{
			get
			{
				return this._Sites;
			}
			set
			{
				this._Sites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sites(Site entity)
		{
			this.SendPropertyChanging();
			entity.Config = this;
		}
		
		private void detach_Sites(Site entity)
		{
			this.SendPropertyChanging();
			entity.Config = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Connect_Region")]
	public partial class Connect_Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Connect_RegionGroup_FK;
		
		private System.Guid _aspnet_Roles_FK;
		
		private string _Name;
		
		private EntitySet<CRM_Filial> _CRM_Filials;
		
		private EntitySet<CRM_PartnerData> _CRM_PartnerDatas;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<Connect_RegionGroup> _Connect_RegionGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnConnect_RegionGroup_FKChanging(int value);
    partial void OnConnect_RegionGroup_FKChanged();
    partial void Onaspnet_Roles_FKChanging(System.Guid value);
    partial void Onaspnet_Roles_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Connect_Region()
		{
			this._CRM_Filials = new EntitySet<CRM_Filial>(new Action<CRM_Filial>(this.attach_CRM_Filials), new Action<CRM_Filial>(this.detach_CRM_Filials));
			this._CRM_PartnerDatas = new EntitySet<CRM_PartnerData>(new Action<CRM_PartnerData>(this.attach_CRM_PartnerDatas), new Action<CRM_PartnerData>(this.detach_CRM_PartnerDatas));
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._Connect_RegionGroup = default(EntityRef<Connect_RegionGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connect_RegionGroup_FK", DbType="Int NOT NULL")]
		public int Connect_RegionGroup_FK
		{
			get
			{
				return this._Connect_RegionGroup_FK;
			}
			set
			{
				if ((this._Connect_RegionGroup_FK != value))
				{
					if (this._Connect_RegionGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConnect_RegionGroup_FKChanging(value);
					this.SendPropertyChanging();
					this._Connect_RegionGroup_FK = value;
					this.SendPropertyChanged("Connect_RegionGroup_FK");
					this.OnConnect_RegionGroup_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aspnet_Roles_FK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid aspnet_Roles_FK
		{
			get
			{
				return this._aspnet_Roles_FK;
			}
			set
			{
				if ((this._aspnet_Roles_FK != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaspnet_Roles_FKChanging(value);
					this.SendPropertyChanging();
					this._aspnet_Roles_FK = value;
					this.SendPropertyChanged("aspnet_Roles_FK");
					this.Onaspnet_Roles_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Connect_Region_CRM_Filial", Storage="_CRM_Filials", ThisKey="ID", OtherKey="RegionID")]
		public EntitySet<CRM_Filial> CRM_Filials
		{
			get
			{
				return this._CRM_Filials;
			}
			set
			{
				this._CRM_Filials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Connect_Region_CRM_PartnerData", Storage="_CRM_PartnerDatas", ThisKey="ID", OtherKey="Connect_RegionID")]
		public EntitySet<CRM_PartnerData> CRM_PartnerDatas
		{
			get
			{
				return this._CRM_PartnerDatas;
			}
			set
			{
				this._CRM_PartnerDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_Connect_Region", Storage="_aspnet_Role", ThisKey="aspnet_Roles_FK", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.Connect_Regions.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.Connect_Regions.Add(this);
						this._aspnet_Roles_FK = value.RoleId;
					}
					else
					{
						this._aspnet_Roles_FK = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Connect_RegionGroup_Connect_Region", Storage="_Connect_RegionGroup", ThisKey="Connect_RegionGroup_FK", OtherKey="ID", IsForeignKey=true)]
		public Connect_RegionGroup Connect_RegionGroup
		{
			get
			{
				return this._Connect_RegionGroup.Entity;
			}
			set
			{
				Connect_RegionGroup previousValue = this._Connect_RegionGroup.Entity;
				if (((previousValue != value) 
							|| (this._Connect_RegionGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Connect_RegionGroup.Entity = null;
						previousValue.Connect_Regions.Remove(this);
					}
					this._Connect_RegionGroup.Entity = value;
					if ((value != null))
					{
						value.Connect_Regions.Add(this);
						this._Connect_RegionGroup_FK = value.ID;
					}
					else
					{
						this._Connect_RegionGroup_FK = default(int);
					}
					this.SendPropertyChanged("Connect_RegionGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRM_Filials(CRM_Filial entity)
		{
			this.SendPropertyChanging();
			entity.Connect_Region = this;
		}
		
		private void detach_CRM_Filials(CRM_Filial entity)
		{
			this.SendPropertyChanging();
			entity.Connect_Region = null;
		}
		
		private void attach_CRM_PartnerDatas(CRM_PartnerData entity)
		{
			this.SendPropertyChanging();
			entity.Connect_Region = this;
		}
		
		private void detach_CRM_PartnerDatas(CRM_PartnerData entity)
		{
			this.SendPropertyChanging();
			entity.Connect_Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Connect_RegionGroup")]
	public partial class Connect_RegionGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Site_FK;
		
		private string _Name;
		
		private bool _enableFilial;
		
		private bool _enableSendList;
		
		private bool _enableNetwork;
		
		private bool _enablePartnerAdmin;
		
		private string _LongName;
		
		private string _PublicContentPath;
		
		private string _Address;
		
		private string _FASurveyApplicationName;
		
		private string _SBSurveyApplicationName;
		
		private System.Nullable<int> _FASiteId;
		
		private System.Nullable<int> _SBSiteId;
		
		private System.Nullable<int> _FAEvalID;
		
		private System.Nullable<int> _SBFollowupID;
		
		private System.Nullable<int> _SBEvalID;
		
		private System.Nullable<int> _FARegisterID;
		
		private System.Nullable<int> _SBRegisterID;
		
		private string _FaUrl;
		
		private string _SbUrl;
		
		private string _CrmUrl;
		
		private string _PublicUrl;
		
		private EntitySet<Connect_Region> _Connect_Regions;
		
		private EntitySet<Connect_RegionGroupUrl> _Connect_RegionGroupUrls;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnenableFilialChanging(bool value);
    partial void OnenableFilialChanged();
    partial void OnenableSendListChanging(bool value);
    partial void OnenableSendListChanged();
    partial void OnenableNetworkChanging(bool value);
    partial void OnenableNetworkChanged();
    partial void OnenablePartnerAdminChanging(bool value);
    partial void OnenablePartnerAdminChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    partial void OnPublicContentPathChanging(string value);
    partial void OnPublicContentPathChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnFASurveyApplicationNameChanging(string value);
    partial void OnFASurveyApplicationNameChanged();
    partial void OnSBSurveyApplicationNameChanging(string value);
    partial void OnSBSurveyApplicationNameChanged();
    partial void OnFASiteIdChanging(System.Nullable<int> value);
    partial void OnFASiteIdChanged();
    partial void OnSBSiteIdChanging(System.Nullable<int> value);
    partial void OnSBSiteIdChanged();
    partial void OnFAEvalIDChanging(System.Nullable<int> value);
    partial void OnFAEvalIDChanged();
    partial void OnSBFollowupIDChanging(System.Nullable<int> value);
    partial void OnSBFollowupIDChanged();
    partial void OnSBEvalIDChanging(System.Nullable<int> value);
    partial void OnSBEvalIDChanged();
    partial void OnFARegisterIDChanging(System.Nullable<int> value);
    partial void OnFARegisterIDChanged();
    partial void OnSBRegisterIDChanging(System.Nullable<int> value);
    partial void OnSBRegisterIDChanged();
    partial void OnFaUrlChanging(string value);
    partial void OnFaUrlChanged();
    partial void OnSbUrlChanging(string value);
    partial void OnSbUrlChanged();
    partial void OnCrmUrlChanging(string value);
    partial void OnCrmUrlChanged();
    partial void OnPublicUrlChanging(string value);
    partial void OnPublicUrlChanged();
    #endregion
		
		public Connect_RegionGroup()
		{
			this._Connect_Regions = new EntitySet<Connect_Region>(new Action<Connect_Region>(this.attach_Connect_Regions), new Action<Connect_Region>(this.detach_Connect_Regions));
			this._Connect_RegionGroupUrls = new EntitySet<Connect_RegionGroupUrl>(new Action<Connect_RegionGroupUrl>(this.attach_Connect_RegionGroupUrls), new Action<Connect_RegionGroupUrl>(this.detach_Connect_RegionGroupUrls));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enableFilial", DbType="Bit NOT NULL")]
		public bool enableFilial
		{
			get
			{
				return this._enableFilial;
			}
			set
			{
				if ((this._enableFilial != value))
				{
					this.OnenableFilialChanging(value);
					this.SendPropertyChanging();
					this._enableFilial = value;
					this.SendPropertyChanged("enableFilial");
					this.OnenableFilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enableSendList", DbType="Bit NOT NULL")]
		public bool enableSendList
		{
			get
			{
				return this._enableSendList;
			}
			set
			{
				if ((this._enableSendList != value))
				{
					this.OnenableSendListChanging(value);
					this.SendPropertyChanging();
					this._enableSendList = value;
					this.SendPropertyChanged("enableSendList");
					this.OnenableSendListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enableNetwork", DbType="Bit NOT NULL")]
		public bool enableNetwork
		{
			get
			{
				return this._enableNetwork;
			}
			set
			{
				if ((this._enableNetwork != value))
				{
					this.OnenableNetworkChanging(value);
					this.SendPropertyChanging();
					this._enableNetwork = value;
					this.SendPropertyChanged("enableNetwork");
					this.OnenableNetworkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enablePartnerAdmin", DbType="Bit NOT NULL")]
		public bool enablePartnerAdmin
		{
			get
			{
				return this._enablePartnerAdmin;
			}
			set
			{
				if ((this._enablePartnerAdmin != value))
				{
					this.OnenablePartnerAdminChanging(value);
					this.SendPropertyChanging();
					this._enablePartnerAdmin = value;
					this.SendPropertyChanged("enablePartnerAdmin");
					this.OnenablePartnerAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="NVarChar(200)")]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this.OnLongNameChanging(value);
					this.SendPropertyChanging();
					this._LongName = value;
					this.SendPropertyChanged("LongName");
					this.OnLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicContentPath", DbType="NVarChar(400)")]
		public string PublicContentPath
		{
			get
			{
				return this._PublicContentPath;
			}
			set
			{
				if ((this._PublicContentPath != value))
				{
					this.OnPublicContentPathChanging(value);
					this.SendPropertyChanging();
					this._PublicContentPath = value;
					this.SendPropertyChanged("PublicContentPath");
					this.OnPublicContentPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FASurveyApplicationName", DbType="NVarChar(256)")]
		public string FASurveyApplicationName
		{
			get
			{
				return this._FASurveyApplicationName;
			}
			set
			{
				if ((this._FASurveyApplicationName != value))
				{
					this.OnFASurveyApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._FASurveyApplicationName = value;
					this.SendPropertyChanged("FASurveyApplicationName");
					this.OnFASurveyApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SBSurveyApplicationName", DbType="NVarChar(256)")]
		public string SBSurveyApplicationName
		{
			get
			{
				return this._SBSurveyApplicationName;
			}
			set
			{
				if ((this._SBSurveyApplicationName != value))
				{
					this.OnSBSurveyApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._SBSurveyApplicationName = value;
					this.SendPropertyChanged("SBSurveyApplicationName");
					this.OnSBSurveyApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FASiteId", DbType="Int")]
		public System.Nullable<int> FASiteId
		{
			get
			{
				return this._FASiteId;
			}
			set
			{
				if ((this._FASiteId != value))
				{
					this.OnFASiteIdChanging(value);
					this.SendPropertyChanging();
					this._FASiteId = value;
					this.SendPropertyChanged("FASiteId");
					this.OnFASiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SBSiteId", DbType="Int")]
		public System.Nullable<int> SBSiteId
		{
			get
			{
				return this._SBSiteId;
			}
			set
			{
				if ((this._SBSiteId != value))
				{
					this.OnSBSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SBSiteId = value;
					this.SendPropertyChanged("SBSiteId");
					this.OnSBSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAEvalID", DbType="Int")]
		public System.Nullable<int> FAEvalID
		{
			get
			{
				return this._FAEvalID;
			}
			set
			{
				if ((this._FAEvalID != value))
				{
					this.OnFAEvalIDChanging(value);
					this.SendPropertyChanging();
					this._FAEvalID = value;
					this.SendPropertyChanged("FAEvalID");
					this.OnFAEvalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SBFollowupID", DbType="Int")]
		public System.Nullable<int> SBFollowupID
		{
			get
			{
				return this._SBFollowupID;
			}
			set
			{
				if ((this._SBFollowupID != value))
				{
					this.OnSBFollowupIDChanging(value);
					this.SendPropertyChanging();
					this._SBFollowupID = value;
					this.SendPropertyChanged("SBFollowupID");
					this.OnSBFollowupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SBEvalID", DbType="Int")]
		public System.Nullable<int> SBEvalID
		{
			get
			{
				return this._SBEvalID;
			}
			set
			{
				if ((this._SBEvalID != value))
				{
					this.OnSBEvalIDChanging(value);
					this.SendPropertyChanging();
					this._SBEvalID = value;
					this.SendPropertyChanged("SBEvalID");
					this.OnSBEvalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FARegisterID", DbType="Int")]
		public System.Nullable<int> FARegisterID
		{
			get
			{
				return this._FARegisterID;
			}
			set
			{
				if ((this._FARegisterID != value))
				{
					this.OnFARegisterIDChanging(value);
					this.SendPropertyChanging();
					this._FARegisterID = value;
					this.SendPropertyChanged("FARegisterID");
					this.OnFARegisterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SBRegisterID", DbType="Int")]
		public System.Nullable<int> SBRegisterID
		{
			get
			{
				return this._SBRegisterID;
			}
			set
			{
				if ((this._SBRegisterID != value))
				{
					this.OnSBRegisterIDChanging(value);
					this.SendPropertyChanging();
					this._SBRegisterID = value;
					this.SendPropertyChanged("SBRegisterID");
					this.OnSBRegisterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaUrl", DbType="NVarChar(400)")]
		public string FaUrl
		{
			get
			{
				return this._FaUrl;
			}
			set
			{
				if ((this._FaUrl != value))
				{
					this.OnFaUrlChanging(value);
					this.SendPropertyChanging();
					this._FaUrl = value;
					this.SendPropertyChanged("FaUrl");
					this.OnFaUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SbUrl", DbType="NVarChar(400)")]
		public string SbUrl
		{
			get
			{
				return this._SbUrl;
			}
			set
			{
				if ((this._SbUrl != value))
				{
					this.OnSbUrlChanging(value);
					this.SendPropertyChanging();
					this._SbUrl = value;
					this.SendPropertyChanged("SbUrl");
					this.OnSbUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmUrl", DbType="NVarChar(400)")]
		public string CrmUrl
		{
			get
			{
				return this._CrmUrl;
			}
			set
			{
				if ((this._CrmUrl != value))
				{
					this.OnCrmUrlChanging(value);
					this.SendPropertyChanging();
					this._CrmUrl = value;
					this.SendPropertyChanged("CrmUrl");
					this.OnCrmUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicUrl", DbType="NVarChar(400)")]
		public string PublicUrl
		{
			get
			{
				return this._PublicUrl;
			}
			set
			{
				if ((this._PublicUrl != value))
				{
					this.OnPublicUrlChanging(value);
					this.SendPropertyChanging();
					this._PublicUrl = value;
					this.SendPropertyChanged("PublicUrl");
					this.OnPublicUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Connect_RegionGroup_Connect_Region", Storage="_Connect_Regions", ThisKey="ID", OtherKey="Connect_RegionGroup_FK")]
		public EntitySet<Connect_Region> Connect_Regions
		{
			get
			{
				return this._Connect_Regions;
			}
			set
			{
				this._Connect_Regions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Connect_RegionGroup_Connect_RegionGroupUrl", Storage="_Connect_RegionGroupUrls", ThisKey="ID", OtherKey="Connect_RegionGroup_FK")]
		public EntitySet<Connect_RegionGroupUrl> Connect_RegionGroupUrls
		{
			get
			{
				return this._Connect_RegionGroupUrls;
			}
			set
			{
				this._Connect_RegionGroupUrls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Connect_RegionGroup", Storage="_Site", ThisKey="Site_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Connect_RegionGroups.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Connect_RegionGroups.Add(this);
						this._Site_FK = value.SiteID;
					}
					else
					{
						this._Site_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Connect_Regions(Connect_Region entity)
		{
			this.SendPropertyChanging();
			entity.Connect_RegionGroup = this;
		}
		
		private void detach_Connect_Regions(Connect_Region entity)
		{
			this.SendPropertyChanging();
			entity.Connect_RegionGroup = null;
		}
		
		private void attach_Connect_RegionGroupUrls(Connect_RegionGroupUrl entity)
		{
			this.SendPropertyChanging();
			entity.Connect_RegionGroup = this;
		}
		
		private void detach_Connect_RegionGroupUrls(Connect_RegionGroupUrl entity)
		{
			this.SendPropertyChanging();
			entity.Connect_RegionGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Connect_RegionGroupUrls")]
	public partial class Connect_RegionGroupUrl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Connect_RegionGroup_FK;
		
		private string _Url;
		
		private string _Comment;
		
		private EntityRef<Connect_RegionGroup> _Connect_RegionGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnConnect_RegionGroup_FKChanging(int value);
    partial void OnConnect_RegionGroup_FKChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Connect_RegionGroupUrl()
		{
			this._Connect_RegionGroup = default(EntityRef<Connect_RegionGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connect_RegionGroup_FK", DbType="Int NOT NULL")]
		public int Connect_RegionGroup_FK
		{
			get
			{
				return this._Connect_RegionGroup_FK;
			}
			set
			{
				if ((this._Connect_RegionGroup_FK != value))
				{
					if (this._Connect_RegionGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConnect_RegionGroup_FKChanging(value);
					this.SendPropertyChanging();
					this._Connect_RegionGroup_FK = value;
					this.SendPropertyChanged("Connect_RegionGroup_FK");
					this.OnConnect_RegionGroup_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Connect_RegionGroup_Connect_RegionGroupUrl", Storage="_Connect_RegionGroup", ThisKey="Connect_RegionGroup_FK", OtherKey="ID", IsForeignKey=true)]
		public Connect_RegionGroup Connect_RegionGroup
		{
			get
			{
				return this._Connect_RegionGroup.Entity;
			}
			set
			{
				Connect_RegionGroup previousValue = this._Connect_RegionGroup.Entity;
				if (((previousValue != value) 
							|| (this._Connect_RegionGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Connect_RegionGroup.Entity = null;
						previousValue.Connect_RegionGroupUrls.Remove(this);
					}
					this._Connect_RegionGroup.Entity = value;
					if ((value != null))
					{
						value.Connect_RegionGroupUrls.Add(this);
						this._Connect_RegionGroup_FK = value.ID;
					}
					else
					{
						this._Connect_RegionGroup_FK = default(int);
					}
					this.SendPropertyChanged("Connect_RegionGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Countries")]
	public partial class Country
	{
		
		private int _ID;
		
		private string _Land;
		
		private string _Country1;
		
		private string _Short;
		
		public Country()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Land", DbType="NVarChar(255)")]
		public string Land
		{
			get
			{
				return this._Land;
			}
			set
			{
				if ((this._Land != value))
				{
					this._Land = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Country", Storage="_Country1", DbType="NVarChar(255)")]
		public string Country1
		{
			get
			{
				return this._Country1;
			}
			set
			{
				if ((this._Country1 != value))
				{
					this._Country1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Short", DbType="NVarChar(255)")]
		public string Short
		{
			get
			{
				return this._Short;
			}
			set
			{
				if ((this._Short != value))
				{
					this._Short = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Common")]
	public partial class CRM_Common : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RegionID;
		
		private System.Nullable<int> _ListID;
		
		private string _Properties;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnListIDChanging(System.Nullable<int> value);
    partial void OnListIDChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public CRM_Common()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int")]
		public System.Nullable<int> ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_Customer")]
	public partial class crm_Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _crm_staffreport_fk;
		
		private string _CustomerName;
		
		private EntitySet<crm_staffreport_Customer_X_Report> _crm_staffreport_Customer_X_Reports;
		
		private EntityRef<crm_staffreport> _crm_staffreport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncrm_staffreport_fkChanging(int value);
    partial void Oncrm_staffreport_fkChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    #endregion
		
		public crm_Customer()
		{
			this._crm_staffreport_Customer_X_Reports = new EntitySet<crm_staffreport_Customer_X_Report>(new Action<crm_staffreport_Customer_X_Report>(this.attach_crm_staffreport_Customer_X_Reports), new Action<crm_staffreport_Customer_X_Report>(this.detach_crm_staffreport_Customer_X_Reports));
			this._crm_staffreport = default(EntityRef<crm_staffreport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_fk", DbType="Int NOT NULL")]
		public int crm_staffreport_fk
		{
			get
			{
				return this._crm_staffreport_fk;
			}
			set
			{
				if ((this._crm_staffreport_fk != value))
				{
					if (this._crm_staffreport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrm_staffreport_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_fk = value;
					this.SendPropertyChanged("crm_staffreport_fk");
					this.Oncrm_staffreport_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_Customer_crm_staffreport_Customer_X_Report", Storage="_crm_staffreport_Customer_X_Reports", ThisKey="ID", OtherKey="crm_staffreport_Customer_fk")]
		public EntitySet<crm_staffreport_Customer_X_Report> crm_staffreport_Customer_X_Reports
		{
			get
			{
				return this._crm_staffreport_Customer_X_Reports;
			}
			set
			{
				this._crm_staffreport_Customer_X_Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_crm_Customer", Storage="_crm_staffreport", ThisKey="crm_staffreport_fk", OtherKey="ID", IsForeignKey=true)]
		public crm_staffreport crm_staffreport
		{
			get
			{
				return this._crm_staffreport.Entity;
			}
			set
			{
				crm_staffreport previousValue = this._crm_staffreport.Entity;
				if (((previousValue != value) 
							|| (this._crm_staffreport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_staffreport.Entity = null;
						previousValue.crm_Customers.Remove(this);
					}
					this._crm_staffreport.Entity = value;
					if ((value != null))
					{
						value.crm_Customers.Add(this);
						this._crm_staffreport_fk = value.ID;
					}
					else
					{
						this._crm_staffreport_fk = default(int);
					}
					this.SendPropertyChanged("crm_staffreport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_crm_staffreport_Customer_X_Reports(crm_staffreport_Customer_X_Report entity)
		{
			this.SendPropertyChanging();
			entity.crm_Customer = this;
		}
		
		private void detach_crm_staffreport_Customer_X_Reports(crm_staffreport_Customer_X_Report entity)
		{
			this.SendPropertyChanging();
			entity.crm_Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_DevelopmentAssignments")]
	public partial class crm_DevelopmentAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DAID;
		
		private string _DevelopmentName;
		
		private string _Description;
		
		private string _Area;
		
		private System.Nullable<int> _ExtentOfHours;
		
		private System.Nullable<int> _DA_type_FK;
		
		private System.Nullable<System.DateTime> _Registrationdate;
		
		private System.Nullable<System.DateTime> _PlanedFinishingDate;
		
		private System.Nullable<System.DateTime> _FinishingDate;
		
		private string _RelatedProjectNr;
		
		private System.Nullable<int> _ResponsibleName;
		
		private System.Nullable<int> _NameTwo;
		
		private string _NameThree;
		
		private string _Comment;
		
		private int _SiteID_FK;
		
		private System.Nullable<bool> _Idea;
		
		private EntityRef<crm_DevelopmentAssignments_Type> _crm_DevelopmentAssignments_Type;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDAIDChanging(int value);
    partial void OnDAIDChanged();
    partial void OnDevelopmentNameChanging(string value);
    partial void OnDevelopmentNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnExtentOfHoursChanging(System.Nullable<int> value);
    partial void OnExtentOfHoursChanged();
    partial void OnDA_type_FKChanging(System.Nullable<int> value);
    partial void OnDA_type_FKChanged();
    partial void OnRegistrationdateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationdateChanged();
    partial void OnPlanedFinishingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanedFinishingDateChanged();
    partial void OnFinishingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishingDateChanged();
    partial void OnRelatedProjectNrChanging(string value);
    partial void OnRelatedProjectNrChanged();
    partial void OnResponsibleNameChanging(System.Nullable<int> value);
    partial void OnResponsibleNameChanged();
    partial void OnNameTwoChanging(System.Nullable<int> value);
    partial void OnNameTwoChanged();
    partial void OnNameThreeChanging(string value);
    partial void OnNameThreeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnSiteID_FKChanging(int value);
    partial void OnSiteID_FKChanged();
    partial void OnIdeaChanging(System.Nullable<bool> value);
    partial void OnIdeaChanged();
    #endregion
		
		public crm_DevelopmentAssignment()
		{
			this._crm_DevelopmentAssignments_Type = default(EntityRef<crm_DevelopmentAssignments_Type>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DAID
		{
			get
			{
				return this._DAID;
			}
			set
			{
				if ((this._DAID != value))
				{
					this.OnDAIDChanging(value);
					this.SendPropertyChanging();
					this._DAID = value;
					this.SendPropertyChanged("DAID");
					this.OnDAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopmentName", DbType="NVarChar(255)")]
		public string DevelopmentName
		{
			get
			{
				return this._DevelopmentName;
			}
			set
			{
				if ((this._DevelopmentName != value))
				{
					this.OnDevelopmentNameChanging(value);
					this.SendPropertyChanging();
					this._DevelopmentName = value;
					this.SendPropertyChanged("DevelopmentName");
					this.OnDevelopmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(255)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtentOfHours", DbType="Int")]
		public System.Nullable<int> ExtentOfHours
		{
			get
			{
				return this._ExtentOfHours;
			}
			set
			{
				if ((this._ExtentOfHours != value))
				{
					this.OnExtentOfHoursChanging(value);
					this.SendPropertyChanging();
					this._ExtentOfHours = value;
					this.SendPropertyChanged("ExtentOfHours");
					this.OnExtentOfHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DA_type_FK", DbType="Int")]
		public System.Nullable<int> DA_type_FK
		{
			get
			{
				return this._DA_type_FK;
			}
			set
			{
				if ((this._DA_type_FK != value))
				{
					if (this._crm_DevelopmentAssignments_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDA_type_FKChanging(value);
					this.SendPropertyChanging();
					this._DA_type_FK = value;
					this.SendPropertyChanged("DA_type_FK");
					this.OnDA_type_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Registrationdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Registrationdate
		{
			get
			{
				return this._Registrationdate;
			}
			set
			{
				if ((this._Registrationdate != value))
				{
					this.OnRegistrationdateChanging(value);
					this.SendPropertyChanging();
					this._Registrationdate = value;
					this.SendPropertyChanged("Registrationdate");
					this.OnRegistrationdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanedFinishingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanedFinishingDate
		{
			get
			{
				return this._PlanedFinishingDate;
			}
			set
			{
				if ((this._PlanedFinishingDate != value))
				{
					this.OnPlanedFinishingDateChanging(value);
					this.SendPropertyChanging();
					this._PlanedFinishingDate = value;
					this.SendPropertyChanged("PlanedFinishingDate");
					this.OnPlanedFinishingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishingDate
		{
			get
			{
				return this._FinishingDate;
			}
			set
			{
				if ((this._FinishingDate != value))
				{
					this.OnFinishingDateChanging(value);
					this.SendPropertyChanging();
					this._FinishingDate = value;
					this.SendPropertyChanged("FinishingDate");
					this.OnFinishingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedProjectNr", DbType="NVarChar(255)")]
		public string RelatedProjectNr
		{
			get
			{
				return this._RelatedProjectNr;
			}
			set
			{
				if ((this._RelatedProjectNr != value))
				{
					this.OnRelatedProjectNrChanging(value);
					this.SendPropertyChanging();
					this._RelatedProjectNr = value;
					this.SendPropertyChanged("RelatedProjectNr");
					this.OnRelatedProjectNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleName", DbType="Int")]
		public System.Nullable<int> ResponsibleName
		{
			get
			{
				return this._ResponsibleName;
			}
			set
			{
				if ((this._ResponsibleName != value))
				{
					this.OnResponsibleNameChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleName = value;
					this.SendPropertyChanged("ResponsibleName");
					this.OnResponsibleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTwo", DbType="Int")]
		public System.Nullable<int> NameTwo
		{
			get
			{
				return this._NameTwo;
			}
			set
			{
				if ((this._NameTwo != value))
				{
					this.OnNameTwoChanging(value);
					this.SendPropertyChanging();
					this._NameTwo = value;
					this.SendPropertyChanged("NameTwo");
					this.OnNameTwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameThree", DbType="NVarChar(255)")]
		public string NameThree
		{
			get
			{
				return this._NameThree;
			}
			set
			{
				if ((this._NameThree != value))
				{
					this.OnNameThreeChanging(value);
					this.SendPropertyChanging();
					this._NameThree = value;
					this.SendPropertyChanged("NameThree");
					this.OnNameThreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID_FK", DbType="Int NOT NULL")]
		public int SiteID_FK
		{
			get
			{
				return this._SiteID_FK;
			}
			set
			{
				if ((this._SiteID_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteID_FKChanging(value);
					this.SendPropertyChanging();
					this._SiteID_FK = value;
					this.SendPropertyChanged("SiteID_FK");
					this.OnSiteID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idea", DbType="Bit")]
		public System.Nullable<bool> Idea
		{
			get
			{
				return this._Idea;
			}
			set
			{
				if ((this._Idea != value))
				{
					this.OnIdeaChanging(value);
					this.SendPropertyChanging();
					this._Idea = value;
					this.SendPropertyChanged("Idea");
					this.OnIdeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_DevelopmentAssignments_Type_crm_DevelopmentAssignment", Storage="_crm_DevelopmentAssignments_Type", ThisKey="DA_type_FK", OtherKey="ID", IsForeignKey=true)]
		public crm_DevelopmentAssignments_Type crm_DevelopmentAssignments_Type
		{
			get
			{
				return this._crm_DevelopmentAssignments_Type.Entity;
			}
			set
			{
				crm_DevelopmentAssignments_Type previousValue = this._crm_DevelopmentAssignments_Type.Entity;
				if (((previousValue != value) 
							|| (this._crm_DevelopmentAssignments_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_DevelopmentAssignments_Type.Entity = null;
						previousValue.crm_DevelopmentAssignments.Remove(this);
					}
					this._crm_DevelopmentAssignments_Type.Entity = value;
					if ((value != null))
					{
						value.crm_DevelopmentAssignments.Add(this);
						this._DA_type_FK = value.ID;
					}
					else
					{
						this._DA_type_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("crm_DevelopmentAssignments_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_crm_DevelopmentAssignment", Storage="_Site", ThisKey="SiteID_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.crm_DevelopmentAssignments.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.crm_DevelopmentAssignments.Add(this);
						this._SiteID_FK = value.SiteID;
					}
					else
					{
						this._SiteID_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_DevelopmentAssignments_Types")]
	public partial class crm_DevelopmentAssignments_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Task;
		
		private string _Description;
		
		private int _SiteID_FK;
		
		private EntitySet<crm_DevelopmentAssignment> _crm_DevelopmentAssignments;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTaskChanging(string value);
    partial void OnTaskChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSiteID_FKChanging(int value);
    partial void OnSiteID_FKChanged();
    #endregion
		
		public crm_DevelopmentAssignments_Type()
		{
			this._crm_DevelopmentAssignments = new EntitySet<crm_DevelopmentAssignment>(new Action<crm_DevelopmentAssignment>(this.attach_crm_DevelopmentAssignments), new Action<crm_DevelopmentAssignment>(this.detach_crm_DevelopmentAssignments));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Task", DbType="NVarChar(255)")]
		public string Task
		{
			get
			{
				return this._Task;
			}
			set
			{
				if ((this._Task != value))
				{
					this.OnTaskChanging(value);
					this.SendPropertyChanging();
					this._Task = value;
					this.SendPropertyChanged("Task");
					this.OnTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID_FK", DbType="Int NOT NULL")]
		public int SiteID_FK
		{
			get
			{
				return this._SiteID_FK;
			}
			set
			{
				if ((this._SiteID_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteID_FKChanging(value);
					this.SendPropertyChanging();
					this._SiteID_FK = value;
					this.SendPropertyChanged("SiteID_FK");
					this.OnSiteID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_DevelopmentAssignments_Type_crm_DevelopmentAssignment", Storage="_crm_DevelopmentAssignments", ThisKey="ID", OtherKey="DA_type_FK")]
		public EntitySet<crm_DevelopmentAssignment> crm_DevelopmentAssignments
		{
			get
			{
				return this._crm_DevelopmentAssignments;
			}
			set
			{
				this._crm_DevelopmentAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_crm_DevelopmentAssignments_Type", Storage="_Site", ThisKey="SiteID_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.crm_DevelopmentAssignments_Types.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.crm_DevelopmentAssignments_Types.Add(this);
						this._SiteID_FK = value.SiteID;
					}
					else
					{
						this._SiteID_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_crm_DevelopmentAssignments(crm_DevelopmentAssignment entity)
		{
			this.SendPropertyChanging();
			entity.crm_DevelopmentAssignments_Type = this;
		}
		
		private void detach_crm_DevelopmentAssignments(crm_DevelopmentAssignment entity)
		{
			this.SendPropertyChanging();
			entity.crm_DevelopmentAssignments_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Filial")]
	public partial class CRM_Filial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RegionID;
		
		private string _Filial;
		
		private string _MailAdress;
		
		private EntityRef<Connect_Region> _Connect_Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnFilialChanging(string value);
    partial void OnFilialChanged();
    partial void OnMailAdressChanging(string value);
    partial void OnMailAdressChanged();
    #endregion
		
		public CRM_Filial()
		{
			this._Connect_Region = default(EntityRef<Connect_Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL")]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._Connect_Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filial", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Filial
		{
			get
			{
				return this._Filial;
			}
			set
			{
				if ((this._Filial != value))
				{
					this.OnFilialChanging(value);
					this.SendPropertyChanging();
					this._Filial = value;
					this.SendPropertyChanged("Filial");
					this.OnFilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAdress", DbType="NVarChar(1000)")]
		public string MailAdress
		{
			get
			{
				return this._MailAdress;
			}
			set
			{
				if ((this._MailAdress != value))
				{
					this.OnMailAdressChanging(value);
					this.SendPropertyChanging();
					this._MailAdress = value;
					this.SendPropertyChanged("MailAdress");
					this.OnMailAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Connect_Region_CRM_Filial", Storage="_Connect_Region", ThisKey="RegionID", OtherKey="ID", IsForeignKey=true)]
		public Connect_Region Connect_Region
		{
			get
			{
				return this._Connect_Region.Entity;
			}
			set
			{
				Connect_Region previousValue = this._Connect_Region.Entity;
				if (((previousValue != value) 
							|| (this._Connect_Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Connect_Region.Entity = null;
						previousValue.CRM_Filials.Remove(this);
					}
					this._Connect_Region.Entity = value;
					if ((value != null))
					{
						value.CRM_Filials.Add(this);
						this._RegionID = value.ID;
					}
					else
					{
						this._RegionID = default(int);
					}
					this.SendPropertyChanged("Connect_Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_ListNames")]
	public partial class CRM_ListName
	{
		
		private int _ID;
		
		private string _ListName;
		
		private string _Comment;
		
		public CRM_ListName()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListName", DbType="NVarChar(50)")]
		public string ListName
		{
			get
			{
				return this._ListName;
			}
			set
			{
				if ((this._ListName != value))
				{
					this._ListName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_MailLog")]
	public partial class CRM_MailLog
	{
		
		private int _ID;
		
		private string _Circular;
		
		private string _MailHeader;
		
		private string _Person;
		
		private string _Company;
		
		private string _MailAdress;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		public CRM_MailLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Circular", DbType="NVarChar(100)")]
		public string Circular
		{
			get
			{
				return this._Circular;
			}
			set
			{
				if ((this._Circular != value))
				{
					this._Circular = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailHeader", DbType="NVarChar(255)")]
		public string MailHeader
		{
			get
			{
				return this._MailHeader;
			}
			set
			{
				if ((this._MailHeader != value))
				{
					this._MailHeader = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person", DbType="NVarChar(255)")]
		public string Person
		{
			get
			{
				return this._Person;
			}
			set
			{
				if ((this._Person != value))
				{
					this._Person = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(255)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAdress", DbType="NVarChar(100)")]
		public string MailAdress
		{
			get
			{
				return this._MailAdress;
			}
			set
			{
				if ((this._MailAdress != value))
				{
					this._MailAdress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this._SendDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Notes")]
	public partial class CRM_Note
	{
		
		private int _ID;
		
		private System.Nullable<int> _ItemID;
		
		private string _Title;
		
		private string _NoteText;
		
		private string _NoteLink;
		
		private string _NoteFile;
		
		private System.DateTime _NoteDate;
		
		private string _FA;
		
		public CRM_Note()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int")]
		public System.Nullable<int> ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoteText
		{
			get
			{
				return this._NoteText;
			}
			set
			{
				if ((this._NoteText != value))
				{
					this._NoteText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteLink", DbType="NVarChar(255)")]
		public string NoteLink
		{
			get
			{
				return this._NoteLink;
			}
			set
			{
				if ((this._NoteLink != value))
				{
					this._NoteLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteFile", DbType="NVarChar(255)")]
		public string NoteFile
		{
			get
			{
				return this._NoteFile;
			}
			set
			{
				if ((this._NoteFile != value))
				{
					this._NoteFile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteDate", DbType="DateTime NOT NULL")]
		public System.DateTime NoteDate
		{
			get
			{
				return this._NoteDate;
			}
			set
			{
				if ((this._NoteDate != value))
				{
					this._NoteDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FA", DbType="NVarChar(50)")]
		public string FA
		{
			get
			{
				return this._FA;
			}
			set
			{
				if ((this._FA != value))
				{
					this._FA = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_PartnerData")]
	public partial class CRM_PartnerData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CompanyID;
		
		private System.Nullable<bool> _IsMonthlyPartner;
		
		private bool _IsCompetence;
		
		private string _Presentation;
		
		private string _ImageFile;
		
		private System.DateTime _DateAdded;
		
		private System.Nullable<System.DateTime> _PartnerFromDate;
		
		private System.Nullable<System.DateTime> _PartnerToDate;
		
		private bool _IsRegional;
		
		private bool _IsNational;
		
		private bool _IsActive;
		
		private int _Connect_RegionID;
		
		private EntityRef<Connect_Region> _Connect_Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnIsMonthlyPartnerChanging(System.Nullable<bool> value);
    partial void OnIsMonthlyPartnerChanged();
    partial void OnIsCompetenceChanging(bool value);
    partial void OnIsCompetenceChanged();
    partial void OnPresentationChanging(string value);
    partial void OnPresentationChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnPartnerFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPartnerFromDateChanged();
    partial void OnPartnerToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPartnerToDateChanged();
    partial void OnIsRegionalChanging(bool value);
    partial void OnIsRegionalChanged();
    partial void OnIsNationalChanging(bool value);
    partial void OnIsNationalChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnConnect_RegionIDChanging(int value);
    partial void OnConnect_RegionIDChanged();
    #endregion
		
		public CRM_PartnerData()
		{
			this._Connect_Region = default(EntityRef<Connect_Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMonthlyPartner", DbType="Bit")]
		public System.Nullable<bool> IsMonthlyPartner
		{
			get
			{
				return this._IsMonthlyPartner;
			}
			set
			{
				if ((this._IsMonthlyPartner != value))
				{
					this.OnIsMonthlyPartnerChanging(value);
					this.SendPropertyChanging();
					this._IsMonthlyPartner = value;
					this.SendPropertyChanged("IsMonthlyPartner");
					this.OnIsMonthlyPartnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompetence", DbType="Bit NOT NULL")]
		public bool IsCompetence
		{
			get
			{
				return this._IsCompetence;
			}
			set
			{
				if ((this._IsCompetence != value))
				{
					this.OnIsCompetenceChanging(value);
					this.SendPropertyChanging();
					this._IsCompetence = value;
					this.SendPropertyChanged("IsCompetence");
					this.OnIsCompetenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presentation", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Presentation
		{
			get
			{
				return this._Presentation;
			}
			set
			{
				if ((this._Presentation != value))
				{
					this.OnPresentationChanging(value);
					this.SendPropertyChanging();
					this._Presentation = value;
					this.SendPropertyChanged("Presentation");
					this.OnPresentationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="NVarChar(500)")]
		public string ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PartnerFromDate
		{
			get
			{
				return this._PartnerFromDate;
			}
			set
			{
				if ((this._PartnerFromDate != value))
				{
					this.OnPartnerFromDateChanging(value);
					this.SendPropertyChanging();
					this._PartnerFromDate = value;
					this.SendPropertyChanged("PartnerFromDate");
					this.OnPartnerFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PartnerToDate
		{
			get
			{
				return this._PartnerToDate;
			}
			set
			{
				if ((this._PartnerToDate != value))
				{
					this.OnPartnerToDateChanging(value);
					this.SendPropertyChanging();
					this._PartnerToDate = value;
					this.SendPropertyChanged("PartnerToDate");
					this.OnPartnerToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRegional", DbType="Bit NOT NULL")]
		public bool IsRegional
		{
			get
			{
				return this._IsRegional;
			}
			set
			{
				if ((this._IsRegional != value))
				{
					this.OnIsRegionalChanging(value);
					this.SendPropertyChanging();
					this._IsRegional = value;
					this.SendPropertyChanged("IsRegional");
					this.OnIsRegionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNational", DbType="Bit NOT NULL")]
		public bool IsNational
		{
			get
			{
				return this._IsNational;
			}
			set
			{
				if ((this._IsNational != value))
				{
					this.OnIsNationalChanging(value);
					this.SendPropertyChanging();
					this._IsNational = value;
					this.SendPropertyChanged("IsNational");
					this.OnIsNationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connect_RegionID", DbType="Int NOT NULL")]
		public int Connect_RegionID
		{
			get
			{
				return this._Connect_RegionID;
			}
			set
			{
				if ((this._Connect_RegionID != value))
				{
					if (this._Connect_Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConnect_RegionIDChanging(value);
					this.SendPropertyChanging();
					this._Connect_RegionID = value;
					this.SendPropertyChanged("Connect_RegionID");
					this.OnConnect_RegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Connect_Region_CRM_PartnerData", Storage="_Connect_Region", ThisKey="Connect_RegionID", OtherKey="ID", IsForeignKey=true)]
		public Connect_Region Connect_Region
		{
			get
			{
				return this._Connect_Region.Entity;
			}
			set
			{
				Connect_Region previousValue = this._Connect_Region.Entity;
				if (((previousValue != value) 
							|| (this._Connect_Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Connect_Region.Entity = null;
						previousValue.CRM_PartnerDatas.Remove(this);
					}
					this._Connect_Region.Entity = value;
					if ((value != null))
					{
						value.CRM_PartnerDatas.Add(this);
						this._Connect_RegionID = value.ID;
					}
					else
					{
						this._Connect_RegionID = default(int);
					}
					this.SendPropertyChanged("Connect_Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_PartnerOffers")]
	public partial class CRM_PartnerOffer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CompanyID;
		
		private string _OfferTitle;
		
		private string _OfferImageFileName;
		
		private string _OfferText;
		
		private string _OfferEmail;
		
		private System.Nullable<System.DateTime> _PublishFrom;
		
		private System.Nullable<System.DateTime> _PublishTo;
		
		private System.DateTime _DateAdded;
		
		private bool _FAAnalysisPhase;
		
		private bool _FAGrowthPhase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnOfferTitleChanging(string value);
    partial void OnOfferTitleChanged();
    partial void OnOfferImageFileNameChanging(string value);
    partial void OnOfferImageFileNameChanged();
    partial void OnOfferTextChanging(string value);
    partial void OnOfferTextChanged();
    partial void OnOfferEmailChanging(string value);
    partial void OnOfferEmailChanged();
    partial void OnPublishFromChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishFromChanged();
    partial void OnPublishToChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishToChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnFAAnalysisPhaseChanging(bool value);
    partial void OnFAAnalysisPhaseChanged();
    partial void OnFAGrowthPhaseChanging(bool value);
    partial void OnFAGrowthPhaseChanged();
    #endregion
		
		public CRM_PartnerOffer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferTitle", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string OfferTitle
		{
			get
			{
				return this._OfferTitle;
			}
			set
			{
				if ((this._OfferTitle != value))
				{
					this.OnOfferTitleChanging(value);
					this.SendPropertyChanging();
					this._OfferTitle = value;
					this.SendPropertyChanged("OfferTitle");
					this.OnOfferTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferImageFileName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string OfferImageFileName
		{
			get
			{
				return this._OfferImageFileName;
			}
			set
			{
				if ((this._OfferImageFileName != value))
				{
					this.OnOfferImageFileNameChanging(value);
					this.SendPropertyChanging();
					this._OfferImageFileName = value;
					this.SendPropertyChanged("OfferImageFileName");
					this.OnOfferImageFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OfferText
		{
			get
			{
				return this._OfferText;
			}
			set
			{
				if ((this._OfferText != value))
				{
					this.OnOfferTextChanging(value);
					this.SendPropertyChanging();
					this._OfferText = value;
					this.SendPropertyChanged("OfferText");
					this.OnOfferTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferEmail", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string OfferEmail
		{
			get
			{
				return this._OfferEmail;
			}
			set
			{
				if ((this._OfferEmail != value))
				{
					this.OnOfferEmailChanging(value);
					this.SendPropertyChanging();
					this._OfferEmail = value;
					this.SendPropertyChanged("OfferEmail");
					this.OnOfferEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishFrom
		{
			get
			{
				return this._PublishFrom;
			}
			set
			{
				if ((this._PublishFrom != value))
				{
					this.OnPublishFromChanging(value);
					this.SendPropertyChanging();
					this._PublishFrom = value;
					this.SendPropertyChanged("PublishFrom");
					this.OnPublishFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTo
		{
			get
			{
				return this._PublishTo;
			}
			set
			{
				if ((this._PublishTo != value))
				{
					this.OnPublishToChanging(value);
					this.SendPropertyChanging();
					this._PublishTo = value;
					this.SendPropertyChanged("PublishTo");
					this.OnPublishToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAAnalysisPhase", DbType="Bit NOT NULL")]
		public bool FAAnalysisPhase
		{
			get
			{
				return this._FAAnalysisPhase;
			}
			set
			{
				if ((this._FAAnalysisPhase != value))
				{
					this.OnFAAnalysisPhaseChanging(value);
					this.SendPropertyChanging();
					this._FAAnalysisPhase = value;
					this.SendPropertyChanged("FAAnalysisPhase");
					this.OnFAAnalysisPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAGrowthPhase", DbType="Bit NOT NULL")]
		public bool FAGrowthPhase
		{
			get
			{
				return this._FAGrowthPhase;
			}
			set
			{
				if ((this._FAGrowthPhase != value))
				{
					this.OnFAGrowthPhaseChanging(value);
					this.SendPropertyChanging();
					this._FAGrowthPhase = value;
					this.SendPropertyChanged("FAGrowthPhase");
					this.OnFAGrowthPhaseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Path")]
	public partial class CRM_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID;
		
		private string _NationalPartnerLogos;
		
		private string _RegionalPartnerLogos;
		
		private string _MentorImage;
		
		private string _CompetenceLogos;
		
		private string _PartnerOffers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnNationalPartnerLogosChanging(string value);
    partial void OnNationalPartnerLogosChanged();
    partial void OnRegionalPartnerLogosChanging(string value);
    partial void OnRegionalPartnerLogosChanged();
    partial void OnMentorImageChanging(string value);
    partial void OnMentorImageChanged();
    partial void OnCompetenceLogosChanging(string value);
    partial void OnCompetenceLogosChanged();
    partial void OnPartnerOffersChanging(string value);
    partial void OnPartnerOffersChanged();
    #endregion
		
		public CRM_Path()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalPartnerLogos", DbType="NVarChar(250)")]
		public string NationalPartnerLogos
		{
			get
			{
				return this._NationalPartnerLogos;
			}
			set
			{
				if ((this._NationalPartnerLogos != value))
				{
					this.OnNationalPartnerLogosChanging(value);
					this.SendPropertyChanging();
					this._NationalPartnerLogos = value;
					this.SendPropertyChanged("NationalPartnerLogos");
					this.OnNationalPartnerLogosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionalPartnerLogos", DbType="NVarChar(250)")]
		public string RegionalPartnerLogos
		{
			get
			{
				return this._RegionalPartnerLogos;
			}
			set
			{
				if ((this._RegionalPartnerLogos != value))
				{
					this.OnRegionalPartnerLogosChanging(value);
					this.SendPropertyChanging();
					this._RegionalPartnerLogos = value;
					this.SendPropertyChanged("RegionalPartnerLogos");
					this.OnRegionalPartnerLogosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MentorImage", DbType="NVarChar(250)")]
		public string MentorImage
		{
			get
			{
				return this._MentorImage;
			}
			set
			{
				if ((this._MentorImage != value))
				{
					this.OnMentorImageChanging(value);
					this.SendPropertyChanging();
					this._MentorImage = value;
					this.SendPropertyChanged("MentorImage");
					this.OnMentorImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetenceLogos", DbType="NVarChar(250)")]
		public string CompetenceLogos
		{
			get
			{
				return this._CompetenceLogos;
			}
			set
			{
				if ((this._CompetenceLogos != value))
				{
					this.OnCompetenceLogosChanging(value);
					this.SendPropertyChanging();
					this._CompetenceLogos = value;
					this.SendPropertyChanged("CompetenceLogos");
					this.OnCompetenceLogosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerOffers", DbType="NVarChar(250)")]
		public string PartnerOffers
		{
			get
			{
				return this._PartnerOffers;
			}
			set
			{
				if ((this._PartnerOffers != value))
				{
					this.OnPartnerOffersChanging(value);
					this.SendPropertyChanging();
					this._PartnerOffers = value;
					this.SendPropertyChanged("PartnerOffers");
					this.OnPartnerOffersChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_Person")]
	public partial class crm_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _Users_FK;
		
		private string _shortname;
		
		private System.Nullable<int> _crm_staffreport_fk;
		
		private EntitySet<crm_staffreport_Report> _crm_staffreport_Reports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsers_FKChanging(System.Nullable<System.Guid> value);
    partial void OnUsers_FKChanged();
    partial void OnshortnameChanging(string value);
    partial void OnshortnameChanged();
    partial void Oncrm_staffreport_fkChanging(System.Nullable<int> value);
    partial void Oncrm_staffreport_fkChanged();
    #endregion
		
		public crm_Person()
		{
			this._crm_staffreport_Reports = new EntitySet<crm_staffreport_Report>(new Action<crm_staffreport_Report>(this.attach_crm_staffreport_Reports), new Action<crm_staffreport_Report>(this.detach_crm_staffreport_Reports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users_FK", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Users_FK
		{
			get
			{
				return this._Users_FK;
			}
			set
			{
				if ((this._Users_FK != value))
				{
					this.OnUsers_FKChanging(value);
					this.SendPropertyChanging();
					this._Users_FK = value;
					this.SendPropertyChanged("Users_FK");
					this.OnUsers_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortname", DbType="NVarChar(50)")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if ((this._shortname != value))
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_fk", DbType="Int")]
		public System.Nullable<int> crm_staffreport_fk
		{
			get
			{
				return this._crm_staffreport_fk;
			}
			set
			{
				if ((this._crm_staffreport_fk != value))
				{
					this.Oncrm_staffreport_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_fk = value;
					this.SendPropertyChanged("crm_staffreport_fk");
					this.Oncrm_staffreport_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_Person_crm_staffreport_Report", Storage="_crm_staffreport_Reports", ThisKey="ID", OtherKey="crm_staffreport_Person_fk")]
		public EntitySet<crm_staffreport_Report> crm_staffreport_Reports
		{
			get
			{
				return this._crm_staffreport_Reports;
			}
			set
			{
				this._crm_staffreport_Reports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_crm_staffreport_Reports(crm_staffreport_Report entity)
		{
			this.SendPropertyChanging();
			entity.crm_Person = this;
		}
		
		private void detach_crm_staffreport_Reports(crm_staffreport_Report entity)
		{
			this.SendPropertyChanging();
			entity.crm_Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_Person_X_PersonProperties")]
	public partial class crm_Person_X_PersonProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _crm_Person_fk;
		
		private int _crm_PersonProperties_fk;
		
		private System.Nullable<int> _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncrm_Person_fkChanging(int value);
    partial void Oncrm_Person_fkChanged();
    partial void Oncrm_PersonProperties_fkChanging(int value);
    partial void Oncrm_PersonProperties_fkChanged();
    partial void OnvalueChanging(System.Nullable<int> value);
    partial void OnvalueChanged();
    #endregion
		
		public crm_Person_X_PersonProperty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_Person_fk", DbType="Int NOT NULL")]
		public int crm_Person_fk
		{
			get
			{
				return this._crm_Person_fk;
			}
			set
			{
				if ((this._crm_Person_fk != value))
				{
					this.Oncrm_Person_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_Person_fk = value;
					this.SendPropertyChanged("crm_Person_fk");
					this.Oncrm_Person_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_PersonProperties_fk", DbType="Int NOT NULL")]
		public int crm_PersonProperties_fk
		{
			get
			{
				return this._crm_PersonProperties_fk;
			}
			set
			{
				if ((this._crm_PersonProperties_fk != value))
				{
					this.Oncrm_PersonProperties_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_PersonProperties_fk = value;
					this.SendPropertyChanged("crm_PersonProperties_fk");
					this.Oncrm_PersonProperties_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Int")]
		public System.Nullable<int> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_PersonPresentation")]
	public partial class CRM_PersonPresentation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PersonID;
		
		private string _Presentation;
		
		private string _ImageFileName;
		
		private bool _IsMentor;
		
		private int _Connect_RegionID;
		
		private System.DateTime _DateAdded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(int value);
    partial void OnPersonIDChanged();
    partial void OnPresentationChanging(string value);
    partial void OnPresentationChanged();
    partial void OnImageFileNameChanging(string value);
    partial void OnImageFileNameChanged();
    partial void OnIsMentorChanging(bool value);
    partial void OnIsMentorChanged();
    partial void OnConnect_RegionIDChanging(int value);
    partial void OnConnect_RegionIDChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    #endregion
		
		public CRM_PersonPresentation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL")]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presentation", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Presentation
		{
			get
			{
				return this._Presentation;
			}
			set
			{
				if ((this._Presentation != value))
				{
					this.OnPresentationChanging(value);
					this.SendPropertyChanging();
					this._Presentation = value;
					this.SendPropertyChanged("Presentation");
					this.OnPresentationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileName", DbType="NVarChar(500)")]
		public string ImageFileName
		{
			get
			{
				return this._ImageFileName;
			}
			set
			{
				if ((this._ImageFileName != value))
				{
					this.OnImageFileNameChanging(value);
					this.SendPropertyChanging();
					this._ImageFileName = value;
					this.SendPropertyChanged("ImageFileName");
					this.OnImageFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMentor", DbType="Bit NOT NULL")]
		public bool IsMentor
		{
			get
			{
				return this._IsMentor;
			}
			set
			{
				if ((this._IsMentor != value))
				{
					this.OnIsMentorChanging(value);
					this.SendPropertyChanging();
					this._IsMentor = value;
					this.SendPropertyChanged("IsMentor");
					this.OnIsMentorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connect_RegionID", DbType="Int NOT NULL")]
		public int Connect_RegionID
		{
			get
			{
				return this._Connect_RegionID;
			}
			set
			{
				if ((this._Connect_RegionID != value))
				{
					this.OnConnect_RegionIDChanging(value);
					this.SendPropertyChanging();
					this._Connect_RegionID = value;
					this.SendPropertyChanged("Connect_RegionID");
					this.OnConnect_RegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_PersonProperties")]
	public partial class crm_PersonProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _site_fk;
		
		private string _shortname;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onsite_fkChanging(int value);
    partial void Onsite_fkChanged();
    partial void OnshortnameChanging(string value);
    partial void OnshortnameChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public crm_PersonProperty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fk", DbType="Int NOT NULL")]
		public int site_fk
		{
			get
			{
				return this._site_fk;
			}
			set
			{
				if ((this._site_fk != value))
				{
					this.Onsite_fkChanging(value);
					this.SendPropertyChanging();
					this._site_fk = value;
					this.SendPropertyChanged("site_fk");
					this.Onsite_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortname", DbType="NVarChar(50)")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if ((this._shortname != value))
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_staffreport")]
	public partial class crm_staffreport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Site_FK;
		
		private EntitySet<crm_Customer> _crm_Customers;
		
		private EntitySet<crm_staffreport_budget> _crm_staffreport_budgets;
		
		private EntitySet<crm_staffreport_ReportType> _crm_staffreport_ReportTypes;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    #endregion
		
		public crm_staffreport()
		{
			this._crm_Customers = new EntitySet<crm_Customer>(new Action<crm_Customer>(this.attach_crm_Customers), new Action<crm_Customer>(this.detach_crm_Customers));
			this._crm_staffreport_budgets = new EntitySet<crm_staffreport_budget>(new Action<crm_staffreport_budget>(this.attach_crm_staffreport_budgets), new Action<crm_staffreport_budget>(this.detach_crm_staffreport_budgets));
			this._crm_staffreport_ReportTypes = new EntitySet<crm_staffreport_ReportType>(new Action<crm_staffreport_ReportType>(this.attach_crm_staffreport_ReportTypes), new Action<crm_staffreport_ReportType>(this.detach_crm_staffreport_ReportTypes));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_crm_Customer", Storage="_crm_Customers", ThisKey="ID", OtherKey="crm_staffreport_fk")]
		public EntitySet<crm_Customer> crm_Customers
		{
			get
			{
				return this._crm_Customers;
			}
			set
			{
				this._crm_Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_crm_staffreport_budget", Storage="_crm_staffreport_budgets", ThisKey="ID", OtherKey="crm_staffreport_fk")]
		public EntitySet<crm_staffreport_budget> crm_staffreport_budgets
		{
			get
			{
				return this._crm_staffreport_budgets;
			}
			set
			{
				this._crm_staffreport_budgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_crm_staffreport_ReportType", Storage="_crm_staffreport_ReportTypes", ThisKey="ID", OtherKey="crm_staffreport_fk")]
		public EntitySet<crm_staffreport_ReportType> crm_staffreport_ReportTypes
		{
			get
			{
				return this._crm_staffreport_ReportTypes;
			}
			set
			{
				this._crm_staffreport_ReportTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_crm_staffreport", Storage="_Site", ThisKey="Site_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.crm_staffreports.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.crm_staffreports.Add(this);
						this._Site_FK = value.SiteID;
					}
					else
					{
						this._Site_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_crm_Customers(crm_Customer entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport = this;
		}
		
		private void detach_crm_Customers(crm_Customer entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport = null;
		}
		
		private void attach_crm_staffreport_budgets(crm_staffreport_budget entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport = this;
		}
		
		private void detach_crm_staffreport_budgets(crm_staffreport_budget entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport = null;
		}
		
		private void attach_crm_staffreport_ReportTypes(crm_staffreport_ReportType entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport = this;
		}
		
		private void detach_crm_staffreport_ReportTypes(crm_staffreport_ReportType entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_staffreport_budget")]
	public partial class crm_staffreport_budget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _crm_staffreport_fk;
		
		private System.DateTime _startDate;
		
		private byte _weekbudget;
		
		private EntitySet<crm_staffreport_budgetItem> _crm_staffreport_budgetItems;
		
		private EntityRef<crm_staffreport> _crm_staffreport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncrm_staffreport_fkChanging(int value);
    partial void Oncrm_staffreport_fkChanged();
    partial void OnstartDateChanging(System.DateTime value);
    partial void OnstartDateChanged();
    partial void OnweekbudgetChanging(byte value);
    partial void OnweekbudgetChanged();
    #endregion
		
		public crm_staffreport_budget()
		{
			this._crm_staffreport_budgetItems = new EntitySet<crm_staffreport_budgetItem>(new Action<crm_staffreport_budgetItem>(this.attach_crm_staffreport_budgetItems), new Action<crm_staffreport_budgetItem>(this.detach_crm_staffreport_budgetItems));
			this._crm_staffreport = default(EntityRef<crm_staffreport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_fk", DbType="Int NOT NULL")]
		public int crm_staffreport_fk
		{
			get
			{
				return this._crm_staffreport_fk;
			}
			set
			{
				if ((this._crm_staffreport_fk != value))
				{
					if (this._crm_staffreport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrm_staffreport_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_fk = value;
					this.SendPropertyChanged("crm_staffreport_fk");
					this.Oncrm_staffreport_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weekbudget", DbType="TinyInt NOT NULL")]
		public byte weekbudget
		{
			get
			{
				return this._weekbudget;
			}
			set
			{
				if ((this._weekbudget != value))
				{
					this.OnweekbudgetChanging(value);
					this.SendPropertyChanging();
					this._weekbudget = value;
					this.SendPropertyChanged("weekbudget");
					this.OnweekbudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_budget_crm_staffreport_budgetItem", Storage="_crm_staffreport_budgetItems", ThisKey="ID", OtherKey="crm_staffreport_budget_fk")]
		public EntitySet<crm_staffreport_budgetItem> crm_staffreport_budgetItems
		{
			get
			{
				return this._crm_staffreport_budgetItems;
			}
			set
			{
				this._crm_staffreport_budgetItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_crm_staffreport_budget", Storage="_crm_staffreport", ThisKey="crm_staffreport_fk", OtherKey="ID", IsForeignKey=true)]
		public crm_staffreport crm_staffreport
		{
			get
			{
				return this._crm_staffreport.Entity;
			}
			set
			{
				crm_staffreport previousValue = this._crm_staffreport.Entity;
				if (((previousValue != value) 
							|| (this._crm_staffreport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_staffreport.Entity = null;
						previousValue.crm_staffreport_budgets.Remove(this);
					}
					this._crm_staffreport.Entity = value;
					if ((value != null))
					{
						value.crm_staffreport_budgets.Add(this);
						this._crm_staffreport_fk = value.ID;
					}
					else
					{
						this._crm_staffreport_fk = default(int);
					}
					this.SendPropertyChanged("crm_staffreport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_crm_staffreport_budgetItems(crm_staffreport_budgetItem entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport_budget = this;
		}
		
		private void detach_crm_staffreport_budgetItems(crm_staffreport_budgetItem entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport_budget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_staffreport_budgetItem")]
	public partial class crm_staffreport_budgetItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _crm_staffreport_budget_fk;
		
		private int _crm_staffreport_ReportType_fk;
		
		private int _value;
		
		private EntityRef<crm_staffreport_budget> _crm_staffreport_budget;
		
		private EntityRef<crm_staffreport_ReportType> _crm_staffreport_ReportType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncrm_staffreport_budget_fkChanging(int value);
    partial void Oncrm_staffreport_budget_fkChanged();
    partial void Oncrm_staffreport_ReportType_fkChanging(int value);
    partial void Oncrm_staffreport_ReportType_fkChanged();
    partial void OnvalueChanging(int value);
    partial void OnvalueChanged();
    #endregion
		
		public crm_staffreport_budgetItem()
		{
			this._crm_staffreport_budget = default(EntityRef<crm_staffreport_budget>);
			this._crm_staffreport_ReportType = default(EntityRef<crm_staffreport_ReportType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_budget_fk", DbType="Int NOT NULL")]
		public int crm_staffreport_budget_fk
		{
			get
			{
				return this._crm_staffreport_budget_fk;
			}
			set
			{
				if ((this._crm_staffreport_budget_fk != value))
				{
					if (this._crm_staffreport_budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrm_staffreport_budget_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_budget_fk = value;
					this.SendPropertyChanged("crm_staffreport_budget_fk");
					this.Oncrm_staffreport_budget_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_ReportType_fk", DbType="Int NOT NULL")]
		public int crm_staffreport_ReportType_fk
		{
			get
			{
				return this._crm_staffreport_ReportType_fk;
			}
			set
			{
				if ((this._crm_staffreport_ReportType_fk != value))
				{
					if (this._crm_staffreport_ReportType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrm_staffreport_ReportType_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_ReportType_fk = value;
					this.SendPropertyChanged("crm_staffreport_ReportType_fk");
					this.Oncrm_staffreport_ReportType_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Int NOT NULL")]
		public int value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_budget_crm_staffreport_budgetItem", Storage="_crm_staffreport_budget", ThisKey="crm_staffreport_budget_fk", OtherKey="ID", IsForeignKey=true)]
		public crm_staffreport_budget crm_staffreport_budget
		{
			get
			{
				return this._crm_staffreport_budget.Entity;
			}
			set
			{
				crm_staffreport_budget previousValue = this._crm_staffreport_budget.Entity;
				if (((previousValue != value) 
							|| (this._crm_staffreport_budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_staffreport_budget.Entity = null;
						previousValue.crm_staffreport_budgetItems.Remove(this);
					}
					this._crm_staffreport_budget.Entity = value;
					if ((value != null))
					{
						value.crm_staffreport_budgetItems.Add(this);
						this._crm_staffreport_budget_fk = value.ID;
					}
					else
					{
						this._crm_staffreport_budget_fk = default(int);
					}
					this.SendPropertyChanged("crm_staffreport_budget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_ReportType_crm_staffreport_budgetItem", Storage="_crm_staffreport_ReportType", ThisKey="crm_staffreport_ReportType_fk", OtherKey="ID", IsForeignKey=true)]
		public crm_staffreport_ReportType crm_staffreport_ReportType
		{
			get
			{
				return this._crm_staffreport_ReportType.Entity;
			}
			set
			{
				crm_staffreport_ReportType previousValue = this._crm_staffreport_ReportType.Entity;
				if (((previousValue != value) 
							|| (this._crm_staffreport_ReportType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_staffreport_ReportType.Entity = null;
						previousValue.crm_staffreport_budgetItems.Remove(this);
					}
					this._crm_staffreport_ReportType.Entity = value;
					if ((value != null))
					{
						value.crm_staffreport_budgetItems.Add(this);
						this._crm_staffreport_ReportType_fk = value.ID;
					}
					else
					{
						this._crm_staffreport_ReportType_fk = default(int);
					}
					this.SendPropertyChanged("crm_staffreport_ReportType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_staffreport_Customer_X_Report")]
	public partial class crm_staffreport_Customer_X_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _crm_staffreport_Customer_fk;
		
		private int _crm_staffreport_Report_fk;
		
		private int _crm_staffreport_ReportType_fk;
		
		private System.Nullable<int> _time;
		
		private EntityRef<crm_Customer> _crm_Customer;
		
		private EntityRef<crm_staffreport_Report> _crm_staffreport_Report;
		
		private EntityRef<crm_staffreport_ReportType> _crm_staffreport_ReportType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncrm_staffreport_Customer_fkChanging(int value);
    partial void Oncrm_staffreport_Customer_fkChanged();
    partial void Oncrm_staffreport_Report_fkChanging(int value);
    partial void Oncrm_staffreport_Report_fkChanged();
    partial void Oncrm_staffreport_ReportType_fkChanging(int value);
    partial void Oncrm_staffreport_ReportType_fkChanged();
    partial void OntimeChanging(System.Nullable<int> value);
    partial void OntimeChanged();
    #endregion
		
		public crm_staffreport_Customer_X_Report()
		{
			this._crm_Customer = default(EntityRef<crm_Customer>);
			this._crm_staffreport_Report = default(EntityRef<crm_staffreport_Report>);
			this._crm_staffreport_ReportType = default(EntityRef<crm_staffreport_ReportType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_Customer_fk", DbType="Int NOT NULL")]
		public int crm_staffreport_Customer_fk
		{
			get
			{
				return this._crm_staffreport_Customer_fk;
			}
			set
			{
				if ((this._crm_staffreport_Customer_fk != value))
				{
					if (this._crm_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrm_staffreport_Customer_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_Customer_fk = value;
					this.SendPropertyChanged("crm_staffreport_Customer_fk");
					this.Oncrm_staffreport_Customer_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_Report_fk", DbType="Int NOT NULL")]
		public int crm_staffreport_Report_fk
		{
			get
			{
				return this._crm_staffreport_Report_fk;
			}
			set
			{
				if ((this._crm_staffreport_Report_fk != value))
				{
					if (this._crm_staffreport_Report.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrm_staffreport_Report_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_Report_fk = value;
					this.SendPropertyChanged("crm_staffreport_Report_fk");
					this.Oncrm_staffreport_Report_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_ReportType_fk", DbType="Int NOT NULL")]
		public int crm_staffreport_ReportType_fk
		{
			get
			{
				return this._crm_staffreport_ReportType_fk;
			}
			set
			{
				if ((this._crm_staffreport_ReportType_fk != value))
				{
					if (this._crm_staffreport_ReportType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrm_staffreport_ReportType_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_ReportType_fk = value;
					this.SendPropertyChanged("crm_staffreport_ReportType_fk");
					this.Oncrm_staffreport_ReportType_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="Int")]
		public System.Nullable<int> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_Customer_crm_staffreport_Customer_X_Report", Storage="_crm_Customer", ThisKey="crm_staffreport_Customer_fk", OtherKey="ID", IsForeignKey=true)]
		public crm_Customer crm_Customer
		{
			get
			{
				return this._crm_Customer.Entity;
			}
			set
			{
				crm_Customer previousValue = this._crm_Customer.Entity;
				if (((previousValue != value) 
							|| (this._crm_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_Customer.Entity = null;
						previousValue.crm_staffreport_Customer_X_Reports.Remove(this);
					}
					this._crm_Customer.Entity = value;
					if ((value != null))
					{
						value.crm_staffreport_Customer_X_Reports.Add(this);
						this._crm_staffreport_Customer_fk = value.ID;
					}
					else
					{
						this._crm_staffreport_Customer_fk = default(int);
					}
					this.SendPropertyChanged("crm_Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_Report_crm_staffreport_Customer_X_Report", Storage="_crm_staffreport_Report", ThisKey="crm_staffreport_Report_fk", OtherKey="ID", IsForeignKey=true)]
		public crm_staffreport_Report crm_staffreport_Report
		{
			get
			{
				return this._crm_staffreport_Report.Entity;
			}
			set
			{
				crm_staffreport_Report previousValue = this._crm_staffreport_Report.Entity;
				if (((previousValue != value) 
							|| (this._crm_staffreport_Report.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_staffreport_Report.Entity = null;
						previousValue.crm_staffreport_Customer_X_Reports.Remove(this);
					}
					this._crm_staffreport_Report.Entity = value;
					if ((value != null))
					{
						value.crm_staffreport_Customer_X_Reports.Add(this);
						this._crm_staffreport_Report_fk = value.ID;
					}
					else
					{
						this._crm_staffreport_Report_fk = default(int);
					}
					this.SendPropertyChanged("crm_staffreport_Report");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_ReportType_crm_staffreport_Customer_X_Report", Storage="_crm_staffreport_ReportType", ThisKey="crm_staffreport_ReportType_fk", OtherKey="ID", IsForeignKey=true)]
		public crm_staffreport_ReportType crm_staffreport_ReportType
		{
			get
			{
				return this._crm_staffreport_ReportType.Entity;
			}
			set
			{
				crm_staffreport_ReportType previousValue = this._crm_staffreport_ReportType.Entity;
				if (((previousValue != value) 
							|| (this._crm_staffreport_ReportType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_staffreport_ReportType.Entity = null;
						previousValue.crm_staffreport_Customer_X_Reports.Remove(this);
					}
					this._crm_staffreport_ReportType.Entity = value;
					if ((value != null))
					{
						value.crm_staffreport_Customer_X_Reports.Add(this);
						this._crm_staffreport_ReportType_fk = value.ID;
					}
					else
					{
						this._crm_staffreport_ReportType_fk = default(int);
					}
					this.SendPropertyChanged("crm_staffreport_ReportType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_staffreport_Report")]
	public partial class crm_staffreport_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _crm_staffreport_Person_fk;
		
		private System.DateTime _startDate;
		
		private EntitySet<crm_staffreport_Customer_X_Report> _crm_staffreport_Customer_X_Reports;
		
		private EntityRef<crm_Person> _crm_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncrm_staffreport_Person_fkChanging(int value);
    partial void Oncrm_staffreport_Person_fkChanged();
    partial void OnstartDateChanging(System.DateTime value);
    partial void OnstartDateChanged();
    #endregion
		
		public crm_staffreport_Report()
		{
			this._crm_staffreport_Customer_X_Reports = new EntitySet<crm_staffreport_Customer_X_Report>(new Action<crm_staffreport_Customer_X_Report>(this.attach_crm_staffreport_Customer_X_Reports), new Action<crm_staffreport_Customer_X_Report>(this.detach_crm_staffreport_Customer_X_Reports));
			this._crm_Person = default(EntityRef<crm_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_Person_fk", DbType="Int NOT NULL")]
		public int crm_staffreport_Person_fk
		{
			get
			{
				return this._crm_staffreport_Person_fk;
			}
			set
			{
				if ((this._crm_staffreport_Person_fk != value))
				{
					if (this._crm_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrm_staffreport_Person_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_Person_fk = value;
					this.SendPropertyChanged("crm_staffreport_Person_fk");
					this.Oncrm_staffreport_Person_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_Report_crm_staffreport_Customer_X_Report", Storage="_crm_staffreport_Customer_X_Reports", ThisKey="ID", OtherKey="crm_staffreport_Report_fk")]
		public EntitySet<crm_staffreport_Customer_X_Report> crm_staffreport_Customer_X_Reports
		{
			get
			{
				return this._crm_staffreport_Customer_X_Reports;
			}
			set
			{
				this._crm_staffreport_Customer_X_Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_Person_crm_staffreport_Report", Storage="_crm_Person", ThisKey="crm_staffreport_Person_fk", OtherKey="ID", IsForeignKey=true)]
		public crm_Person crm_Person
		{
			get
			{
				return this._crm_Person.Entity;
			}
			set
			{
				crm_Person previousValue = this._crm_Person.Entity;
				if (((previousValue != value) 
							|| (this._crm_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_Person.Entity = null;
						previousValue.crm_staffreport_Reports.Remove(this);
					}
					this._crm_Person.Entity = value;
					if ((value != null))
					{
						value.crm_staffreport_Reports.Add(this);
						this._crm_staffreport_Person_fk = value.ID;
					}
					else
					{
						this._crm_staffreport_Person_fk = default(int);
					}
					this.SendPropertyChanged("crm_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_crm_staffreport_Customer_X_Reports(crm_staffreport_Customer_X_Report entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport_Report = this;
		}
		
		private void detach_crm_staffreport_Customer_X_Reports(crm_staffreport_Customer_X_Report entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport_Report = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_staffreport_ReportType")]
	public partial class crm_staffreport_ReportType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _crm_staffreport_fk;
		
		private string _TypeName;
		
		private System.Nullable<int> _DefaultTime;
		
		private string _description;
		
		private EntitySet<crm_staffreport_budgetItem> _crm_staffreport_budgetItems;
		
		private EntitySet<crm_staffreport_Customer_X_Report> _crm_staffreport_Customer_X_Reports;
		
		private EntityRef<crm_staffreport> _crm_staffreport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncrm_staffreport_fkChanging(int value);
    partial void Oncrm_staffreport_fkChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnDefaultTimeChanging(System.Nullable<int> value);
    partial void OnDefaultTimeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public crm_staffreport_ReportType()
		{
			this._crm_staffreport_budgetItems = new EntitySet<crm_staffreport_budgetItem>(new Action<crm_staffreport_budgetItem>(this.attach_crm_staffreport_budgetItems), new Action<crm_staffreport_budgetItem>(this.detach_crm_staffreport_budgetItems));
			this._crm_staffreport_Customer_X_Reports = new EntitySet<crm_staffreport_Customer_X_Report>(new Action<crm_staffreport_Customer_X_Report>(this.attach_crm_staffreport_Customer_X_Reports), new Action<crm_staffreport_Customer_X_Report>(this.detach_crm_staffreport_Customer_X_Reports));
			this._crm_staffreport = default(EntityRef<crm_staffreport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crm_staffreport_fk", DbType="Int NOT NULL")]
		public int crm_staffreport_fk
		{
			get
			{
				return this._crm_staffreport_fk;
			}
			set
			{
				if ((this._crm_staffreport_fk != value))
				{
					if (this._crm_staffreport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrm_staffreport_fkChanging(value);
					this.SendPropertyChanging();
					this._crm_staffreport_fk = value;
					this.SendPropertyChanged("crm_staffreport_fk");
					this.Oncrm_staffreport_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultTime", DbType="Int")]
		public System.Nullable<int> DefaultTime
		{
			get
			{
				return this._DefaultTime;
			}
			set
			{
				if ((this._DefaultTime != value))
				{
					this.OnDefaultTimeChanging(value);
					this.SendPropertyChanging();
					this._DefaultTime = value;
					this.SendPropertyChanged("DefaultTime");
					this.OnDefaultTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_ReportType_crm_staffreport_budgetItem", Storage="_crm_staffreport_budgetItems", ThisKey="ID", OtherKey="crm_staffreport_ReportType_fk")]
		public EntitySet<crm_staffreport_budgetItem> crm_staffreport_budgetItems
		{
			get
			{
				return this._crm_staffreport_budgetItems;
			}
			set
			{
				this._crm_staffreport_budgetItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_ReportType_crm_staffreport_Customer_X_Report", Storage="_crm_staffreport_Customer_X_Reports", ThisKey="ID", OtherKey="crm_staffreport_ReportType_fk")]
		public EntitySet<crm_staffreport_Customer_X_Report> crm_staffreport_Customer_X_Reports
		{
			get
			{
				return this._crm_staffreport_Customer_X_Reports;
			}
			set
			{
				this._crm_staffreport_Customer_X_Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="crm_staffreport_crm_staffreport_ReportType", Storage="_crm_staffreport", ThisKey="crm_staffreport_fk", OtherKey="ID", IsForeignKey=true)]
		public crm_staffreport crm_staffreport
		{
			get
			{
				return this._crm_staffreport.Entity;
			}
			set
			{
				crm_staffreport previousValue = this._crm_staffreport.Entity;
				if (((previousValue != value) 
							|| (this._crm_staffreport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._crm_staffreport.Entity = null;
						previousValue.crm_staffreport_ReportTypes.Remove(this);
					}
					this._crm_staffreport.Entity = value;
					if ((value != null))
					{
						value.crm_staffreport_ReportTypes.Add(this);
						this._crm_staffreport_fk = value.ID;
					}
					else
					{
						this._crm_staffreport_fk = default(int);
					}
					this.SendPropertyChanged("crm_staffreport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_crm_staffreport_budgetItems(crm_staffreport_budgetItem entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport_ReportType = this;
		}
		
		private void detach_crm_staffreport_budgetItems(crm_staffreport_budgetItem entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport_ReportType = null;
		}
		
		private void attach_crm_staffreport_Customer_X_Reports(crm_staffreport_Customer_X_Report entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport_ReportType = this;
		}
		
		private void detach_crm_staffreport_Customer_X_Reports(crm_staffreport_Customer_X_Report entity)
		{
			this.SendPropertyChanging();
			entity.crm_staffreport_ReportType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_tender")]
	public partial class crm_tender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TenderID;
		
		private string _PDescription;
		
		private System.Nullable<System.DateTime> _TenderDate;
		
		private System.Nullable<int> _TenderResponsible;
		
		private string _Customer;
		
		private System.Nullable<int> _CustomerType;
		
		private System.Nullable<int> _Trade;
		
		private System.Nullable<int> _PCategory;
		
		private System.Nullable<int> _TenderPrice;
		
		private System.Nullable<int> _DecisionMonth;
		
		private System.Nullable<int> _Tenderstatus;
		
		private System.Nullable<int> _Reason;
		
		private System.Nullable<int> _AgreedPrice;
		
		private System.Nullable<System.DateTime> _DecisionDate;
		
		private string _AssignmentNo;
		
		private string _Comment;
		
		private System.Nullable<int> _SiteID;
		
		private int _Probability;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenderIDChanging(int value);
    partial void OnTenderIDChanged();
    partial void OnPDescriptionChanging(string value);
    partial void OnPDescriptionChanged();
    partial void OnTenderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTenderDateChanged();
    partial void OnTenderResponsibleChanging(System.Nullable<int> value);
    partial void OnTenderResponsibleChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustomerTypeChanging(System.Nullable<int> value);
    partial void OnCustomerTypeChanged();
    partial void OnTradeChanging(System.Nullable<int> value);
    partial void OnTradeChanged();
    partial void OnPCategoryChanging(System.Nullable<int> value);
    partial void OnPCategoryChanged();
    partial void OnTenderPriceChanging(System.Nullable<int> value);
    partial void OnTenderPriceChanged();
    partial void OnDecisionMonthChanging(System.Nullable<int> value);
    partial void OnDecisionMonthChanged();
    partial void OnTenderstatusChanging(System.Nullable<int> value);
    partial void OnTenderstatusChanged();
    partial void OnReasonChanging(System.Nullable<int> value);
    partial void OnReasonChanged();
    partial void OnAgreedPriceChanging(System.Nullable<int> value);
    partial void OnAgreedPriceChanged();
    partial void OnDecisionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDecisionDateChanged();
    partial void OnAssignmentNoChanging(string value);
    partial void OnAssignmentNoChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnProbabilityChanging(int value);
    partial void OnProbabilityChanged();
    #endregion
		
		public crm_tender()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TenderID
		{
			get
			{
				return this._TenderID;
			}
			set
			{
				if ((this._TenderID != value))
				{
					this.OnTenderIDChanging(value);
					this.SendPropertyChanging();
					this._TenderID = value;
					this.SendPropertyChanged("TenderID");
					this.OnTenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PDescription
		{
			get
			{
				return this._PDescription;
			}
			set
			{
				if ((this._PDescription != value))
				{
					this.OnPDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PDescription = value;
					this.SendPropertyChanged("PDescription");
					this.OnPDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TenderDate
		{
			get
			{
				return this._TenderDate;
			}
			set
			{
				if ((this._TenderDate != value))
				{
					this.OnTenderDateChanging(value);
					this.SendPropertyChanging();
					this._TenderDate = value;
					this.SendPropertyChanged("TenderDate");
					this.OnTenderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenderResponsible", DbType="Int")]
		public System.Nullable<int> TenderResponsible
		{
			get
			{
				return this._TenderResponsible;
			}
			set
			{
				if ((this._TenderResponsible != value))
				{
					this.OnTenderResponsibleChanging(value);
					this.SendPropertyChanging();
					this._TenderResponsible = value;
					this.SendPropertyChanged("TenderResponsible");
					this.OnTenderResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(200)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="Int")]
		public System.Nullable<int> CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trade", DbType="Int")]
		public System.Nullable<int> Trade
		{
			get
			{
				return this._Trade;
			}
			set
			{
				if ((this._Trade != value))
				{
					this.OnTradeChanging(value);
					this.SendPropertyChanging();
					this._Trade = value;
					this.SendPropertyChanged("Trade");
					this.OnTradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCategory", DbType="Int")]
		public System.Nullable<int> PCategory
		{
			get
			{
				return this._PCategory;
			}
			set
			{
				if ((this._PCategory != value))
				{
					this.OnPCategoryChanging(value);
					this.SendPropertyChanging();
					this._PCategory = value;
					this.SendPropertyChanged("PCategory");
					this.OnPCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenderPrice", DbType="Int")]
		public System.Nullable<int> TenderPrice
		{
			get
			{
				return this._TenderPrice;
			}
			set
			{
				if ((this._TenderPrice != value))
				{
					this.OnTenderPriceChanging(value);
					this.SendPropertyChanging();
					this._TenderPrice = value;
					this.SendPropertyChanged("TenderPrice");
					this.OnTenderPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionMonth", DbType="Int")]
		public System.Nullable<int> DecisionMonth
		{
			get
			{
				return this._DecisionMonth;
			}
			set
			{
				if ((this._DecisionMonth != value))
				{
					this.OnDecisionMonthChanging(value);
					this.SendPropertyChanging();
					this._DecisionMonth = value;
					this.SendPropertyChanged("DecisionMonth");
					this.OnDecisionMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenderstatus", DbType="Int")]
		public System.Nullable<int> Tenderstatus
		{
			get
			{
				return this._Tenderstatus;
			}
			set
			{
				if ((this._Tenderstatus != value))
				{
					this.OnTenderstatusChanging(value);
					this.SendPropertyChanging();
					this._Tenderstatus = value;
					this.SendPropertyChanged("Tenderstatus");
					this.OnTenderstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="Int")]
		public System.Nullable<int> Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreedPrice", DbType="Int")]
		public System.Nullable<int> AgreedPrice
		{
			get
			{
				return this._AgreedPrice;
			}
			set
			{
				if ((this._AgreedPrice != value))
				{
					this.OnAgreedPriceChanging(value);
					this.SendPropertyChanging();
					this._AgreedPrice = value;
					this.SendPropertyChanged("AgreedPrice");
					this.OnAgreedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DecisionDate
		{
			get
			{
				return this._DecisionDate;
			}
			set
			{
				if ((this._DecisionDate != value))
				{
					this.OnDecisionDateChanging(value);
					this.SendPropertyChanging();
					this._DecisionDate = value;
					this.SendPropertyChanged("DecisionDate");
					this.OnDecisionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentNo", DbType="NVarChar(50)")]
		public string AssignmentNo
		{
			get
			{
				return this._AssignmentNo;
			}
			set
			{
				if ((this._AssignmentNo != value))
				{
					this.OnAssignmentNoChanging(value);
					this.SendPropertyChanging();
					this._AssignmentNo = value;
					this.SendPropertyChanged("AssignmentNo");
					this.OnAssignmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probability", DbType="Int NOT NULL")]
		public int Probability
		{
			get
			{
				return this._Probability;
			}
			set
			{
				if ((this._Probability != value))
				{
					this.OnProbabilityChanging(value);
					this.SendPropertyChanging();
					this._Probability = value;
					this.SendPropertyChanged("Probability");
					this.OnProbabilityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crm_tender_consultants")]
	public partial class crm_tender_consultant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TPID;
		
		private int _TenderID;
		
		private int _ID;
		
		private System.Nullable<int> _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTPIDChanging(int value);
    partial void OnTPIDChanged();
    partial void OnTenderIDChanging(int value);
    partial void OnTenderIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    #endregion
		
		public crm_tender_consultant()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TPID
		{
			get
			{
				return this._TPID;
			}
			set
			{
				if ((this._TPID != value))
				{
					this.OnTPIDChanging(value);
					this.SendPropertyChanging();
					this._TPID = value;
					this.SendPropertyChanged("TPID");
					this.OnTPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenderID", DbType="Int NOT NULL")]
		public int TenderID
		{
			get
			{
				return this._TenderID;
			}
			set
			{
				if ((this._TenderID != value))
				{
					this.OnTenderIDChanging(value);
					this.SendPropertyChanging();
					this._TenderID = value;
					this.SendPropertyChanged("TenderID");
					this.OnTenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_TmpOldSB")]
	public partial class CRM_TmpOldSB
	{
		
		private string _Företag;
		
		public CRM_TmpOldSB()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Företag", DbType="NVarChar(255)")]
		public string Företag
		{
			get
			{
				return this._Företag;
			}
			set
			{
				if ((this._Företag != value))
				{
					this._Företag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_UserSignature")]
	public partial class CRM_UserSignature
	{
		
		private int _ID;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _HtmlContent;
		
		public CRM_UserSignature()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlContent", DbType="NVarChar(MAX)")]
		public string HtmlContent
		{
			get
			{
				return this._HtmlContent;
			}
			set
			{
				if ((this._HtmlContent != value))
				{
					this._HtmlContent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dearcom_BookingPublicCategory")]
	public partial class Dearcom_BookingPublicCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WebSite;
		
		private string _Name;
		
		private EntitySet<Dearcom_BookingPublicItem> _Dearcom_BookingPublicItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Dearcom_BookingPublicCategory()
		{
			this._Dearcom_BookingPublicItems = new EntitySet<Dearcom_BookingPublicItem>(new Action<Dearcom_BookingPublicItem>(this.attach_Dearcom_BookingPublicItems), new Action<Dearcom_BookingPublicItem>(this.detach_Dearcom_BookingPublicItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(10)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dearcom_BookingPublicCategory_Dearcom_BookingPublicItem", Storage="_Dearcom_BookingPublicItems", ThisKey="ID", OtherKey="BookingPublicCategoryID")]
		public EntitySet<Dearcom_BookingPublicItem> Dearcom_BookingPublicItems
		{
			get
			{
				return this._Dearcom_BookingPublicItems;
			}
			set
			{
				this._Dearcom_BookingPublicItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dearcom_BookingPublicItems(Dearcom_BookingPublicItem entity)
		{
			this.SendPropertyChanging();
			entity.Dearcom_BookingPublicCategory = this;
		}
		
		private void detach_Dearcom_BookingPublicItems(Dearcom_BookingPublicItem entity)
		{
			this.SendPropertyChanging();
			entity.Dearcom_BookingPublicCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dearcom_BookingPublicItems")]
	public partial class Dearcom_BookingPublicItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WebSite;
		
		private int _BookingPublicCategoryID;
		
		private string _Name;
		
		private System.Nullable<int> _Duration;
		
		private System.Nullable<int> _DurationSpecial;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<System.DateTime> _created;
		
		private EntitySet<Dearcom_BookingUserData> _Dearcom_BookingUserDatas;
		
		private EntityRef<Dearcom_BookingPublicCategory> _Dearcom_BookingPublicCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnBookingPublicCategoryIDChanging(int value);
    partial void OnBookingPublicCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnDurationSpecialChanging(System.Nullable<int> value);
    partial void OnDurationSpecialChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    #endregion
		
		public Dearcom_BookingPublicItem()
		{
			this._Dearcom_BookingUserDatas = new EntitySet<Dearcom_BookingUserData>(new Action<Dearcom_BookingUserData>(this.attach_Dearcom_BookingUserDatas), new Action<Dearcom_BookingUserData>(this.detach_Dearcom_BookingUserDatas));
			this._Dearcom_BookingPublicCategory = default(EntityRef<Dearcom_BookingPublicCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(10)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingPublicCategoryID", DbType="Int NOT NULL")]
		public int BookingPublicCategoryID
		{
			get
			{
				return this._BookingPublicCategoryID;
			}
			set
			{
				if ((this._BookingPublicCategoryID != value))
				{
					if (this._Dearcom_BookingPublicCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingPublicCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._BookingPublicCategoryID = value;
					this.SendPropertyChanged("BookingPublicCategoryID");
					this.OnBookingPublicCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationSpecial", DbType="Int")]
		public System.Nullable<int> DurationSpecial
		{
			get
			{
				return this._DurationSpecial;
			}
			set
			{
				if ((this._DurationSpecial != value))
				{
					this.OnDurationSpecialChanging(value);
					this.SendPropertyChanging();
					this._DurationSpecial = value;
					this.SendPropertyChanged("DurationSpecial");
					this.OnDurationSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dearcom_BookingPublicItem_Dearcom_BookingUserData", Storage="_Dearcom_BookingUserDatas", ThisKey="ID", OtherKey="Dearcom_BookingPublicItemsID")]
		public EntitySet<Dearcom_BookingUserData> Dearcom_BookingUserDatas
		{
			get
			{
				return this._Dearcom_BookingUserDatas;
			}
			set
			{
				this._Dearcom_BookingUserDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dearcom_BookingPublicCategory_Dearcom_BookingPublicItem", Storage="_Dearcom_BookingPublicCategory", ThisKey="BookingPublicCategoryID", OtherKey="ID", IsForeignKey=true)]
		public Dearcom_BookingPublicCategory Dearcom_BookingPublicCategory
		{
			get
			{
				return this._Dearcom_BookingPublicCategory.Entity;
			}
			set
			{
				Dearcom_BookingPublicCategory previousValue = this._Dearcom_BookingPublicCategory.Entity;
				if (((previousValue != value) 
							|| (this._Dearcom_BookingPublicCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dearcom_BookingPublicCategory.Entity = null;
						previousValue.Dearcom_BookingPublicItems.Remove(this);
					}
					this._Dearcom_BookingPublicCategory.Entity = value;
					if ((value != null))
					{
						value.Dearcom_BookingPublicItems.Add(this);
						this._BookingPublicCategoryID = value.ID;
					}
					else
					{
						this._BookingPublicCategoryID = default(int);
					}
					this.SendPropertyChanged("Dearcom_BookingPublicCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dearcom_BookingUserDatas(Dearcom_BookingUserData entity)
		{
			this.SendPropertyChanging();
			entity.Dearcom_BookingPublicItem = this;
		}
		
		private void detach_Dearcom_BookingUserDatas(Dearcom_BookingUserData entity)
		{
			this.SendPropertyChanging();
			entity.Dearcom_BookingPublicItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dearcom_BookingUserData")]
	public partial class Dearcom_BookingUserData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BookingWebUserEmail;
		
		private int _Dearcom_BookingPublicItemsID;
		
		private System.Nullable<System.DateTime> _Created;
		
		private EntityRef<Dearcom_BookingPublicItem> _Dearcom_BookingPublicItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBookingWebUserEmailChanging(string value);
    partial void OnBookingWebUserEmailChanged();
    partial void OnDearcom_BookingPublicItemsIDChanging(int value);
    partial void OnDearcom_BookingPublicItemsIDChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    #endregion
		
		public Dearcom_BookingUserData()
		{
			this._Dearcom_BookingPublicItem = default(EntityRef<Dearcom_BookingPublicItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingWebUserEmail", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string BookingWebUserEmail
		{
			get
			{
				return this._BookingWebUserEmail;
			}
			set
			{
				if ((this._BookingWebUserEmail != value))
				{
					this.OnBookingWebUserEmailChanging(value);
					this.SendPropertyChanging();
					this._BookingWebUserEmail = value;
					this.SendPropertyChanged("BookingWebUserEmail");
					this.OnBookingWebUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dearcom_BookingPublicItemsID", DbType="Int NOT NULL")]
		public int Dearcom_BookingPublicItemsID
		{
			get
			{
				return this._Dearcom_BookingPublicItemsID;
			}
			set
			{
				if ((this._Dearcom_BookingPublicItemsID != value))
				{
					if (this._Dearcom_BookingPublicItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDearcom_BookingPublicItemsIDChanging(value);
					this.SendPropertyChanging();
					this._Dearcom_BookingPublicItemsID = value;
					this.SendPropertyChanged("Dearcom_BookingPublicItemsID");
					this.OnDearcom_BookingPublicItemsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dearcom_BookingPublicItem_Dearcom_BookingUserData", Storage="_Dearcom_BookingPublicItem", ThisKey="Dearcom_BookingPublicItemsID", OtherKey="ID", IsForeignKey=true)]
		public Dearcom_BookingPublicItem Dearcom_BookingPublicItem
		{
			get
			{
				return this._Dearcom_BookingPublicItem.Entity;
			}
			set
			{
				Dearcom_BookingPublicItem previousValue = this._Dearcom_BookingPublicItem.Entity;
				if (((previousValue != value) 
							|| (this._Dearcom_BookingPublicItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dearcom_BookingPublicItem.Entity = null;
						previousValue.Dearcom_BookingUserDatas.Remove(this);
					}
					this._Dearcom_BookingPublicItem.Entity = value;
					if ((value != null))
					{
						value.Dearcom_BookingUserDatas.Add(this);
						this._Dearcom_BookingPublicItemsID = value.ID;
					}
					else
					{
						this._Dearcom_BookingPublicItemsID = default(int);
					}
					this.SendPropertyChanged("Dearcom_BookingPublicItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentArchive")]
	public partial class DocumentArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.DateTime _Created;
		
		private EntitySet<DocumentArchive_X_Site> _DocumentArchive_X_Sites;
		
		private EntitySet<DocumentCategory> _DocumentCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    #endregion
		
		public DocumentArchive()
		{
			this._DocumentArchive_X_Sites = new EntitySet<DocumentArchive_X_Site>(new Action<DocumentArchive_X_Site>(this.attach_DocumentArchive_X_Sites), new Action<DocumentArchive_X_Site>(this.detach_DocumentArchive_X_Sites));
			this._DocumentCategories = new EntitySet<DocumentCategory>(new Action<DocumentCategory>(this.attach_DocumentCategories), new Action<DocumentCategory>(this.detach_DocumentCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentArchive_DocumentArchive_X_Site", Storage="_DocumentArchive_X_Sites", ThisKey="ID", OtherKey="DocumentArchiveID")]
		public EntitySet<DocumentArchive_X_Site> DocumentArchive_X_Sites
		{
			get
			{
				return this._DocumentArchive_X_Sites;
			}
			set
			{
				this._DocumentArchive_X_Sites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentArchive_DocumentCategory", Storage="_DocumentCategories", ThisKey="ID", OtherKey="DocumentArchiveID")]
		public EntitySet<DocumentCategory> DocumentCategories
		{
			get
			{
				return this._DocumentCategories;
			}
			set
			{
				this._DocumentCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentArchive_X_Sites(DocumentArchive_X_Site entity)
		{
			this.SendPropertyChanging();
			entity.DocumentArchive = this;
		}
		
		private void detach_DocumentArchive_X_Sites(DocumentArchive_X_Site entity)
		{
			this.SendPropertyChanging();
			entity.DocumentArchive = null;
		}
		
		private void attach_DocumentCategories(DocumentCategory entity)
		{
			this.SendPropertyChanging();
			entity.DocumentArchive = this;
		}
		
		private void detach_DocumentCategories(DocumentCategory entity)
		{
			this.SendPropertyChanging();
			entity.DocumentArchive = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentArchive_X_Site")]
	public partial class DocumentArchive_X_Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteID;
		
		private int _DocumentArchiveID;
		
		private EntityRef<DocumentArchive> _DocumentArchive;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnDocumentArchiveIDChanging(int value);
    partial void OnDocumentArchiveIDChanged();
    #endregion
		
		public DocumentArchive_X_Site()
		{
			this._DocumentArchive = default(EntityRef<DocumentArchive>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentArchiveID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DocumentArchiveID
		{
			get
			{
				return this._DocumentArchiveID;
			}
			set
			{
				if ((this._DocumentArchiveID != value))
				{
					if (this._DocumentArchive.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentArchiveIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentArchiveID = value;
					this.SendPropertyChanged("DocumentArchiveID");
					this.OnDocumentArchiveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentArchive_DocumentArchive_X_Site", Storage="_DocumentArchive", ThisKey="DocumentArchiveID", OtherKey="ID", IsForeignKey=true)]
		public DocumentArchive DocumentArchive
		{
			get
			{
				return this._DocumentArchive.Entity;
			}
			set
			{
				DocumentArchive previousValue = this._DocumentArchive.Entity;
				if (((previousValue != value) 
							|| (this._DocumentArchive.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentArchive.Entity = null;
						previousValue.DocumentArchive_X_Sites.Remove(this);
					}
					this._DocumentArchive.Entity = value;
					if ((value != null))
					{
						value.DocumentArchive_X_Sites.Add(this);
						this._DocumentArchiveID = value.ID;
					}
					else
					{
						this._DocumentArchiveID = default(int);
					}
					this.SendPropertyChanged("DocumentArchive");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_DocumentArchive_X_Site", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.DocumentArchive_X_Sites.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.DocumentArchive_X_Sites.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentCategories")]
	public partial class DocumentCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _DocumentArchiveID;
		
		private System.Nullable<int> _SortOrder;
		
		private EntitySet<DocumentCategories_X_aspnet_Role> _DocumentCategories_X_aspnet_Roles;
		
		private EntityRef<DocumentCategoriesTreeStructure> _DocumentCategoriesTreeStructure;
		
		private EntitySet<DocumentCategoriesTreeStructure> _DocumentCategoriesTreeStructures;
		
		private EntitySet<Document> _Documents;
		
		private EntityRef<DocumentArchive> _DocumentArchive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDocumentArchiveIDChanging(int value);
    partial void OnDocumentArchiveIDChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    #endregion
		
		public DocumentCategory()
		{
			this._DocumentCategories_X_aspnet_Roles = new EntitySet<DocumentCategories_X_aspnet_Role>(new Action<DocumentCategories_X_aspnet_Role>(this.attach_DocumentCategories_X_aspnet_Roles), new Action<DocumentCategories_X_aspnet_Role>(this.detach_DocumentCategories_X_aspnet_Roles));
			this._DocumentCategoriesTreeStructure = default(EntityRef<DocumentCategoriesTreeStructure>);
			this._DocumentCategoriesTreeStructures = new EntitySet<DocumentCategoriesTreeStructure>(new Action<DocumentCategoriesTreeStructure>(this.attach_DocumentCategoriesTreeStructures), new Action<DocumentCategoriesTreeStructure>(this.detach_DocumentCategoriesTreeStructures));
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			this._DocumentArchive = default(EntityRef<DocumentArchive>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentArchiveID", DbType="Int NOT NULL")]
		public int DocumentArchiveID
		{
			get
			{
				return this._DocumentArchiveID;
			}
			set
			{
				if ((this._DocumentArchiveID != value))
				{
					if (this._DocumentArchive.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentArchiveIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentArchiveID = value;
					this.SendPropertyChanged("DocumentArchiveID");
					this.OnDocumentArchiveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_DocumentCategories_X_aspnet_Role", Storage="_DocumentCategories_X_aspnet_Roles", ThisKey="ID", OtherKey="DocumentCategoryID")]
		public EntitySet<DocumentCategories_X_aspnet_Role> DocumentCategories_X_aspnet_Roles
		{
			get
			{
				return this._DocumentCategories_X_aspnet_Roles;
			}
			set
			{
				this._DocumentCategories_X_aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_DocumentCategoriesTreeStructure", Storage="_DocumentCategoriesTreeStructure", ThisKey="ID", OtherKey="DocumentCategoryID", IsUnique=true, IsForeignKey=false)]
		public DocumentCategoriesTreeStructure DocumentCategoriesTreeStructure
		{
			get
			{
				return this._DocumentCategoriesTreeStructure.Entity;
			}
			set
			{
				DocumentCategoriesTreeStructure previousValue = this._DocumentCategoriesTreeStructure.Entity;
				if (((previousValue != value) 
							|| (this._DocumentCategoriesTreeStructure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentCategoriesTreeStructure.Entity = null;
						previousValue.DocumentCategory = null;
					}
					this._DocumentCategoriesTreeStructure.Entity = value;
					if ((value != null))
					{
						value.DocumentCategory = this;
					}
					this.SendPropertyChanged("DocumentCategoriesTreeStructure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_DocumentCategoriesTreeStructure1", Storage="_DocumentCategoriesTreeStructures", ThisKey="ID", OtherKey="ParentDocumentCategoryID")]
		public EntitySet<DocumentCategoriesTreeStructure> DocumentCategoriesTreeStructures
		{
			get
			{
				return this._DocumentCategoriesTreeStructures;
			}
			set
			{
				this._DocumentCategoriesTreeStructures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_Document", Storage="_Documents", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentArchive_DocumentCategory", Storage="_DocumentArchive", ThisKey="DocumentArchiveID", OtherKey="ID", IsForeignKey=true)]
		public DocumentArchive DocumentArchive
		{
			get
			{
				return this._DocumentArchive.Entity;
			}
			set
			{
				DocumentArchive previousValue = this._DocumentArchive.Entity;
				if (((previousValue != value) 
							|| (this._DocumentArchive.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentArchive.Entity = null;
						previousValue.DocumentCategories.Remove(this);
					}
					this._DocumentArchive.Entity = value;
					if ((value != null))
					{
						value.DocumentCategories.Add(this);
						this._DocumentArchiveID = value.ID;
					}
					else
					{
						this._DocumentArchiveID = default(int);
					}
					this.SendPropertyChanged("DocumentArchive");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentCategories_X_aspnet_Roles(DocumentCategories_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.DocumentCategory = this;
		}
		
		private void detach_DocumentCategories_X_aspnet_Roles(DocumentCategories_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.DocumentCategory = null;
		}
		
		private void attach_DocumentCategoriesTreeStructures(DocumentCategoriesTreeStructure entity)
		{
			this.SendPropertyChanging();
			entity.DocumentCategory1 = this;
		}
		
		private void detach_DocumentCategoriesTreeStructures(DocumentCategoriesTreeStructure entity)
		{
			this.SendPropertyChanging();
			entity.DocumentCategory1 = null;
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentCategory = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentCategories_X_aspnet_Roles")]
	public partial class DocumentCategories_X_aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentCategoryID;
		
		private System.Guid _RoleID;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<DocumentCategory> _DocumentCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentCategoryIDChanging(int value);
    partial void OnDocumentCategoryIDChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    #endregion
		
		public DocumentCategories_X_aspnet_Role()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._DocumentCategory = default(EntityRef<DocumentCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DocumentCategoryID
		{
			get
			{
				return this._DocumentCategoryID;
			}
			set
			{
				if ((this._DocumentCategoryID != value))
				{
					if (this._DocumentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentCategoryID = value;
					this.SendPropertyChanged("DocumentCategoryID");
					this.OnDocumentCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_DocumentCategories_X_aspnet_Role", Storage="_aspnet_Role", ThisKey="RoleID", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.DocumentCategories_X_aspnet_Roles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.DocumentCategories_X_aspnet_Roles.Add(this);
						this._RoleID = value.RoleId;
					}
					else
					{
						this._RoleID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_DocumentCategories_X_aspnet_Role", Storage="_DocumentCategory", ThisKey="DocumentCategoryID", OtherKey="ID", IsForeignKey=true)]
		public DocumentCategory DocumentCategory
		{
			get
			{
				return this._DocumentCategory.Entity;
			}
			set
			{
				DocumentCategory previousValue = this._DocumentCategory.Entity;
				if (((previousValue != value) 
							|| (this._DocumentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentCategory.Entity = null;
						previousValue.DocumentCategories_X_aspnet_Roles.Remove(this);
					}
					this._DocumentCategory.Entity = value;
					if ((value != null))
					{
						value.DocumentCategories_X_aspnet_Roles.Add(this);
						this._DocumentCategoryID = value.ID;
					}
					else
					{
						this._DocumentCategoryID = default(int);
					}
					this.SendPropertyChanged("DocumentCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentCategoriesTreeStructure")]
	public partial class DocumentCategoriesTreeStructure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DocumentCategoryID;
		
		private System.Nullable<int> _ParentDocumentCategoryID;
		
		private int _Sort;
		
		private EntityRef<DocumentCategory> _DocumentCategory;
		
		private EntityRef<DocumentCategory> _DocumentCategory1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocumentCategoryIDChanging(int value);
    partial void OnDocumentCategoryIDChanged();
    partial void OnParentDocumentCategoryIDChanging(System.Nullable<int> value);
    partial void OnParentDocumentCategoryIDChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    #endregion
		
		public DocumentCategoriesTreeStructure()
		{
			this._DocumentCategory = default(EntityRef<DocumentCategory>);
			this._DocumentCategory1 = default(EntityRef<DocumentCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DocumentCategoryID
		{
			get
			{
				return this._DocumentCategoryID;
			}
			set
			{
				if ((this._DocumentCategoryID != value))
				{
					if (this._DocumentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentCategoryID = value;
					this.SendPropertyChanged("DocumentCategoryID");
					this.OnDocumentCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentDocumentCategoryID", DbType="Int")]
		public System.Nullable<int> ParentDocumentCategoryID
		{
			get
			{
				return this._ParentDocumentCategoryID;
			}
			set
			{
				if ((this._ParentDocumentCategoryID != value))
				{
					if (this._DocumentCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentDocumentCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ParentDocumentCategoryID = value;
					this.SendPropertyChanged("ParentDocumentCategoryID");
					this.OnParentDocumentCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int NOT NULL")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_DocumentCategoriesTreeStructure", Storage="_DocumentCategory", ThisKey="DocumentCategoryID", OtherKey="ID", IsForeignKey=true)]
		public DocumentCategory DocumentCategory
		{
			get
			{
				return this._DocumentCategory.Entity;
			}
			set
			{
				DocumentCategory previousValue = this._DocumentCategory.Entity;
				if (((previousValue != value) 
							|| (this._DocumentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentCategory.Entity = null;
						previousValue.DocumentCategoriesTreeStructure = null;
					}
					this._DocumentCategory.Entity = value;
					if ((value != null))
					{
						value.DocumentCategoriesTreeStructure = this;
						this._DocumentCategoryID = value.ID;
					}
					else
					{
						this._DocumentCategoryID = default(int);
					}
					this.SendPropertyChanged("DocumentCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_DocumentCategoriesTreeStructure1", Storage="_DocumentCategory1", ThisKey="ParentDocumentCategoryID", OtherKey="ID", IsForeignKey=true)]
		public DocumentCategory DocumentCategory1
		{
			get
			{
				return this._DocumentCategory1.Entity;
			}
			set
			{
				DocumentCategory previousValue = this._DocumentCategory1.Entity;
				if (((previousValue != value) 
							|| (this._DocumentCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentCategory1.Entity = null;
						previousValue.DocumentCategoriesTreeStructures.Remove(this);
					}
					this._DocumentCategory1.Entity = value;
					if ((value != null))
					{
						value.DocumentCategoriesTreeStructures.Add(this);
						this._ParentDocumentCategoryID = value.ID;
					}
					else
					{
						this._ParentDocumentCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocumentCategory1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documents")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private string _Filename;
		
		private System.DateTime _ValidFromDate;
		
		private System.DateTime _ValidToDate;
		
		private System.DateTime _ReminderDate;
		
		private string _ReminderText;
		
		private int _CategoryID;
		
		private string _KeyWords;
		
		private System.Nullable<int> _FileSize;
		
		private string _NotifyEmail;
		
		private EntitySet<Documents_X_aspnet_Role> _Documents_X_aspnet_Roles;
		
		private EntityRef<DocumentCategory> _DocumentCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnValidFromDateChanging(System.DateTime value);
    partial void OnValidFromDateChanged();
    partial void OnValidToDateChanging(System.DateTime value);
    partial void OnValidToDateChanged();
    partial void OnReminderDateChanging(System.DateTime value);
    partial void OnReminderDateChanged();
    partial void OnReminderTextChanging(string value);
    partial void OnReminderTextChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    partial void OnFileSizeChanging(System.Nullable<int> value);
    partial void OnFileSizeChanged();
    partial void OnNotifyEmailChanging(string value);
    partial void OnNotifyEmailChanged();
    #endregion
		
		public Document()
		{
			this._Documents_X_aspnet_Roles = new EntitySet<Documents_X_aspnet_Role>(new Action<Documents_X_aspnet_Role>(this.attach_Documents_X_aspnet_Roles), new Action<Documents_X_aspnet_Role>(this.detach_Documents_X_aspnet_Roles));
			this._DocumentCategory = default(EntityRef<DocumentCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidFromDate", DbType="DateTime NOT NULL")]
		public System.DateTime ValidFromDate
		{
			get
			{
				return this._ValidFromDate;
			}
			set
			{
				if ((this._ValidFromDate != value))
				{
					this.OnValidFromDateChanging(value);
					this.SendPropertyChanging();
					this._ValidFromDate = value;
					this.SendPropertyChanged("ValidFromDate");
					this.OnValidFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidToDate", DbType="DateTime NOT NULL")]
		public System.DateTime ValidToDate
		{
			get
			{
				return this._ValidToDate;
			}
			set
			{
				if ((this._ValidToDate != value))
				{
					this.OnValidToDateChanging(value);
					this.SendPropertyChanging();
					this._ValidToDate = value;
					this.SendPropertyChanged("ValidToDate");
					this.OnValidToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReminderDate
		{
			get
			{
				return this._ReminderDate;
			}
			set
			{
				if ((this._ReminderDate != value))
				{
					this.OnReminderDateChanging(value);
					this.SendPropertyChanging();
					this._ReminderDate = value;
					this.SendPropertyChanged("ReminderDate");
					this.OnReminderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ReminderText
		{
			get
			{
				return this._ReminderText;
			}
			set
			{
				if ((this._ReminderText != value))
				{
					this.OnReminderTextChanging(value);
					this.SendPropertyChanging();
					this._ReminderText = value;
					this.SendPropertyChanged("ReminderText");
					this.OnReminderTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._DocumentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="Int")]
		public System.Nullable<int> FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyEmail", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NotifyEmail
		{
			get
			{
				return this._NotifyEmail;
			}
			set
			{
				if ((this._NotifyEmail != value))
				{
					this.OnNotifyEmailChanging(value);
					this.SendPropertyChanging();
					this._NotifyEmail = value;
					this.SendPropertyChanged("NotifyEmail");
					this.OnNotifyEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Documents_X_aspnet_Role", Storage="_Documents_X_aspnet_Roles", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<Documents_X_aspnet_Role> Documents_X_aspnet_Roles
		{
			get
			{
				return this._Documents_X_aspnet_Roles;
			}
			set
			{
				this._Documents_X_aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_Document", Storage="_DocumentCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public DocumentCategory DocumentCategory
		{
			get
			{
				return this._DocumentCategory.Entity;
			}
			set
			{
				DocumentCategory previousValue = this._DocumentCategory.Entity;
				if (((previousValue != value) 
							|| (this._DocumentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentCategory.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._DocumentCategory.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("DocumentCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Documents_X_aspnet_Roles(Documents_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_Documents_X_aspnet_Roles(Documents_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documents_X_aspnet_Roles")]
	public partial class Documents_X_aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentID;
		
		private System.Guid _RoleID;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    #endregion
		
		public Documents_X_aspnet_Role()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_Documents_X_aspnet_Role", Storage="_aspnet_Role", ThisKey="RoleID", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.Documents_X_aspnet_Roles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.Documents_X_aspnet_Roles.Add(this);
						this._RoleID = value.RoleId;
					}
					else
					{
						this._RoleID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Documents_X_aspnet_Role", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.Documents_X_aspnet_Roles.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.Documents_X_aspnet_Roles.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(int);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dtproperties")]
	public partial class dtproperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _objectid;
		
		private string _property;
		
		private string _value;
		
		private string _uvalue;
		
		private System.Data.Linq.Binary _lvalue;
		
		private int _version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnobjectidChanging(System.Nullable<int> value);
    partial void OnobjectidChanged();
    partial void OnpropertyChanging(string value);
    partial void OnpropertyChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnuvalueChanging(string value);
    partial void OnuvalueChanged();
    partial void OnlvalueChanging(System.Data.Linq.Binary value);
    partial void OnlvalueChanged();
    partial void OnversionChanging(int value);
    partial void OnversionChanged();
    #endregion
		
		public dtproperty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectid", DbType="Int")]
		public System.Nullable<int> objectid
		{
			get
			{
				return this._objectid;
			}
			set
			{
				if ((this._objectid != value))
				{
					this.OnobjectidChanging(value);
					this.SendPropertyChanging();
					this._objectid = value;
					this.SendPropertyChanged("objectid");
					this.OnobjectidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_property", DbType="VarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string property
		{
			get
			{
				return this._property;
			}
			set
			{
				if ((this._property != value))
				{
					this.OnpropertyChanging(value);
					this.SendPropertyChanging();
					this._property = value;
					this.SendPropertyChanged("property");
					this.OnpropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(255)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uvalue", DbType="NVarChar(255)")]
		public string uvalue
		{
			get
			{
				return this._uvalue;
			}
			set
			{
				if ((this._uvalue != value))
				{
					this.OnuvalueChanging(value);
					this.SendPropertyChanging();
					this._uvalue = value;
					this.SendPropertyChanged("uvalue");
					this.OnuvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lvalue", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary lvalue
		{
			get
			{
				return this._lvalue;
			}
			set
			{
				if ((this._lvalue != value))
				{
					this.OnlvalueChanging(value);
					this.SendPropertyChanging();
					this._lvalue = value;
					this.SendPropertyChanged("lvalue");
					this.OnlvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="Int NOT NULL")]
		public int version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorLog")]
	public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorID;
		
		private System.Nullable<int> _SiteID;
		
		private string _SiteUrl;
		
		private string _ErrorText;
		
		private System.Nullable<System.DateTime> _Time;
		
		private string _StackTrace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIDChanging(int value);
    partial void OnErrorIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnSiteUrlChanging(string value);
    partial void OnSiteUrlChanged();
    partial void OnErrorTextChanging(string value);
    partial void OnErrorTextChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    #endregion
		
		public ErrorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrorID
		{
			get
			{
				return this._ErrorID;
			}
			set
			{
				if ((this._ErrorID != value))
				{
					this.OnErrorIDChanging(value);
					this.SendPropertyChanging();
					this._ErrorID = value;
					this.SendPropertyChanged("ErrorID");
					this.OnErrorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUrl", DbType="NVarChar(50)")]
		public string SiteUrl
		{
			get
			{
				return this._SiteUrl;
			}
			set
			{
				if ((this._SiteUrl != value))
				{
					this.OnSiteUrlChanging(value);
					this.SendPropertyChanging();
					this._SiteUrl = value;
					this.SendPropertyChanged("SiteUrl");
					this.OnSiteUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorText", DbType="NVarChar(MAX)")]
		public string ErrorText
		{
			get
			{
				return this._ErrorText;
			}
			set
			{
				if ((this._ErrorText != value))
				{
					this.OnErrorTextChanging(value);
					this.SendPropertyChanging();
					this._ErrorText = value;
					this.SendPropertyChanged("ErrorText");
					this.OnErrorTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackTrace", DbType="NVarChar(MAX)")]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileArchive_Groups")]
	public partial class FileArchive_Group
	{
		
		private int _GroupID;
		
		private int _SiteID;
		
		private string _GroupName;
		
		public FileArchive_Group()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileArchive_UsersInGroup")]
	public partial class FileArchive_UsersInGroup
	{
		
		private System.Guid _UserID;
		
		private int _GroupID;
		
		public FileArchive_UsersInGroup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Alternatives")]
	public partial class Form_Alternative : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _QuestionID;
		
		private int _SiteID;
		
		private System.Nullable<int> _FormID;
		
		private System.Nullable<int> _SectionID;
		
		private string _AlternativeText;
		
		private int _QuestionType;
		
		private int _AlternativeType;
		
		private System.Nullable<int> _Point;
		
		private System.Nullable<int> _Jump;
		
		private string _GroupKey;
		
		private string _Correct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnFormIDChanging(System.Nullable<int> value);
    partial void OnFormIDChanged();
    partial void OnSectionIDChanging(System.Nullable<int> value);
    partial void OnSectionIDChanged();
    partial void OnAlternativeTextChanging(string value);
    partial void OnAlternativeTextChanged();
    partial void OnQuestionTypeChanging(int value);
    partial void OnQuestionTypeChanged();
    partial void OnAlternativeTypeChanging(int value);
    partial void OnAlternativeTypeChanged();
    partial void OnPointChanging(System.Nullable<int> value);
    partial void OnPointChanged();
    partial void OnJumpChanging(System.Nullable<int> value);
    partial void OnJumpChanged();
    partial void OnGroupKeyChanging(string value);
    partial void OnGroupKeyChanged();
    partial void OnCorrectChanging(string value);
    partial void OnCorrectChanged();
    #endregion
		
		public Form_Alternative()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int")]
		public System.Nullable<int> FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int")]
		public System.Nullable<int> SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this.OnSectionIDChanging(value);
					this.SendPropertyChanging();
					this._SectionID = value;
					this.SendPropertyChanged("SectionID");
					this.OnSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeText", DbType="NVarChar(MAX)")]
		public string AlternativeText
		{
			get
			{
				return this._AlternativeText;
			}
			set
			{
				if ((this._AlternativeText != value))
				{
					this.OnAlternativeTextChanging(value);
					this.SendPropertyChanging();
					this._AlternativeText = value;
					this.SendPropertyChanged("AlternativeText");
					this.OnAlternativeTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionType", DbType="Int NOT NULL")]
		public int QuestionType
		{
			get
			{
				return this._QuestionType;
			}
			set
			{
				if ((this._QuestionType != value))
				{
					this.OnQuestionTypeChanging(value);
					this.SendPropertyChanging();
					this._QuestionType = value;
					this.SendPropertyChanged("QuestionType");
					this.OnQuestionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeType", DbType="Int NOT NULL")]
		public int AlternativeType
		{
			get
			{
				return this._AlternativeType;
			}
			set
			{
				if ((this._AlternativeType != value))
				{
					this.OnAlternativeTypeChanging(value);
					this.SendPropertyChanging();
					this._AlternativeType = value;
					this.SendPropertyChanged("AlternativeType");
					this.OnAlternativeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int")]
		public System.Nullable<int> Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this.OnPointChanging(value);
					this.SendPropertyChanging();
					this._Point = value;
					this.SendPropertyChanged("Point");
					this.OnPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jump", DbType="Int")]
		public System.Nullable<int> Jump
		{
			get
			{
				return this._Jump;
			}
			set
			{
				if ((this._Jump != value))
				{
					this.OnJumpChanging(value);
					this.SendPropertyChanging();
					this._Jump = value;
					this.SendPropertyChanged("Jump");
					this.OnJumpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupKey", DbType="NChar(15)")]
		public string GroupKey
		{
			get
			{
				return this._GroupKey;
			}
			set
			{
				if ((this._GroupKey != value))
				{
					this.OnGroupKeyChanging(value);
					this.SendPropertyChanging();
					this._GroupKey = value;
					this.SendPropertyChanged("GroupKey");
					this.OnGroupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correct", DbType="NVarChar(50)")]
		public string Correct
		{
			get
			{
				return this._Correct;
			}
			set
			{
				if ((this._Correct != value))
				{
					this.OnCorrectChanging(value);
					this.SendPropertyChanging();
					this._Correct = value;
					this.SendPropertyChanged("Correct");
					this.OnCorrectChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Answer")]
	public partial class Form_Answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ResponderID;
		
		private int _AlternativeID;
		
		private string _AlternativeText;
		
		private int _AlternativeType;
		
		private System.Nullable<int> _Point;
		
		private int _QuestionID;
		
		private int _SectionID;
		
		private int _FormID;
		
		private System.DateTime _Date;
		
		private string _Completed;
		
		private string _Last;
		
		private System.Nullable<int> _Form_Responder_FK;
		
		private bool _Deleted;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private EntityRef<Form_Responder> _Form_Responder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResponderIDChanging(string value);
    partial void OnResponderIDChanged();
    partial void OnAlternativeIDChanging(int value);
    partial void OnAlternativeIDChanged();
    partial void OnAlternativeTextChanging(string value);
    partial void OnAlternativeTextChanged();
    partial void OnAlternativeTypeChanging(int value);
    partial void OnAlternativeTypeChanged();
    partial void OnPointChanging(System.Nullable<int> value);
    partial void OnPointChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnSectionIDChanging(int value);
    partial void OnSectionIDChanged();
    partial void OnFormIDChanging(int value);
    partial void OnFormIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCompletedChanging(string value);
    partial void OnCompletedChanged();
    partial void OnLastChanging(string value);
    partial void OnLastChanged();
    partial void OnForm_Responder_FKChanging(System.Nullable<int> value);
    partial void OnForm_Responder_FKChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public Form_Answer()
		{
			this._Form_Responder = default(EntityRef<Form_Responder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponderID", DbType="NVarChar(100)")]
		public string ResponderID
		{
			get
			{
				return this._ResponderID;
			}
			set
			{
				if ((this._ResponderID != value))
				{
					this.OnResponderIDChanging(value);
					this.SendPropertyChanging();
					this._ResponderID = value;
					this.SendPropertyChanged("ResponderID");
					this.OnResponderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeID", DbType="Int NOT NULL")]
		public int AlternativeID
		{
			get
			{
				return this._AlternativeID;
			}
			set
			{
				if ((this._AlternativeID != value))
				{
					this.OnAlternativeIDChanging(value);
					this.SendPropertyChanging();
					this._AlternativeID = value;
					this.SendPropertyChanged("AlternativeID");
					this.OnAlternativeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeText", DbType="NVarChar(MAX)")]
		public string AlternativeText
		{
			get
			{
				return this._AlternativeText;
			}
			set
			{
				if ((this._AlternativeText != value))
				{
					this.OnAlternativeTextChanging(value);
					this.SendPropertyChanging();
					this._AlternativeText = value;
					this.SendPropertyChanged("AlternativeText");
					this.OnAlternativeTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeType", DbType="Int NOT NULL")]
		public int AlternativeType
		{
			get
			{
				return this._AlternativeType;
			}
			set
			{
				if ((this._AlternativeType != value))
				{
					this.OnAlternativeTypeChanging(value);
					this.SendPropertyChanging();
					this._AlternativeType = value;
					this.SendPropertyChanged("AlternativeType");
					this.OnAlternativeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int")]
		public System.Nullable<int> Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this.OnPointChanging(value);
					this.SendPropertyChanging();
					this._Point = value;
					this.SendPropertyChanged("Point");
					this.OnPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int NOT NULL")]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this.OnSectionIDChanging(value);
					this.SendPropertyChanging();
					this._SectionID = value;
					this.SendPropertyChanged("SectionID");
					this.OnSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int NOT NULL")]
		public int FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="NVarChar(20)")]
		public string Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last", DbType="NVarChar(20)")]
		public string Last
		{
			get
			{
				return this._Last;
			}
			set
			{
				if ((this._Last != value))
				{
					this.OnLastChanging(value);
					this.SendPropertyChanging();
					this._Last = value;
					this.SendPropertyChanged("Last");
					this.OnLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Responder_FK", DbType="Int")]
		public System.Nullable<int> Form_Responder_FK
		{
			get
			{
				return this._Form_Responder_FK;
			}
			set
			{
				if ((this._Form_Responder_FK != value))
				{
					if (this._Form_Responder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForm_Responder_FKChanging(value);
					this.SendPropertyChanging();
					this._Form_Responder_FK = value;
					this.SendPropertyChanged("Form_Responder_FK");
					this.OnForm_Responder_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Responder_Form_Answer", Storage="_Form_Responder", ThisKey="Form_Responder_FK", OtherKey="ID", IsForeignKey=true)]
		public Form_Responder Form_Responder
		{
			get
			{
				return this._Form_Responder.Entity;
			}
			set
			{
				Form_Responder previousValue = this._Form_Responder.Entity;
				if (((previousValue != value) 
							|| (this._Form_Responder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_Responder.Entity = null;
						previousValue.Form_Answers.Remove(this);
					}
					this._Form_Responder.Entity = value;
					if ((value != null))
					{
						value.Form_Answers.Add(this);
						this._Form_Responder_FK = value.ID;
					}
					else
					{
						this._Form_Responder_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form_Responder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Form")]
	public partial class Form_Form : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormID;
		
		private string _FormName;
		
		private System.Nullable<int> _SiteID;
		
		private string _FormText;
		
		private System.Nullable<int> _ObjectID;
		
		private System.Nullable<int> _ExternalConnection_FK;
		
		private bool _ExternalConnectionEnabled;
		
		private bool _Deleted;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<Form_ExternalConnections_ReturnValue> _Form_ExternalConnections_ReturnValues;
		
		private EntitySet<Form_ExternalConnections_Value> _Form_ExternalConnections_Values;
		
		private EntitySet<Form_Responder> _Form_Responders;
		
		private EntityRef<Form_ExternalConnection> _Form_ExternalConnection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormIDChanging(int value);
    partial void OnFormIDChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnFormTextChanging(string value);
    partial void OnFormTextChanged();
    partial void OnObjectIDChanging(System.Nullable<int> value);
    partial void OnObjectIDChanged();
    partial void OnExternalConnection_FKChanging(System.Nullable<int> value);
    partial void OnExternalConnection_FKChanged();
    partial void OnExternalConnectionEnabledChanging(bool value);
    partial void OnExternalConnectionEnabledChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public Form_Form()
		{
			this._Form_ExternalConnections_ReturnValues = new EntitySet<Form_ExternalConnections_ReturnValue>(new Action<Form_ExternalConnections_ReturnValue>(this.attach_Form_ExternalConnections_ReturnValues), new Action<Form_ExternalConnections_ReturnValue>(this.detach_Form_ExternalConnections_ReturnValues));
			this._Form_ExternalConnections_Values = new EntitySet<Form_ExternalConnections_Value>(new Action<Form_ExternalConnections_Value>(this.attach_Form_ExternalConnections_Values), new Action<Form_ExternalConnections_Value>(this.detach_Form_ExternalConnections_Values));
			this._Form_Responders = new EntitySet<Form_Responder>(new Action<Form_Responder>(this.attach_Form_Responders), new Action<Form_Responder>(this.detach_Form_Responders));
			this._Form_ExternalConnection = default(EntityRef<Form_ExternalConnection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="NVarChar(100)")]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string FormText
		{
			get
			{
				return this._FormText;
			}
			set
			{
				if ((this._FormText != value))
				{
					this.OnFormTextChanging(value);
					this.SendPropertyChanging();
					this._FormText = value;
					this.SendPropertyChanged("FormText");
					this.OnFormTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalConnection_FK", DbType="Int")]
		public System.Nullable<int> ExternalConnection_FK
		{
			get
			{
				return this._ExternalConnection_FK;
			}
			set
			{
				if ((this._ExternalConnection_FK != value))
				{
					if (this._Form_ExternalConnection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExternalConnection_FKChanging(value);
					this.SendPropertyChanging();
					this._ExternalConnection_FK = value;
					this.SendPropertyChanged("ExternalConnection_FK");
					this.OnExternalConnection_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalConnectionEnabled", DbType="Bit NOT NULL")]
		public bool ExternalConnectionEnabled
		{
			get
			{
				return this._ExternalConnectionEnabled;
			}
			set
			{
				if ((this._ExternalConnectionEnabled != value))
				{
					this.OnExternalConnectionEnabledChanging(value);
					this.SendPropertyChanging();
					this._ExternalConnectionEnabled = value;
					this.SendPropertyChanged("ExternalConnectionEnabled");
					this.OnExternalConnectionEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Form_Form_ExternalConnections_ReturnValue", Storage="_Form_ExternalConnections_ReturnValues", ThisKey="FormID", OtherKey="Form_FK")]
		public EntitySet<Form_ExternalConnections_ReturnValue> Form_ExternalConnections_ReturnValues
		{
			get
			{
				return this._Form_ExternalConnections_ReturnValues;
			}
			set
			{
				this._Form_ExternalConnections_ReturnValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Form_Form_ExternalConnections_Value", Storage="_Form_ExternalConnections_Values", ThisKey="FormID", OtherKey="Form_Form_FK")]
		public EntitySet<Form_ExternalConnections_Value> Form_ExternalConnections_Values
		{
			get
			{
				return this._Form_ExternalConnections_Values;
			}
			set
			{
				this._Form_ExternalConnections_Values.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Form_Form_Responder", Storage="_Form_Responders", ThisKey="FormID", OtherKey="Form_FK")]
		public EntitySet<Form_Responder> Form_Responders
		{
			get
			{
				return this._Form_Responders;
			}
			set
			{
				this._Form_Responders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_ExternalConnection_Form_Form", Storage="_Form_ExternalConnection", ThisKey="ExternalConnection_FK", OtherKey="ID", IsForeignKey=true)]
		public Form_ExternalConnection Form_ExternalConnection
		{
			get
			{
				return this._Form_ExternalConnection.Entity;
			}
			set
			{
				Form_ExternalConnection previousValue = this._Form_ExternalConnection.Entity;
				if (((previousValue != value) 
							|| (this._Form_ExternalConnection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_ExternalConnection.Entity = null;
						previousValue.Form_Forms.Remove(this);
					}
					this._Form_ExternalConnection.Entity = value;
					if ((value != null))
					{
						value.Form_Forms.Add(this);
						this._ExternalConnection_FK = value.ID;
					}
					else
					{
						this._ExternalConnection_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form_ExternalConnection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_ExternalConnections_ReturnValues(Form_ExternalConnections_ReturnValue entity)
		{
			this.SendPropertyChanging();
			entity.Form_Form = this;
		}
		
		private void detach_Form_ExternalConnections_ReturnValues(Form_ExternalConnections_ReturnValue entity)
		{
			this.SendPropertyChanging();
			entity.Form_Form = null;
		}
		
		private void attach_Form_ExternalConnections_Values(Form_ExternalConnections_Value entity)
		{
			this.SendPropertyChanging();
			entity.Form_Form = this;
		}
		
		private void detach_Form_ExternalConnections_Values(Form_ExternalConnections_Value entity)
		{
			this.SendPropertyChanging();
			entity.Form_Form = null;
		}
		
		private void attach_Form_Responders(Form_Responder entity)
		{
			this.SendPropertyChanging();
			entity.Form_Form = this;
		}
		
		private void detach_Form_Responders(Form_Responder entity)
		{
			this.SendPropertyChanging();
			entity.Form_Form = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Mail")]
	public partial class Form_Mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FormID;
		
		private string _Mail;
		
		private string _FromMail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFormIDChanging(int value);
    partial void OnFormIDChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnFromMailChanging(string value);
    partial void OnFromMailChanged();
    #endregion
		
		public Form_Mail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int NOT NULL")]
		public int FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(MAX)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromMail", DbType="NVarChar(50)")]
		public string FromMail
		{
			get
			{
				return this._FromMail;
			}
			set
			{
				if ((this._FromMail != value))
				{
					this.OnFromMailChanging(value);
					this.SendPropertyChanging();
					this._FromMail = value;
					this.SendPropertyChanged("FromMail");
					this.OnFromMailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Question")]
	public partial class Form_Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private System.Nullable<int> _SectionID;
		
		private System.Nullable<int> _FormID;
		
		private int _QuestionType;
		
		private string _QuestionText;
		
		private int _SiteID;
		
		private System.Nullable<int> _MainQuestionID;
		
		private System.Nullable<int> _AlternativesMax;
		
		private System.Nullable<int> _Sort;
		
		private string _Interval;
		
		private System.Nullable<int> _Back;
		
		private string _Required;
		
		private bool _Deleted;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnSectionIDChanging(System.Nullable<int> value);
    partial void OnSectionIDChanged();
    partial void OnFormIDChanging(System.Nullable<int> value);
    partial void OnFormIDChanged();
    partial void OnQuestionTypeChanging(int value);
    partial void OnQuestionTypeChanged();
    partial void OnQuestionTextChanging(string value);
    partial void OnQuestionTextChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnMainQuestionIDChanging(System.Nullable<int> value);
    partial void OnMainQuestionIDChanged();
    partial void OnAlternativesMaxChanging(System.Nullable<int> value);
    partial void OnAlternativesMaxChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnIntervalChanging(string value);
    partial void OnIntervalChanged();
    partial void OnBackChanging(System.Nullable<int> value);
    partial void OnBackChanged();
    partial void OnRequiredChanging(string value);
    partial void OnRequiredChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public Form_Question()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int")]
		public System.Nullable<int> SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this.OnSectionIDChanging(value);
					this.SendPropertyChanging();
					this._SectionID = value;
					this.SendPropertyChanged("SectionID");
					this.OnSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int")]
		public System.Nullable<int> FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionType", DbType="Int NOT NULL")]
		public int QuestionType
		{
			get
			{
				return this._QuestionType;
			}
			set
			{
				if ((this._QuestionType != value))
				{
					this.OnQuestionTypeChanging(value);
					this.SendPropertyChanging();
					this._QuestionType = value;
					this.SendPropertyChanged("QuestionType");
					this.OnQuestionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string QuestionText
		{
			get
			{
				return this._QuestionText;
			}
			set
			{
				if ((this._QuestionText != value))
				{
					this.OnQuestionTextChanging(value);
					this.SendPropertyChanging();
					this._QuestionText = value;
					this.SendPropertyChanged("QuestionText");
					this.OnQuestionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainQuestionID", DbType="Int")]
		public System.Nullable<int> MainQuestionID
		{
			get
			{
				return this._MainQuestionID;
			}
			set
			{
				if ((this._MainQuestionID != value))
				{
					this.OnMainQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._MainQuestionID = value;
					this.SendPropertyChanged("MainQuestionID");
					this.OnMainQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativesMax", DbType="Int")]
		public System.Nullable<int> AlternativesMax
		{
			get
			{
				return this._AlternativesMax;
			}
			set
			{
				if ((this._AlternativesMax != value))
				{
					this.OnAlternativesMaxChanging(value);
					this.SendPropertyChanging();
					this._AlternativesMax = value;
					this.SendPropertyChanged("AlternativesMax");
					this.OnAlternativesMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interval", DbType="NVarChar(MAX)")]
		public string Interval
		{
			get
			{
				return this._Interval;
			}
			set
			{
				if ((this._Interval != value))
				{
					this.OnIntervalChanging(value);
					this.SendPropertyChanging();
					this._Interval = value;
					this.SendPropertyChanged("Interval");
					this.OnIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Back", DbType="Int")]
		public System.Nullable<int> Back
		{
			get
			{
				return this._Back;
			}
			set
			{
				if ((this._Back != value))
				{
					this.OnBackChanging(value);
					this.SendPropertyChanging();
					this._Back = value;
					this.SendPropertyChanged("Back");
					this.OnBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Required", DbType="NVarChar(50)")]
		public string Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Responder")]
	public partial class Form_Responder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Form_FK;
		
		private int _Site_FK;
		
		private string _IP;
		
		private System.DateTime _TimeStamp;
		
		private EntitySet<Form_ExternalConnections_ReturnValue> _Form_ExternalConnections_ReturnValues;
		
		private EntitySet<Form_Answer> _Form_Answers;
		
		private EntityRef<Form_Form> _Form_Form;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnForm_FKChanging(int value);
    partial void OnForm_FKChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    #endregion
		
		public Form_Responder()
		{
			this._Form_ExternalConnections_ReturnValues = new EntitySet<Form_ExternalConnections_ReturnValue>(new Action<Form_ExternalConnections_ReturnValue>(this.attach_Form_ExternalConnections_ReturnValues), new Action<Form_ExternalConnections_ReturnValue>(this.detach_Form_ExternalConnections_ReturnValues));
			this._Form_Answers = new EntitySet<Form_Answer>(new Action<Form_Answer>(this.attach_Form_Answers), new Action<Form_Answer>(this.detach_Form_Answers));
			this._Form_Form = default(EntityRef<Form_Form>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_FK", DbType="Int NOT NULL")]
		public int Form_FK
		{
			get
			{
				return this._Form_FK;
			}
			set
			{
				if ((this._Form_FK != value))
				{
					if (this._Form_Form.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForm_FKChanging(value);
					this.SendPropertyChanging();
					this._Form_FK = value;
					this.SendPropertyChanged("Form_FK");
					this.OnForm_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Responder_Form_ExternalConnections_ReturnValue", Storage="_Form_ExternalConnections_ReturnValues", ThisKey="ID", OtherKey="Responder_FK")]
		public EntitySet<Form_ExternalConnections_ReturnValue> Form_ExternalConnections_ReturnValues
		{
			get
			{
				return this._Form_ExternalConnections_ReturnValues;
			}
			set
			{
				this._Form_ExternalConnections_ReturnValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Responder_Form_Answer", Storage="_Form_Answers", ThisKey="ID", OtherKey="Form_Responder_FK")]
		public EntitySet<Form_Answer> Form_Answers
		{
			get
			{
				return this._Form_Answers;
			}
			set
			{
				this._Form_Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Form_Form_Responder", Storage="_Form_Form", ThisKey="Form_FK", OtherKey="FormID", IsForeignKey=true)]
		public Form_Form Form_Form
		{
			get
			{
				return this._Form_Form.Entity;
			}
			set
			{
				Form_Form previousValue = this._Form_Form.Entity;
				if (((previousValue != value) 
							|| (this._Form_Form.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_Form.Entity = null;
						previousValue.Form_Responders.Remove(this);
					}
					this._Form_Form.Entity = value;
					if ((value != null))
					{
						value.Form_Responders.Add(this);
						this._Form_FK = value.FormID;
					}
					else
					{
						this._Form_FK = default(int);
					}
					this.SendPropertyChanged("Form_Form");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Form_Responder", Storage="_Site", ThisKey="Site_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Form_Responders.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Form_Responders.Add(this);
						this._Site_FK = value.SiteID;
					}
					else
					{
						this._Site_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_ExternalConnections_ReturnValues(Form_ExternalConnections_ReturnValue entity)
		{
			this.SendPropertyChanging();
			entity.Form_Responder = this;
		}
		
		private void detach_Form_ExternalConnections_ReturnValues(Form_ExternalConnections_ReturnValue entity)
		{
			this.SendPropertyChanging();
			entity.Form_Responder = null;
		}
		
		private void attach_Form_Answers(Form_Answer entity)
		{
			this.SendPropertyChanging();
			entity.Form_Responder = this;
		}
		
		private void detach_Form_Answers(Form_Answer entity)
		{
			this.SendPropertyChanging();
			entity.Form_Responder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Section")]
	public partial class Form_Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SectionID;
		
		private System.Nullable<int> _FormID;
		
		private string _SectionHeader;
		
		private int _SiteID;
		
		private string _SectionText;
		
		private System.Nullable<int> _Sort;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSectionIDChanging(int value);
    partial void OnSectionIDChanged();
    partial void OnFormIDChanging(System.Nullable<int> value);
    partial void OnFormIDChanged();
    partial void OnSectionHeaderChanging(string value);
    partial void OnSectionHeaderChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnSectionTextChanging(string value);
    partial void OnSectionTextChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    #endregion
		
		public Form_Section()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this.OnSectionIDChanging(value);
					this.SendPropertyChanging();
					this._SectionID = value;
					this.SendPropertyChanged("SectionID");
					this.OnSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int")]
		public System.Nullable<int> FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionHeader", DbType="NVarChar(255)")]
		public string SectionHeader
		{
			get
			{
				return this._SectionHeader;
			}
			set
			{
				if ((this._SectionHeader != value))
				{
					this.OnSectionHeaderChanging(value);
					this.SendPropertyChanging();
					this._SectionHeader = value;
					this.SendPropertyChanged("SectionHeader");
					this.OnSectionHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SectionText
		{
			get
			{
				return this._SectionText;
			}
			set
			{
				if ((this._SectionText != value))
				{
					this.OnSectionTextChanging(value);
					this.SendPropertyChanging();
					this._SectionText = value;
					this.SendPropertyChanged("SectionText");
					this.OnSectionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Settings")]
	public partial class Form_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SiteID;
		
		private System.Nullable<int> _ObjectID;
		
		private System.Nullable<int> _SurveyID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _Frequency;
		
		private EntityRef<Object> _Object;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnObjectIDChanging(System.Nullable<int> value);
    partial void OnObjectIDChanged();
    partial void OnSurveyIDChanging(System.Nullable<int> value);
    partial void OnSurveyIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    #endregion
		
		public Form_Setting()
		{
			this._Object = default(EntityRef<Object>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyID", DbType="Int")]
		public System.Nullable<int> SurveyID
		{
			get
			{
				return this._SurveyID;
			}
			set
			{
				if ((this._SurveyID != value))
				{
					this.OnSurveyIDChanging(value);
					this.SendPropertyChanging();
					this._SurveyID = value;
					this.SendPropertyChanged("SurveyID");
					this.OnSurveyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Form_Setting", Storage="_Object", ThisKey="ObjectID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Form_Settings.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Form_Settings.Add(this);
						this._ObjectID = value.ObjectID;
					}
					else
					{
						this._ObjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Form_Setting", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Form_Settings.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Form_Settings.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Users")]
	public partial class Form_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserID;
		
		private string _ResponderID;
		
		private int _FormID;
		
		private System.Nullable<int> _PageIndex;
		
		private System.Nullable<System.DateTime> _RegisterDate;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<System.DateTime> _CompleteDate;
		
		private string _SectionsStarted;
		
		private string _SectionsCompleted;
		
		private string _Link;
		
		private string _Picture;
		
		private string _BluePrint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnResponderIDChanging(string value);
    partial void OnResponderIDChanged();
    partial void OnFormIDChanging(int value);
    partial void OnFormIDChanged();
    partial void OnPageIndexChanging(System.Nullable<int> value);
    partial void OnPageIndexChanged();
    partial void OnRegisterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterDateChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompleteDateChanged();
    partial void OnSectionsStartedChanging(string value);
    partial void OnSectionsStartedChanged();
    partial void OnSectionsCompletedChanging(string value);
    partial void OnSectionsCompletedChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnBluePrintChanging(string value);
    partial void OnBluePrintChanged();
    #endregion
		
		public Form_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(100)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponderID", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ResponderID
		{
			get
			{
				return this._ResponderID;
			}
			set
			{
				if ((this._ResponderID != value))
				{
					this.OnResponderIDChanging(value);
					this.SendPropertyChanging();
					this._ResponderID = value;
					this.SendPropertyChanged("ResponderID");
					this.OnResponderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int NOT NULL")]
		public int FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this.OnFormIDChanging(value);
					this.SendPropertyChanging();
					this._FormID = value;
					this.SendPropertyChanged("FormID");
					this.OnFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageIndex", DbType="Int")]
		public System.Nullable<int> PageIndex
		{
			get
			{
				return this._PageIndex;
			}
			set
			{
				if ((this._PageIndex != value))
				{
					this.OnPageIndexChanging(value);
					this.SendPropertyChanging();
					this._PageIndex = value;
					this.SendPropertyChanged("PageIndex");
					this.OnPageIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegisterDate
		{
			get
			{
				return this._RegisterDate;
			}
			set
			{
				if ((this._RegisterDate != value))
				{
					this.OnRegisterDateChanging(value);
					this.SendPropertyChanging();
					this._RegisterDate = value;
					this.SendPropertyChanged("RegisterDate");
					this.OnRegisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompleteDate
		{
			get
			{
				return this._CompleteDate;
			}
			set
			{
				if ((this._CompleteDate != value))
				{
					this.OnCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._CompleteDate = value;
					this.SendPropertyChanged("CompleteDate");
					this.OnCompleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionsStarted", DbType="NVarChar(MAX)")]
		public string SectionsStarted
		{
			get
			{
				return this._SectionsStarted;
			}
			set
			{
				if ((this._SectionsStarted != value))
				{
					this.OnSectionsStartedChanging(value);
					this.SendPropertyChanging();
					this._SectionsStarted = value;
					this.SendPropertyChanged("SectionsStarted");
					this.OnSectionsStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionsCompleted", DbType="NVarChar(MAX)")]
		public string SectionsCompleted
		{
			get
			{
				return this._SectionsCompleted;
			}
			set
			{
				if ((this._SectionsCompleted != value))
				{
					this.OnSectionsCompletedChanging(value);
					this.SendPropertyChanging();
					this._SectionsCompleted = value;
					this.SendPropertyChanged("SectionsCompleted");
					this.OnSectionsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(255)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(255)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BluePrint", DbType="NVarChar(255)")]
		public string BluePrint
		{
			get
			{
				return this._BluePrint;
			}
			set
			{
				if ((this._BluePrint != value))
				{
					this.OnBluePrintChanging(value);
					this.SendPropertyChanging();
					this._BluePrint = value;
					this.SendPropertyChanged("BluePrint");
					this.OnBluePrintChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum_AccessType")]
	public partial class Forum_AccessType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccessTypeID;
		
		private string _Type;
		
		private int _SiteID;
		
		private EntitySet<Forum_Forum> _Forum_Forums;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccessTypeIDChanging(int value);
    partial void OnAccessTypeIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Forum_AccessType()
		{
			this._Forum_Forums = new EntitySet<Forum_Forum>(new Action<Forum_Forum>(this.attach_Forum_Forums), new Action<Forum_Forum>(this.detach_Forum_Forums));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccessTypeID
		{
			get
			{
				return this._AccessTypeID;
			}
			set
			{
				if ((this._AccessTypeID != value))
				{
					this.OnAccessTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AccessTypeID = value;
					this.SendPropertyChanged("AccessTypeID");
					this.OnAccessTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_AccessType_Forum_Forum", Storage="_Forum_Forums", ThisKey="AccessTypeID", OtherKey="AccessTypeID")]
		public EntitySet<Forum_Forum> Forum_Forums
		{
			get
			{
				return this._Forum_Forums;
			}
			set
			{
				this._Forum_Forums.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Forum_Forums(Forum_Forum entity)
		{
			this.SendPropertyChanging();
			entity.Forum_AccessType = this;
		}
		
		private void detach_Forum_Forums(Forum_Forum entity)
		{
			this.SendPropertyChanging();
			entity.Forum_AccessType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum_Forums")]
	public partial class Forum_Forum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumID;
		
		private string _Description;
		
		private System.DateTime _Date;
		
		private string _Title;
		
		private string _ObjectKey;
		
		private int _AccessTypeID;
		
		private System.Nullable<int> _SiteID;
		
		private EntitySet<Forum_UserGroups_Forum> _Forum_UserGroups_Forums;
		
		private EntityRef<Forum_AccessType> _Forum_AccessType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnObjectKeyChanging(string value);
    partial void OnObjectKeyChanged();
    partial void OnAccessTypeIDChanging(int value);
    partial void OnAccessTypeIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Forum_Forum()
		{
			this._Forum_UserGroups_Forums = new EntitySet<Forum_UserGroups_Forum>(new Action<Forum_UserGroups_Forum>(this.attach_Forum_UserGroups_Forums), new Action<Forum_UserGroups_Forum>(this.detach_Forum_UserGroups_Forums));
			this._Forum_AccessType = default(EntityRef<Forum_AccessType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this.OnObjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ObjectKey = value;
					this.SendPropertyChanged("ObjectKey");
					this.OnObjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessTypeID", DbType="Int NOT NULL")]
		public int AccessTypeID
		{
			get
			{
				return this._AccessTypeID;
			}
			set
			{
				if ((this._AccessTypeID != value))
				{
					if (this._Forum_AccessType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AccessTypeID = value;
					this.SendPropertyChanged("AccessTypeID");
					this.OnAccessTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_Forum_Forum_UserGroups_Forum", Storage="_Forum_UserGroups_Forums", ThisKey="ForumID", OtherKey="ForumID")]
		public EntitySet<Forum_UserGroups_Forum> Forum_UserGroups_Forums
		{
			get
			{
				return this._Forum_UserGroups_Forums;
			}
			set
			{
				this._Forum_UserGroups_Forums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_AccessType_Forum_Forum", Storage="_Forum_AccessType", ThisKey="AccessTypeID", OtherKey="AccessTypeID", IsForeignKey=true)]
		public Forum_AccessType Forum_AccessType
		{
			get
			{
				return this._Forum_AccessType.Entity;
			}
			set
			{
				Forum_AccessType previousValue = this._Forum_AccessType.Entity;
				if (((previousValue != value) 
							|| (this._Forum_AccessType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Forum_AccessType.Entity = null;
						previousValue.Forum_Forums.Remove(this);
					}
					this._Forum_AccessType.Entity = value;
					if ((value != null))
					{
						value.Forum_Forums.Add(this);
						this._AccessTypeID = value.AccessTypeID;
					}
					else
					{
						this._AccessTypeID = default(int);
					}
					this.SendPropertyChanged("Forum_AccessType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Forum_UserGroups_Forums(Forum_UserGroups_Forum entity)
		{
			this.SendPropertyChanging();
			entity.Forum_Forum = this;
		}
		
		private void detach_Forum_UserGroups_Forums(Forum_UserGroups_Forum entity)
		{
			this.SendPropertyChanging();
			entity.Forum_Forum = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum_Messages")]
	public partial class Forum_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private int _ThreadID;
		
		private System.Nullable<int> _UserID;
		
		private string _PublicUserName;
		
		private string _Title;
		
		private string _MessageText;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _ObjectKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnThreadIDChanging(int value);
    partial void OnThreadIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPublicUserNameChanging(string value);
    partial void OnPublicUserNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnObjectKeyChanging(string value);
    partial void OnObjectKeyChanged();
    #endregion
		
		public Forum_Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadID", DbType="Int NOT NULL")]
		public int ThreadID
		{
			get
			{
				return this._ThreadID;
			}
			set
			{
				if ((this._ThreadID != value))
				{
					this.OnThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ThreadID = value;
					this.SendPropertyChanged("ThreadID");
					this.OnThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicUserName", DbType="VarChar(50)")]
		public string PublicUserName
		{
			get
			{
				return this._PublicUserName;
			}
			set
			{
				if ((this._PublicUserName != value))
				{
					this.OnPublicUserNameChanging(value);
					this.SendPropertyChanging();
					this._PublicUserName = value;
					this.SendPropertyChanged("PublicUserName");
					this.OnPublicUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(15)")]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this.OnObjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ObjectKey = value;
					this.SendPropertyChanged("ObjectKey");
					this.OnObjectKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum_Replies")]
	public partial class Forum_Reply
	{
		
		private System.Nullable<int> _MessageID;
		
		private System.Nullable<int> _ReplyMessageID;
		
		public Forum_Reply()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int")]
		public System.Nullable<int> MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this._MessageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyMessageID", DbType="Int")]
		public System.Nullable<int> ReplyMessageID
		{
			get
			{
				return this._ReplyMessageID;
			}
			set
			{
				if ((this._ReplyMessageID != value))
				{
					this._ReplyMessageID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum_Threads")]
	public partial class Forum_Thread : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThreadID;
		
		private int _ObjectID;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _ObjectKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThreadIDChanging(int value);
    partial void OnThreadIDChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnObjectKeyChanging(string value);
    partial void OnObjectKeyChanged();
    #endregion
		
		public Forum_Thread()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThreadID
		{
			get
			{
				return this._ThreadID;
			}
			set
			{
				if ((this._ThreadID != value))
				{
					this.OnThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ThreadID = value;
					this.SendPropertyChanged("ThreadID");
					this.OnThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(15)")]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this.OnObjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ObjectKey = value;
					this.SendPropertyChanged("ObjectKey");
					this.OnObjectKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum_UserGroups")]
	public partial class Forum_UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserGroupID;
		
		private string _Name;
		
		private System.DateTime _Date;
		
		private int _SiteID;
		
		private EntityRef<Forum_UserGroups_Forum> _Forum_UserGroups_Forum;
		
		private EntitySet<Forum_Users_Group> _Forum_Users_Groups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserGroupIDChanging(int value);
    partial void OnUserGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Forum_UserGroup()
		{
			this._Forum_UserGroups_Forum = default(EntityRef<Forum_UserGroups_Forum>);
			this._Forum_Users_Groups = new EntitySet<Forum_Users_Group>(new Action<Forum_Users_Group>(this.attach_Forum_Users_Groups), new Action<Forum_Users_Group>(this.detach_Forum_Users_Groups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserGroupID
		{
			get
			{
				return this._UserGroupID;
			}
			set
			{
				if ((this._UserGroupID != value))
				{
					this.OnUserGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserGroupID = value;
					this.SendPropertyChanged("UserGroupID");
					this.OnUserGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_UserGroup_Forum_UserGroups_Forum", Storage="_Forum_UserGroups_Forum", ThisKey="UserGroupID", OtherKey="UserGroupID", IsUnique=true, IsForeignKey=false)]
		public Forum_UserGroups_Forum Forum_UserGroups_Forum
		{
			get
			{
				return this._Forum_UserGroups_Forum.Entity;
			}
			set
			{
				Forum_UserGroups_Forum previousValue = this._Forum_UserGroups_Forum.Entity;
				if (((previousValue != value) 
							|| (this._Forum_UserGroups_Forum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Forum_UserGroups_Forum.Entity = null;
						previousValue.Forum_UserGroup = null;
					}
					this._Forum_UserGroups_Forum.Entity = value;
					if ((value != null))
					{
						value.Forum_UserGroup = this;
					}
					this.SendPropertyChanged("Forum_UserGroups_Forum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_UserGroup_Forum_Users_Group", Storage="_Forum_Users_Groups", ThisKey="UserGroupID", OtherKey="UserGroupID")]
		public EntitySet<Forum_Users_Group> Forum_Users_Groups
		{
			get
			{
				return this._Forum_Users_Groups;
			}
			set
			{
				this._Forum_Users_Groups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Forum_Users_Groups(Forum_Users_Group entity)
		{
			this.SendPropertyChanging();
			entity.Forum_UserGroup = this;
		}
		
		private void detach_Forum_Users_Groups(Forum_Users_Group entity)
		{
			this.SendPropertyChanging();
			entity.Forum_UserGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum_UserGroups_Forums")]
	public partial class Forum_UserGroups_Forum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserGroupID;
		
		private int _ForumID;
		
		private EntityRef<Forum_Forum> _Forum_Forum;
		
		private EntityRef<Forum_UserGroup> _Forum_UserGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserGroupIDChanging(int value);
    partial void OnUserGroupIDChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    #endregion
		
		public Forum_UserGroups_Forum()
		{
			this._Forum_Forum = default(EntityRef<Forum_Forum>);
			this._Forum_UserGroup = default(EntityRef<Forum_UserGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserGroupID
		{
			get
			{
				return this._UserGroupID;
			}
			set
			{
				if ((this._UserGroupID != value))
				{
					if (this._Forum_UserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserGroupID = value;
					this.SendPropertyChanged("UserGroupID");
					this.OnUserGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL")]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					if (this._Forum_Forum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_Forum_Forum_UserGroups_Forum", Storage="_Forum_Forum", ThisKey="ForumID", OtherKey="ForumID", IsForeignKey=true)]
		public Forum_Forum Forum_Forum
		{
			get
			{
				return this._Forum_Forum.Entity;
			}
			set
			{
				Forum_Forum previousValue = this._Forum_Forum.Entity;
				if (((previousValue != value) 
							|| (this._Forum_Forum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Forum_Forum.Entity = null;
						previousValue.Forum_UserGroups_Forums.Remove(this);
					}
					this._Forum_Forum.Entity = value;
					if ((value != null))
					{
						value.Forum_UserGroups_Forums.Add(this);
						this._ForumID = value.ForumID;
					}
					else
					{
						this._ForumID = default(int);
					}
					this.SendPropertyChanged("Forum_Forum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_UserGroup_Forum_UserGroups_Forum", Storage="_Forum_UserGroup", ThisKey="UserGroupID", OtherKey="UserGroupID", IsForeignKey=true)]
		public Forum_UserGroup Forum_UserGroup
		{
			get
			{
				return this._Forum_UserGroup.Entity;
			}
			set
			{
				Forum_UserGroup previousValue = this._Forum_UserGroup.Entity;
				if (((previousValue != value) 
							|| (this._Forum_UserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Forum_UserGroup.Entity = null;
						previousValue.Forum_UserGroups_Forum = null;
					}
					this._Forum_UserGroup.Entity = value;
					if ((value != null))
					{
						value.Forum_UserGroups_Forum = this;
						this._UserGroupID = value.UserGroupID;
					}
					else
					{
						this._UserGroupID = default(int);
					}
					this.SendPropertyChanged("Forum_UserGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum_Users")]
	public partial class Forum_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private string _Presentation;
		
		private string _Email;
		
		private string _URL;
		
		private System.Nullable<System.DateTime> _Birth_date;
		
		private string _Pwd;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _SiteID;
		
		private EntityRef<Forum_Users_Group> _Forum_Users_Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPresentationChanging(string value);
    partial void OnPresentationChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnBirth_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirth_dateChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Forum_User()
		{
			this._Forum_Users_Group = default(EntityRef<Forum_Users_Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NChar(10)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presentation", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Presentation
		{
			get
			{
				return this._Presentation;
			}
			set
			{
				if ((this._Presentation != value))
				{
					this.OnPresentationChanging(value);
					this.SendPropertyChanging();
					this._Presentation = value;
					this.SendPropertyChanged("Presentation");
					this.OnPresentationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NChar(255)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birth_date
		{
			get
			{
				return this._Birth_date;
			}
			set
			{
				if ((this._Birth_date != value))
				{
					this.OnBirth_dateChanging(value);
					this.SendPropertyChanging();
					this._Birth_date = value;
					this.SendPropertyChanged("Birth_date");
					this.OnBirth_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NChar(8)")]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this.OnPwdChanging(value);
					this.SendPropertyChanging();
					this._Pwd = value;
					this.SendPropertyChanged("Pwd");
					this.OnPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_User_Forum_Users_Group", Storage="_Forum_Users_Group", ThisKey="UserID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public Forum_Users_Group Forum_Users_Group
		{
			get
			{
				return this._Forum_Users_Group.Entity;
			}
			set
			{
				Forum_Users_Group previousValue = this._Forum_Users_Group.Entity;
				if (((previousValue != value) 
							|| (this._Forum_Users_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Forum_Users_Group.Entity = null;
						previousValue.Forum_User = null;
					}
					this._Forum_Users_Group.Entity = value;
					if ((value != null))
					{
						value.Forum_User = this;
					}
					this.SendPropertyChanged("Forum_Users_Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum_Users_Groups")]
	public partial class Forum_Users_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _UserGroupID;
		
		private EntityRef<Forum_UserGroup> _Forum_UserGroup;
		
		private EntityRef<Forum_User> _Forum_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserGroupIDChanging(int value);
    partial void OnUserGroupIDChanged();
    #endregion
		
		public Forum_Users_Group()
		{
			this._Forum_UserGroup = default(EntityRef<Forum_UserGroup>);
			this._Forum_User = default(EntityRef<Forum_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Forum_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupID", DbType="Int NOT NULL")]
		public int UserGroupID
		{
			get
			{
				return this._UserGroupID;
			}
			set
			{
				if ((this._UserGroupID != value))
				{
					if (this._Forum_UserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserGroupIDChanging(value);
					this.SendPropertyChanging();
					this._UserGroupID = value;
					this.SendPropertyChanged("UserGroupID");
					this.OnUserGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_UserGroup_Forum_Users_Group", Storage="_Forum_UserGroup", ThisKey="UserGroupID", OtherKey="UserGroupID", IsForeignKey=true)]
		public Forum_UserGroup Forum_UserGroup
		{
			get
			{
				return this._Forum_UserGroup.Entity;
			}
			set
			{
				Forum_UserGroup previousValue = this._Forum_UserGroup.Entity;
				if (((previousValue != value) 
							|| (this._Forum_UserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Forum_UserGroup.Entity = null;
						previousValue.Forum_Users_Groups.Remove(this);
					}
					this._Forum_UserGroup.Entity = value;
					if ((value != null))
					{
						value.Forum_Users_Groups.Add(this);
						this._UserGroupID = value.UserGroupID;
					}
					else
					{
						this._UserGroupID = default(int);
					}
					this.SendPropertyChanged("Forum_UserGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_User_Forum_Users_Group", Storage="_Forum_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public Forum_User Forum_User
		{
			get
			{
				return this._Forum_User.Entity;
			}
			set
			{
				Forum_User previousValue = this._Forum_User.Entity;
				if (((previousValue != value) 
							|| (this._Forum_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Forum_User.Entity = null;
						previousValue.Forum_Users_Group = null;
					}
					this._Forum_User.Entity = value;
					if ((value != null))
					{
						value.Forum_Users_Group = this;
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("Forum_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fraimit_Positions")]
	public partial class Fraimit_Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _unitID;
		
		private string _posX;
		
		private string _posY;
		
		private System.Nullable<System.DateTime> _positionTime;
		
		private bool _isFetched;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnunitIDChanging(int value);
    partial void OnunitIDChanged();
    partial void OnposXChanging(string value);
    partial void OnposXChanged();
    partial void OnposYChanging(string value);
    partial void OnposYChanged();
    partial void OnpositionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnpositionTimeChanged();
    partial void OnisFetchedChanging(bool value);
    partial void OnisFetchedChanged();
    #endregion
		
		public Fraimit_Position()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", DbType="Int NOT NULL")]
		public int unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					this.OnunitIDChanging(value);
					this.SendPropertyChanging();
					this._unitID = value;
					this.SendPropertyChanged("unitID");
					this.OnunitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posX", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string posX
		{
			get
			{
				return this._posX;
			}
			set
			{
				if ((this._posX != value))
				{
					this.OnposXChanging(value);
					this.SendPropertyChanging();
					this._posX = value;
					this.SendPropertyChanged("posX");
					this.OnposXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string posY
		{
			get
			{
				return this._posY;
			}
			set
			{
				if ((this._posY != value))
				{
					this.OnposYChanging(value);
					this.SendPropertyChanging();
					this._posY = value;
					this.SendPropertyChanged("posY");
					this.OnposYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_positionTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> positionTime
		{
			get
			{
				return this._positionTime;
			}
			set
			{
				if ((this._positionTime != value))
				{
					this.OnpositionTimeChanging(value);
					this.SendPropertyChanging();
					this._positionTime = value;
					this.SendPropertyChanged("positionTime");
					this.OnpositionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFetched", DbType="Bit NOT NULL")]
		public bool isFetched
		{
			get
			{
				return this._isFetched;
			}
			set
			{
				if ((this._isFetched != value))
				{
					this.OnisFetchedChanging(value);
					this.SendPropertyChanging();
					this._isFetched = value;
					this.SendPropertyChanged("isFetched");
					this.OnisFetchedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fraimit_Units")]
	public partial class Fraimit_Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _UserId;
		
		private int _UnitTypeID;
		
		private string _UnitName;
		
		private string _UnitImei;
		
		private string _UnitNumber;
		
		private string _ContactNumber1;
		
		private string _ContactNumber2;
		
		private string _ContactNumber3;
		
		private System.Nullable<int> _SerialNumber;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnUnitTypeIDChanging(int value);
    partial void OnUnitTypeIDChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnUnitImeiChanging(string value);
    partial void OnUnitImeiChanged();
    partial void OnUnitNumberChanging(string value);
    partial void OnUnitNumberChanged();
    partial void OnContactNumber1Changing(string value);
    partial void OnContactNumber1Changed();
    partial void OnContactNumber2Changing(string value);
    partial void OnContactNumber2Changed();
    partial void OnContactNumber3Changing(string value);
    partial void OnContactNumber3Changed();
    partial void OnSerialNumberChanging(System.Nullable<int> value);
    partial void OnSerialNumberChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    #endregion
		
		public Fraimit_Unit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeID", DbType="Int NOT NULL")]
		public int UnitTypeID
		{
			get
			{
				return this._UnitTypeID;
			}
			set
			{
				if ((this._UnitTypeID != value))
				{
					this.OnUnitTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeID = value;
					this.SendPropertyChanged("UnitTypeID");
					this.OnUnitTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitImei", DbType="NVarChar(50)")]
		public string UnitImei
		{
			get
			{
				return this._UnitImei;
			}
			set
			{
				if ((this._UnitImei != value))
				{
					this.OnUnitImeiChanging(value);
					this.SendPropertyChanging();
					this._UnitImei = value;
					this.SendPropertyChanged("UnitImei");
					this.OnUnitImeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitNumber", DbType="NVarChar(50)")]
		public string UnitNumber
		{
			get
			{
				return this._UnitNumber;
			}
			set
			{
				if ((this._UnitNumber != value))
				{
					this.OnUnitNumberChanging(value);
					this.SendPropertyChanging();
					this._UnitNumber = value;
					this.SendPropertyChanged("UnitNumber");
					this.OnUnitNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber1", DbType="NVarChar(50)")]
		public string ContactNumber1
		{
			get
			{
				return this._ContactNumber1;
			}
			set
			{
				if ((this._ContactNumber1 != value))
				{
					this.OnContactNumber1Changing(value);
					this.SendPropertyChanging();
					this._ContactNumber1 = value;
					this.SendPropertyChanged("ContactNumber1");
					this.OnContactNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber2", DbType="NVarChar(50)")]
		public string ContactNumber2
		{
			get
			{
				return this._ContactNumber2;
			}
			set
			{
				if ((this._ContactNumber2 != value))
				{
					this.OnContactNumber2Changing(value);
					this.SendPropertyChanging();
					this._ContactNumber2 = value;
					this.SendPropertyChanged("ContactNumber2");
					this.OnContactNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber3", DbType="NVarChar(50)")]
		public string ContactNumber3
		{
			get
			{
				return this._ContactNumber3;
			}
			set
			{
				if ((this._ContactNumber3 != value))
				{
					this.OnContactNumber3Changing(value);
					this.SendPropertyChanging();
					this._ContactNumber3 = value;
					this.SendPropertyChanged("ContactNumber3");
					this.OnContactNumber3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int")]
		public System.Nullable<int> SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fraimit_UnitTypes")]
	public partial class Fraimit_UnitType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UnitName;
		
		private string _UnitCommand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnUnitCommandChanging(string value);
    partial void OnUnitCommandChanged();
    #endregion
		
		public Fraimit_UnitType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCommand", DbType="NVarChar(200)")]
		public string UnitCommand
		{
			get
			{
				return this._UnitCommand;
			}
			set
			{
				if ((this._UnitCommand != value))
				{
					this.OnUnitCommandChanging(value);
					this.SendPropertyChanging();
					this._UnitCommand = value;
					this.SendPropertyChanged("UnitCommand");
					this.OnUnitCommandChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fraimit_Users")]
	public partial class Fraimit_User
	{
		
		private int _ID;
		
		private string _AdminName;
		
		private string _UserID;
		
		private System.DateTime _RegisterDate;
		
		public Fraimit_User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminName
		{
			get
			{
				return this._AdminName;
			}
			set
			{
				if ((this._AdminName != value))
				{
					this._AdminName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegisterDate
		{
			get
			{
				return this._RegisterDate;
			}
			set
			{
				if ((this._RegisterDate != value))
				{
					this._RegisterDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Franklin_avtal")]
	public partial class Franklin_avtal
	{
		
		private int _id;
		
		private string _avtalstext;
		
		public Franklin_avtal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avtalstext", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string avtalstext
		{
			get
			{
				return this._avtalstext;
			}
			set
			{
				if ((this._avtalstext != value))
				{
					this._avtalstext = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalFashion_Favorites")]
	public partial class GlobalFashion_Favorite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private int _FavoriteType_FK;
		
		private string _FavoriteId;
		
		private EntityRef<GlobalFashion_FavoriteType> _GlobalFashion_FavoriteType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnFavoriteType_FKChanging(int value);
    partial void OnFavoriteType_FKChanged();
    partial void OnFavoriteIdChanging(string value);
    partial void OnFavoriteIdChanged();
    #endregion
		
		public GlobalFashion_Favorite()
		{
			this._GlobalFashion_FavoriteType = default(EntityRef<GlobalFashion_FavoriteType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteType_FK", DbType="Int NOT NULL")]
		public int FavoriteType_FK
		{
			get
			{
				return this._FavoriteType_FK;
			}
			set
			{
				if ((this._FavoriteType_FK != value))
				{
					if (this._GlobalFashion_FavoriteType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFavoriteType_FKChanging(value);
					this.SendPropertyChanging();
					this._FavoriteType_FK = value;
					this.SendPropertyChanged("FavoriteType_FK");
					this.OnFavoriteType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FavoriteId
		{
			get
			{
				return this._FavoriteId;
			}
			set
			{
				if ((this._FavoriteId != value))
				{
					this.OnFavoriteIdChanging(value);
					this.SendPropertyChanging();
					this._FavoriteId = value;
					this.SendPropertyChanged("FavoriteId");
					this.OnFavoriteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GlobalFashion_FavoriteType_GlobalFashion_Favorite", Storage="_GlobalFashion_FavoriteType", ThisKey="FavoriteType_FK", OtherKey="Id", IsForeignKey=true)]
		public GlobalFashion_FavoriteType GlobalFashion_FavoriteType
		{
			get
			{
				return this._GlobalFashion_FavoriteType.Entity;
			}
			set
			{
				GlobalFashion_FavoriteType previousValue = this._GlobalFashion_FavoriteType.Entity;
				if (((previousValue != value) 
							|| (this._GlobalFashion_FavoriteType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GlobalFashion_FavoriteType.Entity = null;
						previousValue.GlobalFashion_Favorites.Remove(this);
					}
					this._GlobalFashion_FavoriteType.Entity = value;
					if ((value != null))
					{
						value.GlobalFashion_Favorites.Add(this);
						this._FavoriteType_FK = value.Id;
					}
					else
					{
						this._FavoriteType_FK = default(int);
					}
					this.SendPropertyChanged("GlobalFashion_FavoriteType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalFashion_FavoriteType")]
	public partial class GlobalFashion_FavoriteType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<GlobalFashion_Favorite> _GlobalFashion_Favorites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public GlobalFashion_FavoriteType()
		{
			this._GlobalFashion_Favorites = new EntitySet<GlobalFashion_Favorite>(new Action<GlobalFashion_Favorite>(this.attach_GlobalFashion_Favorites), new Action<GlobalFashion_Favorite>(this.detach_GlobalFashion_Favorites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GlobalFashion_FavoriteType_GlobalFashion_Favorite", Storage="_GlobalFashion_Favorites", ThisKey="Id", OtherKey="FavoriteType_FK")]
		public EntitySet<GlobalFashion_Favorite> GlobalFashion_Favorites
		{
			get
			{
				return this._GlobalFashion_Favorites;
			}
			set
			{
				this._GlobalFashion_Favorites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GlobalFashion_Favorites(GlobalFashion_Favorite entity)
		{
			this.SendPropertyChanging();
			entity.GlobalFashion_FavoriteType = this;
		}
		
		private void detach_GlobalFashion_Favorites(GlobalFashion_Favorite entity)
		{
			this.SendPropertyChanging();
			entity.GlobalFashion_FavoriteType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Globalrefund_User_Addresses")]
	public partial class Globalrefund_User_Address
	{
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Company;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _StreetAddress1;
		
		private string _StreetAddress2;
		
		private string _Zip;
		
		private string _City;
		
		private int _Country;
		
		private bool _UseAsBilling;
		
		private bool _UseAsShipping;
		
		private System.Nullable<bool> _DefaultAddress;
		
		private string _Email;
		
		private string _Orgno;
		
		public Globalrefund_User_Address()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StreetAddress1
		{
			get
			{
				return this._StreetAddress1;
			}
			set
			{
				if ((this._StreetAddress1 != value))
				{
					this._StreetAddress1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress2", DbType="NVarChar(255)")]
		public string StreetAddress2
		{
			get
			{
				return this._StreetAddress2;
			}
			set
			{
				if ((this._StreetAddress2 != value))
				{
					this._StreetAddress2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="Int NOT NULL")]
		public int Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAsBilling", DbType="Bit NOT NULL")]
		public bool UseAsBilling
		{
			get
			{
				return this._UseAsBilling;
			}
			set
			{
				if ((this._UseAsBilling != value))
				{
					this._UseAsBilling = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAsShipping", DbType="Bit NOT NULL")]
		public bool UseAsShipping
		{
			get
			{
				return this._UseAsShipping;
			}
			set
			{
				if ((this._UseAsShipping != value))
				{
					this._UseAsShipping = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAddress", DbType="Bit")]
		public System.Nullable<bool> DefaultAddress
		{
			get
			{
				return this._DefaultAddress;
			}
			set
			{
				if ((this._DefaultAddress != value))
				{
					this._DefaultAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orgno", DbType="NVarChar(50)")]
		public string Orgno
		{
			get
			{
				return this._Orgno;
			}
			set
			{
				if ((this._Orgno != value))
				{
					this._Orgno = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Group]")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private string _Name;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Group()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_User", Storage="_Users", ThisKey="GroupID", OtherKey="GroupID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Group1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private int _SiteID;
		
		private EntitySet<GroupSubscriber> _GroupSubscribers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Group1()
		{
			this._GroupSubscribers = new EntitySet<GroupSubscriber>(new Action<GroupSubscriber>(this.attach_GroupSubscribers), new Action<GroupSubscriber>(this.detach_GroupSubscribers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group1_GroupSubscriber", Storage="_GroupSubscribers", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<GroupSubscriber> GroupSubscribers
		{
			get
			{
				return this._GroupSubscribers;
			}
			set
			{
				this._GroupSubscribers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupSubscribers(GroupSubscriber entity)
		{
			this.SendPropertyChanging();
			entity.Group1 = this;
		}
		
		private void detach_GroupSubscribers(GroupSubscriber entity)
		{
			this.SendPropertyChanging();
			entity.Group1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupSubscriber")]
	public partial class GroupSubscriber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private int _SubscriberID;
		
		private EntityRef<Group1> _Group1;
		
		private EntityRef<Subscriber> _Subscriber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnSubscriberIDChanging(int value);
    partial void OnSubscriberIDChanged();
    #endregion
		
		public GroupSubscriber()
		{
			this._Group1 = default(EntityRef<Group1>);
			this._Subscriber = default(EntityRef<Subscriber>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._Group1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubscriberID
		{
			get
			{
				return this._SubscriberID;
			}
			set
			{
				if ((this._SubscriberID != value))
				{
					if (this._Subscriber.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriberIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriberID = value;
					this.SendPropertyChanged("SubscriberID");
					this.OnSubscriberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group1_GroupSubscriber", Storage="_Group1", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public Group1 Group1
		{
			get
			{
				return this._Group1.Entity;
			}
			set
			{
				Group1 previousValue = this._Group1.Entity;
				if (((previousValue != value) 
							|| (this._Group1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group1.Entity = null;
						previousValue.GroupSubscribers.Remove(this);
					}
					this._Group1.Entity = value;
					if ((value != null))
					{
						value.GroupSubscribers.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("Group1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriber_GroupSubscriber", Storage="_Subscriber", ThisKey="SubscriberID", OtherKey="ID", IsForeignKey=true)]
		public Subscriber Subscriber
		{
			get
			{
				return this._Subscriber.Entity;
			}
			set
			{
				Subscriber previousValue = this._Subscriber.Entity;
				if (((previousValue != value) 
							|| (this._Subscriber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscriber.Entity = null;
						previousValue.GroupSubscribers.Remove(this);
					}
					this._Subscriber.Entity = value;
					if ((value != null))
					{
						value.GroupSubscribers.Add(this);
						this._SubscriberID = value.ID;
					}
					else
					{
						this._SubscriberID = default(int);
					}
					this.SendPropertyChanged("Subscriber");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GS_BookingPublicCategory")]
	public partial class GS_BookingPublicCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WebSite;
		
		private string _Name;
		
		private EntitySet<GS_BookingPublicItem> _GS_BookingPublicItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public GS_BookingPublicCategory()
		{
			this._GS_BookingPublicItems = new EntitySet<GS_BookingPublicItem>(new Action<GS_BookingPublicItem>(this.attach_GS_BookingPublicItems), new Action<GS_BookingPublicItem>(this.detach_GS_BookingPublicItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(10)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GS_BookingPublicCategory_GS_BookingPublicItem", Storage="_GS_BookingPublicItems", ThisKey="ID", OtherKey="BookingPublicCategoryID")]
		public EntitySet<GS_BookingPublicItem> GS_BookingPublicItems
		{
			get
			{
				return this._GS_BookingPublicItems;
			}
			set
			{
				this._GS_BookingPublicItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GS_BookingPublicItems(GS_BookingPublicItem entity)
		{
			this.SendPropertyChanging();
			entity.GS_BookingPublicCategory = this;
		}
		
		private void detach_GS_BookingPublicItems(GS_BookingPublicItem entity)
		{
			this.SendPropertyChanging();
			entity.GS_BookingPublicCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GS_BookingPublicItems")]
	public partial class GS_BookingPublicItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WebSite;
		
		private int _BookingPublicCategoryID;
		
		private string _Name;
		
		private System.Nullable<int> _Duration;
		
		private System.Nullable<int> _DurationSpecial;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<System.DateTime> _created;
		
		private EntitySet<Booking_GSPublicItems_Resource> _Booking_GSPublicItems_Resources;
		
		private EntitySet<Booking_Object_GSPublicItem> _Booking_Object_GSPublicItems;
		
		private EntitySet<GS_BookingUserData> _GS_BookingUserDatas;
		
		private EntityRef<GS_BookingPublicCategory> _GS_BookingPublicCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnBookingPublicCategoryIDChanging(int value);
    partial void OnBookingPublicCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnDurationSpecialChanging(System.Nullable<int> value);
    partial void OnDurationSpecialChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    #endregion
		
		public GS_BookingPublicItem()
		{
			this._Booking_GSPublicItems_Resources = new EntitySet<Booking_GSPublicItems_Resource>(new Action<Booking_GSPublicItems_Resource>(this.attach_Booking_GSPublicItems_Resources), new Action<Booking_GSPublicItems_Resource>(this.detach_Booking_GSPublicItems_Resources));
			this._Booking_Object_GSPublicItems = new EntitySet<Booking_Object_GSPublicItem>(new Action<Booking_Object_GSPublicItem>(this.attach_Booking_Object_GSPublicItems), new Action<Booking_Object_GSPublicItem>(this.detach_Booking_Object_GSPublicItems));
			this._GS_BookingUserDatas = new EntitySet<GS_BookingUserData>(new Action<GS_BookingUserData>(this.attach_GS_BookingUserDatas), new Action<GS_BookingUserData>(this.detach_GS_BookingUserDatas));
			this._GS_BookingPublicCategory = default(EntityRef<GS_BookingPublicCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(10)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingPublicCategoryID", DbType="Int NOT NULL")]
		public int BookingPublicCategoryID
		{
			get
			{
				return this._BookingPublicCategoryID;
			}
			set
			{
				if ((this._BookingPublicCategoryID != value))
				{
					if (this._GS_BookingPublicCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingPublicCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._BookingPublicCategoryID = value;
					this.SendPropertyChanged("BookingPublicCategoryID");
					this.OnBookingPublicCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationSpecial", DbType="Int")]
		public System.Nullable<int> DurationSpecial
		{
			get
			{
				return this._DurationSpecial;
			}
			set
			{
				if ((this._DurationSpecial != value))
				{
					this.OnDurationSpecialChanging(value);
					this.SendPropertyChanging();
					this._DurationSpecial = value;
					this.SendPropertyChanged("DurationSpecial");
					this.OnDurationSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GS_BookingPublicItem_Booking_GSPublicItems_Resource", Storage="_Booking_GSPublicItems_Resources", ThisKey="ID", OtherKey="GSPublicItemsID")]
		public EntitySet<Booking_GSPublicItems_Resource> Booking_GSPublicItems_Resources
		{
			get
			{
				return this._Booking_GSPublicItems_Resources;
			}
			set
			{
				this._Booking_GSPublicItems_Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GS_BookingPublicItem_Booking_Object_GSPublicItem", Storage="_Booking_Object_GSPublicItems", ThisKey="ID", OtherKey="GS_PublicItemsID")]
		public EntitySet<Booking_Object_GSPublicItem> Booking_Object_GSPublicItems
		{
			get
			{
				return this._Booking_Object_GSPublicItems;
			}
			set
			{
				this._Booking_Object_GSPublicItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GS_BookingPublicItem_GS_BookingUserData", Storage="_GS_BookingUserDatas", ThisKey="ID", OtherKey="GS_BookingPublicItemsID")]
		public EntitySet<GS_BookingUserData> GS_BookingUserDatas
		{
			get
			{
				return this._GS_BookingUserDatas;
			}
			set
			{
				this._GS_BookingUserDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GS_BookingPublicCategory_GS_BookingPublicItem", Storage="_GS_BookingPublicCategory", ThisKey="BookingPublicCategoryID", OtherKey="ID", IsForeignKey=true)]
		public GS_BookingPublicCategory GS_BookingPublicCategory
		{
			get
			{
				return this._GS_BookingPublicCategory.Entity;
			}
			set
			{
				GS_BookingPublicCategory previousValue = this._GS_BookingPublicCategory.Entity;
				if (((previousValue != value) 
							|| (this._GS_BookingPublicCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GS_BookingPublicCategory.Entity = null;
						previousValue.GS_BookingPublicItems.Remove(this);
					}
					this._GS_BookingPublicCategory.Entity = value;
					if ((value != null))
					{
						value.GS_BookingPublicItems.Add(this);
						this._BookingPublicCategoryID = value.ID;
					}
					else
					{
						this._BookingPublicCategoryID = default(int);
					}
					this.SendPropertyChanged("GS_BookingPublicCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Booking_GSPublicItems_Resources(Booking_GSPublicItems_Resource entity)
		{
			this.SendPropertyChanging();
			entity.GS_BookingPublicItem = this;
		}
		
		private void detach_Booking_GSPublicItems_Resources(Booking_GSPublicItems_Resource entity)
		{
			this.SendPropertyChanging();
			entity.GS_BookingPublicItem = null;
		}
		
		private void attach_Booking_Object_GSPublicItems(Booking_Object_GSPublicItem entity)
		{
			this.SendPropertyChanging();
			entity.GS_BookingPublicItem = this;
		}
		
		private void detach_Booking_Object_GSPublicItems(Booking_Object_GSPublicItem entity)
		{
			this.SendPropertyChanging();
			entity.GS_BookingPublicItem = null;
		}
		
		private void attach_GS_BookingUserDatas(GS_BookingUserData entity)
		{
			this.SendPropertyChanging();
			entity.GS_BookingPublicItem = this;
		}
		
		private void detach_GS_BookingUserDatas(GS_BookingUserData entity)
		{
			this.SendPropertyChanging();
			entity.GS_BookingPublicItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GS_BookingUserData")]
	public partial class GS_BookingUserData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BookingWebUserEmail;
		
		private int _GS_BookingPublicItemsID;
		
		private System.Nullable<System.DateTime> _Created;
		
		private EntityRef<GS_BookingPublicItem> _GS_BookingPublicItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBookingWebUserEmailChanging(string value);
    partial void OnBookingWebUserEmailChanged();
    partial void OnGS_BookingPublicItemsIDChanging(int value);
    partial void OnGS_BookingPublicItemsIDChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    #endregion
		
		public GS_BookingUserData()
		{
			this._GS_BookingPublicItem = default(EntityRef<GS_BookingPublicItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingWebUserEmail", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string BookingWebUserEmail
		{
			get
			{
				return this._BookingWebUserEmail;
			}
			set
			{
				if ((this._BookingWebUserEmail != value))
				{
					this.OnBookingWebUserEmailChanging(value);
					this.SendPropertyChanging();
					this._BookingWebUserEmail = value;
					this.SendPropertyChanged("BookingWebUserEmail");
					this.OnBookingWebUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GS_BookingPublicItemsID", DbType="Int NOT NULL")]
		public int GS_BookingPublicItemsID
		{
			get
			{
				return this._GS_BookingPublicItemsID;
			}
			set
			{
				if ((this._GS_BookingPublicItemsID != value))
				{
					if (this._GS_BookingPublicItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGS_BookingPublicItemsIDChanging(value);
					this.SendPropertyChanging();
					this._GS_BookingPublicItemsID = value;
					this.SendPropertyChanged("GS_BookingPublicItemsID");
					this.OnGS_BookingPublicItemsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GS_BookingPublicItem_GS_BookingUserData", Storage="_GS_BookingPublicItem", ThisKey="GS_BookingPublicItemsID", OtherKey="ID", IsForeignKey=true)]
		public GS_BookingPublicItem GS_BookingPublicItem
		{
			get
			{
				return this._GS_BookingPublicItem.Entity;
			}
			set
			{
				GS_BookingPublicItem previousValue = this._GS_BookingPublicItem.Entity;
				if (((previousValue != value) 
							|| (this._GS_BookingPublicItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GS_BookingPublicItem.Entity = null;
						previousValue.GS_BookingUserDatas.Remove(this);
					}
					this._GS_BookingPublicItem.Entity = value;
					if ((value != null))
					{
						value.GS_BookingUserDatas.Add(this);
						this._GS_BookingPublicItemsID = value.ID;
					}
					else
					{
						this._GS_BookingPublicItemsID = default(int);
					}
					this.SendPropertyChanged("GS_BookingPublicItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GS_Signature")]
	public partial class GS_Signature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _studentID;
		
		private string _signature;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnstudentIDChanging(int value);
    partial void OnstudentIDChanged();
    partial void OnsignatureChanging(string value);
    partial void OnsignatureChanged();
    #endregion
		
		public GS_Signature()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentID", DbType="Int NOT NULL")]
		public int studentID
		{
			get
			{
				return this._studentID;
			}
			set
			{
				if ((this._studentID != value))
				{
					this.OnstudentIDChanging(value);
					this.SendPropertyChanging();
					this._studentID = value;
					this.SendPropertyChanged("studentID");
					this.OnstudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signature", DbType="NVarChar(50)")]
		public string signature
		{
			get
			{
				return this._signature;
			}
			set
			{
				if ((this._signature != value))
				{
					this.OnsignatureChanging(value);
					this.SendPropertyChanging();
					this._signature = value;
					this.SendPropertyChanged("signature");
					this.OnsignatureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Husfest_Anmalan")]
	public partial class Husfest_Anmalan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Namn;
		
		private string _Foretag;
		
		private string _Epost;
		
		private System.Nullable<int> _Antal;
		
		private string _Betalning;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNamnChanging(string value);
    partial void OnNamnChanged();
    partial void OnForetagChanging(string value);
    partial void OnForetagChanged();
    partial void OnEpostChanging(string value);
    partial void OnEpostChanged();
    partial void OnAntalChanging(System.Nullable<int> value);
    partial void OnAntalChanged();
    partial void OnBetalningChanging(string value);
    partial void OnBetalningChanged();
    #endregion
		
		public Husfest_Anmalan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namn", DbType="NVarChar(50)")]
		public string Namn
		{
			get
			{
				return this._Namn;
			}
			set
			{
				if ((this._Namn != value))
				{
					this.OnNamnChanging(value);
					this.SendPropertyChanging();
					this._Namn = value;
					this.SendPropertyChanged("Namn");
					this.OnNamnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foretag", DbType="NVarChar(50)")]
		public string Foretag
		{
			get
			{
				return this._Foretag;
			}
			set
			{
				if ((this._Foretag != value))
				{
					this.OnForetagChanging(value);
					this.SendPropertyChanging();
					this._Foretag = value;
					this.SendPropertyChanged("Foretag");
					this.OnForetagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Epost", DbType="NVarChar(50)")]
		public string Epost
		{
			get
			{
				return this._Epost;
			}
			set
			{
				if ((this._Epost != value))
				{
					this.OnEpostChanging(value);
					this.SendPropertyChanging();
					this._Epost = value;
					this.SendPropertyChanged("Epost");
					this.OnEpostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Antal", DbType="Int")]
		public System.Nullable<int> Antal
		{
			get
			{
				return this._Antal;
			}
			set
			{
				if ((this._Antal != value))
				{
					this.OnAntalChanging(value);
					this.SendPropertyChanging();
					this._Antal = value;
					this.SendPropertyChanged("Antal");
					this.OnAntalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Betalning", DbType="NVarChar(50)")]
		public string Betalning
		{
			get
			{
				return this._Betalning;
			}
			set
			{
				if ((this._Betalning != value))
				{
					this.OnBetalningChanging(value);
					this.SendPropertyChanging();
					this._Betalning = value;
					this.SendPropertyChanged("Betalning");
					this.OnBetalningChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Husfest_Tavling")]
	public partial class Husfest_Tavling : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Namn;
		
		private string _Foretag;
		
		private string _Epost;
		
		private string _Latar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNamnChanging(string value);
    partial void OnNamnChanged();
    partial void OnForetagChanging(string value);
    partial void OnForetagChanged();
    partial void OnEpostChanging(string value);
    partial void OnEpostChanged();
    partial void OnLatarChanging(string value);
    partial void OnLatarChanged();
    #endregion
		
		public Husfest_Tavling()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namn", DbType="NVarChar(50)")]
		public string Namn
		{
			get
			{
				return this._Namn;
			}
			set
			{
				if ((this._Namn != value))
				{
					this.OnNamnChanging(value);
					this.SendPropertyChanging();
					this._Namn = value;
					this.SendPropertyChanged("Namn");
					this.OnNamnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foretag", DbType="NVarChar(50)")]
		public string Foretag
		{
			get
			{
				return this._Foretag;
			}
			set
			{
				if ((this._Foretag != value))
				{
					this.OnForetagChanging(value);
					this.SendPropertyChanging();
					this._Foretag = value;
					this.SendPropertyChanged("Foretag");
					this.OnForetagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Epost", DbType="NVarChar(50)")]
		public string Epost
		{
			get
			{
				return this._Epost;
			}
			set
			{
				if ((this._Epost != value))
				{
					this.OnEpostChanging(value);
					this.SendPropertyChanging();
					this._Epost = value;
					this.SendPropertyChanged("Epost");
					this.OnEpostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latar", DbType="NVarChar(MAX)")]
		public string Latar
		{
			get
			{
				return this._Latar;
			}
			set
			{
				if ((this._Latar != value))
				{
					this.OnLatarChanging(value);
					this.SendPropertyChanging();
					this._Latar = value;
					this.SendPropertyChanged("Latar");
					this.OnLatarChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Intranet")]
	public partial class Intranet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID;
		
		private string _TypeName;
		
		private string _RoleName;
		
		private System.Nullable<int> _ObjectID;
		
		private string _TypeValue;
		
		private string _Label;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnObjectIDChanging(System.Nullable<int> value);
    partial void OnObjectIDChanged();
    partial void OnTypeValueChanging(string value);
    partial void OnTypeValueChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    #endregion
		
		public Intranet()
		{
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeValue", DbType="NVarChar(50)")]
		public string TypeValue
		{
			get
			{
				return this._TypeValue;
			}
			set
			{
				if ((this._TypeValue != value))
				{
					this.OnTypeValueChanging(value);
					this.SendPropertyChanging();
					this._TypeValue = value;
					this.SendPropertyChanged("TypeValue");
					this.OnTypeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(50)")]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Intranet", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Intranets.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Intranets.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Intranet_addresses")]
	public partial class Intranet_address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Zip;
		
		private string _City;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _UniqueNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnUniqueNumberChanging(string value);
    partial void OnUniqueNumberChanged();
    #endregion
		
		public Intranet_address()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueNumber", DbType="NVarChar(50)")]
		public string UniqueNumber
		{
			get
			{
				return this._UniqueNumber;
			}
			set
			{
				if ((this._UniqueNumber != value))
				{
					this.OnUniqueNumberChanging(value);
					this.SendPropertyChanging();
					this._UniqueNumber = value;
					this.SendPropertyChanged("UniqueNumber");
					this.OnUniqueNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntranetRoleInfo")]
	public partial class IntranetRoleInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private string _ImagePath;
		
		private System.Guid _RoleID;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    #endregion
		
		public IntranetRoleInfo()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(500)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_IntranetRoleInfo", Storage="_aspnet_Role", ThisKey="RoleID", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.IntranetRoleInfos.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.IntranetRoleInfos.Add(this);
						this._RoleID = value.RoleId;
					}
					else
					{
						this._RoleID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Language")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LangID;
		
		private string _Language1;
		
		private string _flagimage;
		
		private EntitySet<Object> _Objects;
		
		private EntitySet<SiteLanguage> _SiteLanguages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnLanguage1Changing(string value);
    partial void OnLanguage1Changed();
    partial void OnflagimageChanging(string value);
    partial void OnflagimageChanged();
    #endregion
		
		public Language()
		{
			this._Objects = new EntitySet<Object>(new Action<Object>(this.attach_Objects), new Action<Object>(this.detach_Objects));
			this._SiteLanguages = new EntitySet<SiteLanguage>(new Action<SiteLanguage>(this.attach_SiteLanguages), new Action<SiteLanguage>(this.detach_SiteLanguages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Language", Storage="_Language1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Language1
		{
			get
			{
				return this._Language1;
			}
			set
			{
				if ((this._Language1 != value))
				{
					this.OnLanguage1Changing(value);
					this.SendPropertyChanging();
					this._Language1 = value;
					this.SendPropertyChanged("Language1");
					this.OnLanguage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flagimage", DbType="NVarChar(50)")]
		public string flagimage
		{
			get
			{
				return this._flagimage;
			}
			set
			{
				if ((this._flagimage != value))
				{
					this.OnflagimageChanging(value);
					this.SendPropertyChanging();
					this._flagimage = value;
					this.SendPropertyChanged("flagimage");
					this.OnflagimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Object", Storage="_Objects", ThisKey="LangID", OtherKey="LangID")]
		public EntitySet<Object> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_SiteLanguage", Storage="_SiteLanguages", ThisKey="LangID", OtherKey="LangID")]
		public EntitySet<SiteLanguage> SiteLanguages
		{
			get
			{
				return this._SiteLanguages;
			}
			set
			{
				this._SiteLanguages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_SiteLanguages(SiteLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_SiteLanguages(SiteLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListObject")]
	public partial class ListObject
	{
		
		private int _ID;
		
		private int _SiteID;
		
		private int _ListID;
		
		private string _IconFilename;
		
		private string _Header;
		
		private string _HTML;
		
		private string _Link;
		
		public ListObject()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int NOT NULL")]
		public int ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this._ListID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconFilename", DbType="NVarChar(50)")]
		public string IconFilename
		{
			get
			{
				return this._IconFilename;
			}
			set
			{
				if ((this._IconFilename != value))
				{
					this._IconFilename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(50)")]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this._Header = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTML", DbType="NVarChar(MAX)")]
		public string HTML
		{
			get
			{
				return this._HTML;
			}
			set
			{
				if ((this._HTML != value))
				{
					this._HTML = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(255)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this._Link = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageBoard")]
	public partial class MessageBoard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ObjectID;
		
		private string _Title;
		
		private string _TextMessage;
		
		private string _URL;
		
		private string _Mail;
		
		private System.Nullable<System.DateTime> _MessageTime;
		
		private string _Author;
		
		private string _IP;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnObjectIDChanging(System.Nullable<int> value);
    partial void OnObjectIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTextMessageChanging(string value);
    partial void OnTextMessageChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnMessageTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMessageTimeChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    #endregion
		
		public MessageBoard()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextMessage", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TextMessage
		{
			get
			{
				return this._TextMessage;
			}
			set
			{
				if ((this._TextMessage != value))
				{
					this.OnTextMessageChanging(value);
					this.SendPropertyChanging();
					this._TextMessage = value;
					this.SendPropertyChanged("TextMessage");
					this.OnTextMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(255)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(255)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> MessageTime
		{
			get
			{
				return this._MessageTime;
			}
			set
			{
				if ((this._MessageTime != value))
				{
					this.OnMessageTimeChanging(value);
					this.SendPropertyChanging();
					this._MessageTime = value;
					this.SendPropertyChanged("MessageTime");
					this.OnMessageTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(255)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(255)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_MessageBoard", Storage="_Object", ThisKey="ObjectID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.MessageBoards.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.MessageBoards.Add(this);
						this._ObjectID = value.ObjectID;
					}
					else
					{
						this._ObjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Module")]
	public partial class Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private string _ModuleName;
		
		private string _Description;
		
		private bool _UseLeftMenu;
		
		private string _UserControlName;
		
		private EntitySet<SiteModule> _SiteModules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUseLeftMenuChanging(bool value);
    partial void OnUseLeftMenuChanged();
    partial void OnUserControlNameChanging(string value);
    partial void OnUserControlNameChanged();
    #endregion
		
		public Module()
		{
			this._SiteModules = new EntitySet<SiteModule>(new Action<SiteModule>(this.attach_SiteModules), new Action<SiteModule>(this.detach_SiteModules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLeftMenu", DbType="Bit NOT NULL")]
		public bool UseLeftMenu
		{
			get
			{
				return this._UseLeftMenu;
			}
			set
			{
				if ((this._UseLeftMenu != value))
				{
					this.OnUseLeftMenuChanging(value);
					this.SendPropertyChanging();
					this._UseLeftMenu = value;
					this.SendPropertyChanged("UseLeftMenu");
					this.OnUseLeftMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserControlName", DbType="NVarChar(100)")]
		public string UserControlName
		{
			get
			{
				return this._UserControlName;
			}
			set
			{
				if ((this._UserControlName != value))
				{
					this.OnUserControlNameChanging(value);
					this.SendPropertyChanging();
					this._UserControlName = value;
					this.SendPropertyChanged("UserControlName");
					this.OnUserControlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_SiteModule", Storage="_SiteModules", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<SiteModule> SiteModules
		{
			get
			{
				return this._SiteModules;
			}
			set
			{
				this._SiteModules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SiteModules(SiteModule entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_SiteModules(SiteModule entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.namnsdagar")]
	public partial class namnsdagar
	{
		
		private int _ID;
		
		private System.Nullable<int> _manad;
		
		private System.Nullable<int> _dag;
		
		private string _beskrivning;
		
		private int _land;
		
		private int _kategori;
		
		public namnsdagar()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manad", DbType="Int")]
		public System.Nullable<int> manad
		{
			get
			{
				return this._manad;
			}
			set
			{
				if ((this._manad != value))
				{
					this._manad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dag", DbType="Int")]
		public System.Nullable<int> dag
		{
			get
			{
				return this._dag;
			}
			set
			{
				if ((this._dag != value))
				{
					this._dag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beskrivning", DbType="NVarChar(50)")]
		public string beskrivning
		{
			get
			{
				return this._beskrivning;
			}
			set
			{
				if ((this._beskrivning != value))
				{
					this._beskrivning = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_land", DbType="Int NOT NULL")]
		public int land
		{
			get
			{
				return this._land;
			}
			set
			{
				if ((this._land != value))
				{
					this._land = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kategori", DbType="Int NOT NULL")]
		public int kategori
		{
			get
			{
				return this._kategori;
			}
			set
			{
				if ((this._kategori != value))
				{
					this._kategori = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NewsTitle;
		
		private string _HTMLContent;
		
		private string _Title;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private System.Nullable<System.DateTime> _PublishFrom;
		
		private System.Nullable<System.DateTime> _PublishTo;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _LastChanged;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNewsTitleChanging(string value);
    partial void OnNewsTitleChanged();
    partial void OnHTMLContentChanging(string value);
    partial void OnHTMLContentChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnPublishFromChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishFromChanged();
    partial void OnPublishToChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishToChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnLastChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangedChanged();
    #endregion
		
		public New()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTitle", DbType="NVarChar(255)")]
		public string NewsTitle
		{
			get
			{
				return this._NewsTitle;
			}
			set
			{
				if ((this._NewsTitle != value))
				{
					this.OnNewsTitleChanging(value);
					this.SendPropertyChanging();
					this._NewsTitle = value;
					this.SendPropertyChanged("NewsTitle");
					this.OnNewsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this.OnHTMLContentChanging(value);
					this.SendPropertyChanging();
					this._HTMLContent = value;
					this.SendPropertyChanged("HTMLContent");
					this.OnHTMLContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(255)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(1000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishFrom
		{
			get
			{
				return this._PublishFrom;
			}
			set
			{
				if ((this._PublishFrom != value))
				{
					this.OnPublishFromChanging(value);
					this.SendPropertyChanging();
					this._PublishFrom = value;
					this.SendPropertyChanged("PublishFrom");
					this.OnPublishFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTo
		{
			get
			{
				return this._PublishTo;
			}
			set
			{
				if ((this._PublishTo != value))
				{
					this.OnPublishToChanging(value);
					this.SendPropertyChanging();
					this._PublishTo = value;
					this.SendPropertyChanged("PublishTo");
					this.OnPublishToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastChanged
		{
			get
			{
				return this._LastChanged;
			}
			set
			{
				if ((this._LastChanged != value))
				{
					this.OnLastChangedChanging(value);
					this.SendPropertyChanging();
					this._LastChanged = value;
					this.SendPropertyChanged("LastChanged");
					this.OnLastChangedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Newsletter")]
	public partial class Newsletter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _topic;
		
		private string _message;
		
		private System.DateTime _created;
		
		private System.Nullable<int> _SiteID;
		
		private string _campaignhtml;
		
		private string _campaignlink;
		
		private string _campaignimage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntopicChanging(string value);
    partial void OntopicChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OncampaignhtmlChanging(string value);
    partial void OncampaignhtmlChanged();
    partial void OncampaignlinkChanging(string value);
    partial void OncampaignlinkChanged();
    partial void OncampaignimageChanging(string value);
    partial void OncampaignimageChanged();
    #endregion
		
		public Newsletter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_topic", DbType="NVarChar(200)")]
		public string topic
		{
			get
			{
				return this._topic;
			}
			set
			{
				if ((this._topic != value))
				{
					this.OntopicChanging(value);
					this.SendPropertyChanging();
					this._topic = value;
					this.SendPropertyChanged("topic");
					this.OntopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_campaignhtml", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string campaignhtml
		{
			get
			{
				return this._campaignhtml;
			}
			set
			{
				if ((this._campaignhtml != value))
				{
					this.OncampaignhtmlChanging(value);
					this.SendPropertyChanging();
					this._campaignhtml = value;
					this.SendPropertyChanged("campaignhtml");
					this.OncampaignhtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_campaignlink", DbType="NVarChar(500)")]
		public string campaignlink
		{
			get
			{
				return this._campaignlink;
			}
			set
			{
				if ((this._campaignlink != value))
				{
					this.OncampaignlinkChanging(value);
					this.SendPropertyChanging();
					this._campaignlink = value;
					this.SendPropertyChanged("campaignlink");
					this.OncampaignlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_campaignimage", DbType="NVarChar(500)")]
		public string campaignimage
		{
			get
			{
				return this._campaignimage;
			}
			set
			{
				if ((this._campaignimage != value))
				{
					this.OncampaignimageChanging(value);
					this.SendPropertyChanging();
					this._campaignimage = value;
					this.SendPropertyChanged("campaignimage");
					this.OncampaignimageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsletterHistory")]
	public partial class NewsletterHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID;
		
		private int _NewsletterID;
		
		private int _NbrRecipients;
		
		private string _RecipientList;
		
		private System.Nullable<System.DateTime> _Sent;
		
		private string _errorString;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnNewsletterIDChanging(int value);
    partial void OnNewsletterIDChanged();
    partial void OnNbrRecipientsChanging(int value);
    partial void OnNbrRecipientsChanged();
    partial void OnRecipientListChanging(string value);
    partial void OnRecipientListChanged();
    partial void OnSentChanging(System.Nullable<System.DateTime> value);
    partial void OnSentChanged();
    partial void OnerrorStringChanging(string value);
    partial void OnerrorStringChanged();
    #endregion
		
		public NewsletterHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsletterID", DbType="Int NOT NULL")]
		public int NewsletterID
		{
			get
			{
				return this._NewsletterID;
			}
			set
			{
				if ((this._NewsletterID != value))
				{
					this.OnNewsletterIDChanging(value);
					this.SendPropertyChanging();
					this._NewsletterID = value;
					this.SendPropertyChanged("NewsletterID");
					this.OnNewsletterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbrRecipients", DbType="Int NOT NULL")]
		public int NbrRecipients
		{
			get
			{
				return this._NbrRecipients;
			}
			set
			{
				if ((this._NbrRecipients != value))
				{
					this.OnNbrRecipientsChanging(value);
					this.SendPropertyChanging();
					this._NbrRecipients = value;
					this.SendPropertyChanged("NbrRecipients");
					this.OnNbrRecipientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientList", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RecipientList
		{
			get
			{
				return this._RecipientList;
			}
			set
			{
				if ((this._RecipientList != value))
				{
					this.OnRecipientListChanging(value);
					this.SendPropertyChanging();
					this._RecipientList = value;
					this.SendPropertyChanged("RecipientList");
					this.OnRecipientListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sent", DbType="DateTime")]
		public System.Nullable<System.DateTime> Sent
		{
			get
			{
				return this._Sent;
			}
			set
			{
				if ((this._Sent != value))
				{
					this.OnSentChanging(value);
					this.SendPropertyChanging();
					this._Sent = value;
					this.SendPropertyChanged("Sent");
					this.OnSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_errorString", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string errorString
		{
			get
			{
				return this._errorString;
			}
			set
			{
				if ((this._errorString != value))
				{
					this.OnerrorStringChanging(value);
					this.SendPropertyChanging();
					this._errorString = value;
					this.SendPropertyChanged("errorString");
					this.OnerrorStringChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsLetterLog")]
	public partial class NewsLetterLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _NewsletterHistory_FK;
		
		private string _MailAddress;
		
		private bool _IsError;
		
		private string _ErrorMessage;
		
		private System.DateTime _DateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNewsletterHistory_FKChanging(int value);
    partial void OnNewsletterHistory_FKChanged();
    partial void OnMailAddressChanging(string value);
    partial void OnMailAddressChanged();
    partial void OnIsErrorChanging(bool value);
    partial void OnIsErrorChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
		
		public NewsLetterLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsletterHistory_FK", DbType="Int NOT NULL")]
		public int NewsletterHistory_FK
		{
			get
			{
				return this._NewsletterHistory_FK;
			}
			set
			{
				if ((this._NewsletterHistory_FK != value))
				{
					this.OnNewsletterHistory_FKChanging(value);
					this.SendPropertyChanging();
					this._NewsletterHistory_FK = value;
					this.SendPropertyChanged("NewsletterHistory_FK");
					this.OnNewsletterHistory_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MailAddress
		{
			get
			{
				return this._MailAddress;
			}
			set
			{
				if ((this._MailAddress != value))
				{
					this.OnMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MailAddress = value;
					this.SendPropertyChanged("MailAddress");
					this.OnMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsError", DbType="Bit NOT NULL")]
		public bool IsError
		{
			get
			{
				return this._IsError;
			}
			set
			{
				if ((this._IsError != value))
				{
					this.OnIsErrorChanging(value);
					this.SendPropertyChanging();
					this._IsError = value;
					this.SendPropertyChanged("IsError");
					this.OnIsErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object")]
	public partial class Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectID;
		
		private string _Structure;
		
		private string _Title;
		
		private string _IntroText;
		
		private string _HTMLContent;
		
		private string _MetaTitle;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private System.Nullable<bool> _Active;
		
		private System.DateTime _LastChanged;
		
		private System.Nullable<int> _Sortorder;
		
		private string _Picture;
		
		private string _Alt;
		
		private System.Nullable<int> _ObjectTypeID;
		
		private System.Nullable<int> _SiteID;
		
		private int _LangID;
		
		private System.DateTime _Created;
		
		private string _StartDate;
		
		private string _ObjectKey;
		
		private System.Nullable<int> _ListID;
		
		private System.Nullable<System.DateTime> _PublishFrom;
		
		private System.Nullable<System.DateTime> _PublishTo;
		
		private string _LinkTarget;
		
		private System.Nullable<int> _Visits;
		
		private System.Nullable<int> _Category;
		
		private byte _SecureObject;
		
		private System.Nullable<System.DateTime> _TrashedDate;
		
		private string _UploadedImagePath;
		
		private bool _VisibleInMenu;
		
		private EntitySet<AlbumPhotoCategory> _AlbumPhotoCategories;
		
		private EntitySet<Calendar_Event> _Calendar_Events;
		
		private EntitySet<Form_Setting> _Form_Settings;
		
		private EntitySet<MessageBoard> _MessageBoards;
		
		private EntitySet<Object_Popular> _Object_Populars;
		
		private EntitySet<Object_VersionControl> _Object_VersionControls;
		
		private EntitySet<ObjectComment> _ObjectComments;
		
		private EntitySet<ObjectsInRole> _ObjectsInRoles;
		
		private EntitySet<Products_Object_X_MainGroup> _Products_Object_X_MainGroups;
		
		private EntityRef<Skogshjortarna_NewsOwner> _Skogshjortarna_NewsOwner;
		
		private EntityRef<TreeStructure> _TreeStructure;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<ObjectType> _ObjectType;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnStructureChanging(string value);
    partial void OnStructureChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIntroTextChanging(string value);
    partial void OnIntroTextChanged();
    partial void OnHTMLContentChanging(string value);
    partial void OnHTMLContentChanged();
    partial void OnMetaTitleChanging(string value);
    partial void OnMetaTitleChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnLastChangedChanging(System.DateTime value);
    partial void OnLastChangedChanged();
    partial void OnSortorderChanging(System.Nullable<int> value);
    partial void OnSortorderChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnAltChanging(string value);
    partial void OnAltChanged();
    partial void OnObjectTypeIDChanging(System.Nullable<int> value);
    partial void OnObjectTypeIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnObjectKeyChanging(string value);
    partial void OnObjectKeyChanged();
    partial void OnListIDChanging(System.Nullable<int> value);
    partial void OnListIDChanged();
    partial void OnPublishFromChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishFromChanged();
    partial void OnPublishToChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishToChanged();
    partial void OnLinkTargetChanging(string value);
    partial void OnLinkTargetChanged();
    partial void OnVisitsChanging(System.Nullable<int> value);
    partial void OnVisitsChanged();
    partial void OnCategoryChanging(System.Nullable<int> value);
    partial void OnCategoryChanged();
    partial void OnSecureObjectChanging(byte value);
    partial void OnSecureObjectChanged();
    partial void OnTrashedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrashedDateChanged();
    partial void OnUploadedImagePathChanging(string value);
    partial void OnUploadedImagePathChanged();
    partial void OnVisibleInMenuChanging(bool value);
    partial void OnVisibleInMenuChanged();
    #endregion
		
		public Object()
		{
			this._AlbumPhotoCategories = new EntitySet<AlbumPhotoCategory>(new Action<AlbumPhotoCategory>(this.attach_AlbumPhotoCategories), new Action<AlbumPhotoCategory>(this.detach_AlbumPhotoCategories));
			this._Calendar_Events = new EntitySet<Calendar_Event>(new Action<Calendar_Event>(this.attach_Calendar_Events), new Action<Calendar_Event>(this.detach_Calendar_Events));
			this._Form_Settings = new EntitySet<Form_Setting>(new Action<Form_Setting>(this.attach_Form_Settings), new Action<Form_Setting>(this.detach_Form_Settings));
			this._MessageBoards = new EntitySet<MessageBoard>(new Action<MessageBoard>(this.attach_MessageBoards), new Action<MessageBoard>(this.detach_MessageBoards));
			this._Object_Populars = new EntitySet<Object_Popular>(new Action<Object_Popular>(this.attach_Object_Populars), new Action<Object_Popular>(this.detach_Object_Populars));
			this._Object_VersionControls = new EntitySet<Object_VersionControl>(new Action<Object_VersionControl>(this.attach_Object_VersionControls), new Action<Object_VersionControl>(this.detach_Object_VersionControls));
			this._ObjectComments = new EntitySet<ObjectComment>(new Action<ObjectComment>(this.attach_ObjectComments), new Action<ObjectComment>(this.detach_ObjectComments));
			this._ObjectsInRoles = new EntitySet<ObjectsInRole>(new Action<ObjectsInRole>(this.attach_ObjectsInRoles), new Action<ObjectsInRole>(this.detach_ObjectsInRoles));
			this._Products_Object_X_MainGroups = new EntitySet<Products_Object_X_MainGroup>(new Action<Products_Object_X_MainGroup>(this.attach_Products_Object_X_MainGroups), new Action<Products_Object_X_MainGroup>(this.detach_Products_Object_X_MainGroups));
			this._Skogshjortarna_NewsOwner = default(EntityRef<Skogshjortarna_NewsOwner>);
			this._TreeStructure = default(EntityRef<TreeStructure>);
			this._Language = default(EntityRef<Language>);
			this._ObjectType = default(EntityRef<ObjectType>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Structure", DbType="NVarChar(50)")]
		public string Structure
		{
			get
			{
				return this._Structure;
			}
			set
			{
				if ((this._Structure != value))
				{
					this.OnStructureChanging(value);
					this.SendPropertyChanging();
					this._Structure = value;
					this.SendPropertyChanged("Structure");
					this.OnStructureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroText", DbType="NVarChar(2000)")]
		public string IntroText
		{
			get
			{
				return this._IntroText;
			}
			set
			{
				if ((this._IntroText != value))
				{
					this.OnIntroTextChanging(value);
					this.SendPropertyChanging();
					this._IntroText = value;
					this.SendPropertyChanged("IntroText");
					this.OnIntroTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this.OnHTMLContentChanging(value);
					this.SendPropertyChanging();
					this._HTMLContent = value;
					this.SendPropertyChanged("HTMLContent");
					this.OnHTMLContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(100)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this.OnMetaTitleChanging(value);
					this.SendPropertyChanging();
					this._MetaTitle = value;
					this.SendPropertyChanged("MetaTitle");
					this.OnMetaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(1000)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(1000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanged", DbType="DateTime NOT NULL")]
		public System.DateTime LastChanged
		{
			get
			{
				return this._LastChanged;
			}
			set
			{
				if ((this._LastChanged != value))
				{
					this.OnLastChangedChanging(value);
					this.SendPropertyChanging();
					this._LastChanged = value;
					this.SendPropertyChanged("LastChanged");
					this.OnLastChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sortorder", DbType="Int")]
		public System.Nullable<int> Sortorder
		{
			get
			{
				return this._Sortorder;
			}
			set
			{
				if ((this._Sortorder != value))
				{
					this.OnSortorderChanging(value);
					this.SendPropertyChanging();
					this._Sortorder = value;
					this.SendPropertyChanged("Sortorder");
					this.OnSortorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(100)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt", DbType="NVarChar(1000)")]
		public string Alt
		{
			get
			{
				return this._Alt;
			}
			set
			{
				if ((this._Alt != value))
				{
					this.OnAltChanging(value);
					this.SendPropertyChanging();
					this._Alt = value;
					this.SendPropertyChanged("Alt");
					this.OnAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int")]
		public System.Nullable<int> ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="NVarChar(10)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(15)")]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this.OnObjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ObjectKey = value;
					this.SendPropertyChanged("ObjectKey");
					this.OnObjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int")]
		public System.Nullable<int> ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishFrom
		{
			get
			{
				return this._PublishFrom;
			}
			set
			{
				if ((this._PublishFrom != value))
				{
					this.OnPublishFromChanging(value);
					this.SendPropertyChanging();
					this._PublishFrom = value;
					this.SendPropertyChanged("PublishFrom");
					this.OnPublishFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTo
		{
			get
			{
				return this._PublishTo;
			}
			set
			{
				if ((this._PublishTo != value))
				{
					this.OnPublishToChanging(value);
					this.SendPropertyChanging();
					this._PublishTo = value;
					this.SendPropertyChanged("PublishTo");
					this.OnPublishToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTarget", DbType="NVarChar(10)")]
		public string LinkTarget
		{
			get
			{
				return this._LinkTarget;
			}
			set
			{
				if ((this._LinkTarget != value))
				{
					this.OnLinkTargetChanging(value);
					this.SendPropertyChanging();
					this._LinkTarget = value;
					this.SendPropertyChanged("LinkTarget");
					this.OnLinkTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visits", DbType="Int")]
		public System.Nullable<int> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				if ((this._Visits != value))
				{
					this.OnVisitsChanging(value);
					this.SendPropertyChanging();
					this._Visits = value;
					this.SendPropertyChanged("Visits");
					this.OnVisitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int")]
		public System.Nullable<int> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecureObject", DbType="TinyInt NOT NULL")]
		public byte SecureObject
		{
			get
			{
				return this._SecureObject;
			}
			set
			{
				if ((this._SecureObject != value))
				{
					this.OnSecureObjectChanging(value);
					this.SendPropertyChanging();
					this._SecureObject = value;
					this.SendPropertyChanged("SecureObject");
					this.OnSecureObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrashedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrashedDate
		{
			get
			{
				return this._TrashedDate;
			}
			set
			{
				if ((this._TrashedDate != value))
				{
					this.OnTrashedDateChanging(value);
					this.SendPropertyChanging();
					this._TrashedDate = value;
					this.SendPropertyChanged("TrashedDate");
					this.OnTrashedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedImagePath", DbType="NVarChar(400)")]
		public string UploadedImagePath
		{
			get
			{
				return this._UploadedImagePath;
			}
			set
			{
				if ((this._UploadedImagePath != value))
				{
					this.OnUploadedImagePathChanging(value);
					this.SendPropertyChanging();
					this._UploadedImagePath = value;
					this.SendPropertyChanged("UploadedImagePath");
					this.OnUploadedImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisibleInMenu", DbType="Bit NOT NULL")]
		public bool VisibleInMenu
		{
			get
			{
				return this._VisibleInMenu;
			}
			set
			{
				if ((this._VisibleInMenu != value))
				{
					this.OnVisibleInMenuChanging(value);
					this.SendPropertyChanging();
					this._VisibleInMenu = value;
					this.SendPropertyChanged("VisibleInMenu");
					this.OnVisibleInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_AlbumPhotoCategory", Storage="_AlbumPhotoCategories", ThisKey="ObjectID", OtherKey="ObjectID")]
		public EntitySet<AlbumPhotoCategory> AlbumPhotoCategories
		{
			get
			{
				return this._AlbumPhotoCategories;
			}
			set
			{
				this._AlbumPhotoCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Calendar_Event", Storage="_Calendar_Events", ThisKey="ObjectID", OtherKey="ObjectID")]
		public EntitySet<Calendar_Event> Calendar_Events
		{
			get
			{
				return this._Calendar_Events;
			}
			set
			{
				this._Calendar_Events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Form_Setting", Storage="_Form_Settings", ThisKey="ObjectID", OtherKey="ObjectID")]
		public EntitySet<Form_Setting> Form_Settings
		{
			get
			{
				return this._Form_Settings;
			}
			set
			{
				this._Form_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_MessageBoard", Storage="_MessageBoards", ThisKey="ObjectID", OtherKey="ObjectID")]
		public EntitySet<MessageBoard> MessageBoards
		{
			get
			{
				return this._MessageBoards;
			}
			set
			{
				this._MessageBoards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Popular", Storage="_Object_Populars", ThisKey="ObjectID", OtherKey="ObjectID_FK")]
		public EntitySet<Object_Popular> Object_Populars
		{
			get
			{
				return this._Object_Populars;
			}
			set
			{
				this._Object_Populars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_VersionControl", Storage="_Object_VersionControls", ThisKey="ObjectID", OtherKey="ObjectID")]
		public EntitySet<Object_VersionControl> Object_VersionControls
		{
			get
			{
				return this._Object_VersionControls;
			}
			set
			{
				this._Object_VersionControls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_ObjectComment", Storage="_ObjectComments", ThisKey="ObjectID", OtherKey="Object_FK")]
		public EntitySet<ObjectComment> ObjectComments
		{
			get
			{
				return this._ObjectComments;
			}
			set
			{
				this._ObjectComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_ObjectsInRole", Storage="_ObjectsInRoles", ThisKey="ObjectID", OtherKey="ObjectID")]
		public EntitySet<ObjectsInRole> ObjectsInRoles
		{
			get
			{
				return this._ObjectsInRoles;
			}
			set
			{
				this._ObjectsInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Products_Object_X_MainGroup", Storage="_Products_Object_X_MainGroups", ThisKey="ObjectID", OtherKey="Object_FK")]
		public EntitySet<Products_Object_X_MainGroup> Products_Object_X_MainGroups
		{
			get
			{
				return this._Products_Object_X_MainGroups;
			}
			set
			{
				this._Products_Object_X_MainGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Skogshjortarna_NewsOwner", Storage="_Skogshjortarna_NewsOwner", ThisKey="ObjectID", OtherKey="NewsID", IsUnique=true, IsForeignKey=false)]
		public Skogshjortarna_NewsOwner Skogshjortarna_NewsOwner
		{
			get
			{
				return this._Skogshjortarna_NewsOwner.Entity;
			}
			set
			{
				Skogshjortarna_NewsOwner previousValue = this._Skogshjortarna_NewsOwner.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_NewsOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_NewsOwner.Entity = null;
						previousValue.Object = null;
					}
					this._Skogshjortarna_NewsOwner.Entity = value;
					if ((value != null))
					{
						value.Object = this;
					}
					this.SendPropertyChanged("Skogshjortarna_NewsOwner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_TreeStructure", Storage="_TreeStructure", ThisKey="ObjectID", OtherKey="ObjectID", IsUnique=true, IsForeignKey=false)]
		public TreeStructure TreeStructure
		{
			get
			{
				return this._TreeStructure.Entity;
			}
			set
			{
				TreeStructure previousValue = this._TreeStructure.Entity;
				if (((previousValue != value) 
							|| (this._TreeStructure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TreeStructure.Entity = null;
						previousValue.Object = null;
					}
					this._TreeStructure.Entity = value;
					if ((value != null))
					{
						value.Object = this;
					}
					this.SendPropertyChanged("TreeStructure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Object", Storage="_Language", ThisKey="LangID", OtherKey="LangID", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._LangID = value.LangID;
					}
					else
					{
						this._LangID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectType_Object", Storage="_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public ObjectType ObjectType
		{
			get
			{
				return this._ObjectType.Entity;
			}
			set
			{
				ObjectType previousValue = this._ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectType.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._ObjectType.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Object", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlbumPhotoCategories(AlbumPhotoCategory entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_AlbumPhotoCategories(AlbumPhotoCategory entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_Calendar_Events(Calendar_Event entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Calendar_Events(Calendar_Event entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_Form_Settings(Form_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Form_Settings(Form_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_MessageBoards(MessageBoard entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_MessageBoards(MessageBoard entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_Object_Populars(Object_Popular entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Object_Populars(Object_Popular entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_Object_VersionControls(Object_VersionControl entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Object_VersionControls(Object_VersionControl entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_ObjectComments(ObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_ObjectComments(ObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_ObjectsInRoles(ObjectsInRole entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_ObjectsInRoles(ObjectsInRole entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_Products_Object_X_MainGroups(Products_Object_X_MainGroup entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Products_Object_X_MainGroups(Products_Object_X_MainGroup entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object_Popular")]
	public partial class Object_Popular : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ObjectID_FK;
		
		private int _Count;
		
		private int _SiteID_FK;
		
		private System.Nullable<System.DateTime> _LastDate;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnObjectID_FKChanging(int value);
    partial void OnObjectID_FKChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnSiteID_FKChanging(int value);
    partial void OnSiteID_FKChanged();
    partial void OnLastDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDateChanged();
    #endregion
		
		public Object_Popular()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID_FK", DbType="Int NOT NULL")]
		public int ObjectID_FK
		{
			get
			{
				return this._ObjectID_FK;
			}
			set
			{
				if ((this._ObjectID_FK != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectID_FKChanging(value);
					this.SendPropertyChanging();
					this._ObjectID_FK = value;
					this.SendPropertyChanged("ObjectID_FK");
					this.OnObjectID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID_FK", DbType="Int NOT NULL")]
		public int SiteID_FK
		{
			get
			{
				return this._SiteID_FK;
			}
			set
			{
				if ((this._SiteID_FK != value))
				{
					this.OnSiteID_FKChanging(value);
					this.SendPropertyChanging();
					this._SiteID_FK = value;
					this.SendPropertyChanged("SiteID_FK");
					this.OnSiteID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._LastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Popular", Storage="_Object", ThisKey="ObjectID_FK", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Object_Populars.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Object_Populars.Add(this);
						this._ObjectID_FK = value.ObjectID;
					}
					else
					{
						this._ObjectID_FK = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object_VersionControl")]
	public partial class Object_VersionControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ObjectID;
		
		private System.DateTime _SavedDate;
		
		private string _Title;
		
		private string _IntroText;
		
		private string _HTMLContent;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnSavedDateChanging(System.DateTime value);
    partial void OnSavedDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIntroTextChanging(string value);
    partial void OnIntroTextChanged();
    partial void OnHTMLContentChanging(string value);
    partial void OnHTMLContentChanged();
    #endregion
		
		public Object_VersionControl()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedDate", DbType="DateTime NOT NULL")]
		public System.DateTime SavedDate
		{
			get
			{
				return this._SavedDate;
			}
			set
			{
				if ((this._SavedDate != value))
				{
					this.OnSavedDateChanging(value);
					this.SendPropertyChanging();
					this._SavedDate = value;
					this.SendPropertyChanged("SavedDate");
					this.OnSavedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroText", DbType="NVarChar(2000)")]
		public string IntroText
		{
			get
			{
				return this._IntroText;
			}
			set
			{
				if ((this._IntroText != value))
				{
					this.OnIntroTextChanging(value);
					this.SendPropertyChanging();
					this._IntroText = value;
					this.SendPropertyChanged("IntroText");
					this.OnIntroTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this.OnHTMLContentChanging(value);
					this.SendPropertyChanging();
					this._HTMLContent = value;
					this.SendPropertyChanged("HTMLContent");
					this.OnHTMLContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_VersionControl", Storage="_Object", ThisKey="ObjectID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Object_VersionControls.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Object_VersionControls.Add(this);
						this._ObjectID = value.ObjectID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object_X_Form_Form")]
	public partial class Object_X_Form_Form
	{
		
		private int _ID;
		
		private int _ObjectID;
		
		private int _FormID;
		
		public Object_X_Form_Form()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", DbType="Int NOT NULL")]
		public int FormID
		{
			get
			{
				return this._FormID;
			}
			set
			{
				if ((this._FormID != value))
				{
					this._FormID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object_X_SiteTemplates")]
	public partial class Object_X_SiteTemplate
	{
		
		private int _ID;
		
		private int _ObjectID;
		
		private int _TemplateID;
		
		public Object_X_SiteTemplate()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateID", DbType="Int NOT NULL")]
		public int TemplateID
		{
			get
			{
				return this._TemplateID;
			}
			set
			{
				if ((this._TemplateID != value))
				{
					this._TemplateID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectComments")]
	public partial class ObjectComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Object_FK;
		
		private System.Nullable<System.DateTime> _theTime;
		
		private string _comment;
		
		private string _Writer;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnObject_FKChanging(int value);
    partial void OnObject_FKChanged();
    partial void OntheTimeChanging(System.Nullable<System.DateTime> value);
    partial void OntheTimeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnWriterChanging(string value);
    partial void OnWriterChanged();
    #endregion
		
		public ObjectComment()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_FK", DbType="Int NOT NULL")]
		public int Object_FK
		{
			get
			{
				return this._Object_FK;
			}
			set
			{
				if ((this._Object_FK != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObject_FKChanging(value);
					this.SendPropertyChanging();
					this._Object_FK = value;
					this.SendPropertyChanged("Object_FK");
					this.OnObject_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> theTime
		{
			get
			{
				return this._theTime;
			}
			set
			{
				if ((this._theTime != value))
				{
					this.OntheTimeChanging(value);
					this.SendPropertyChanging();
					this._theTime = value;
					this.SendPropertyChanged("theTime");
					this.OntheTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(255)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Writer", DbType="NVarChar(50)")]
		public string Writer
		{
			get
			{
				return this._Writer;
			}
			set
			{
				if ((this._Writer != value))
				{
					this.OnWriterChanging(value);
					this.SendPropertyChanging();
					this._Writer = value;
					this.SendPropertyChanged("Writer");
					this.OnWriterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_ObjectComment", Storage="_Object", ThisKey="Object_FK", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.ObjectComments.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.ObjectComments.Add(this);
						this._Object_FK = value.ObjectID;
					}
					else
					{
						this._Object_FK = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectsInRoles")]
	public partial class ObjectsInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectID;
		
		private System.Guid _RoleID;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    #endregion
		
		public ObjectsInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_ObjectsInRole", Storage="_aspnet_Role", ThisKey="RoleID", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.ObjectsInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.ObjectsInRoles.Add(this);
						this._RoleID = value.RoleId;
					}
					else
					{
						this._RoleID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_ObjectsInRole", Storage="_Object", ThisKey="ObjectID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.ObjectsInRoles.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.ObjectsInRoles.Add(this);
						this._ObjectID = value.ObjectID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectStats")]
	public partial class ObjectStat
	{
		
		private int _ID;
		
		private System.Nullable<int> _ObjectID;
		
		private System.Nullable<int> _SiteID;
		
		private string _SessionID;
		
		private System.Nullable<System.DateTime> _DateTime;
		
		private string _UserName;
		
		private string _TypeName;
		
		public ObjectStat()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", DbType="NVarChar(255)")]
		public string SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this._SessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectType")]
	public partial class ObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectTypeID;
		
		private string _ObjectType1;
		
		private byte _VisibleInList;
		
		private string _AimContentURL;
		
		private string _commentsAboutOT;
		
		private EntitySet<Object> _Objects;
		
		private EntitySet<SiteObjectType> _SiteObjectTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnObjectType1Changing(string value);
    partial void OnObjectType1Changed();
    partial void OnVisibleInListChanging(byte value);
    partial void OnVisibleInListChanged();
    partial void OnAimContentURLChanging(string value);
    partial void OnAimContentURLChanged();
    partial void OncommentsAboutOTChanging(string value);
    partial void OncommentsAboutOTChanged();
    #endregion
		
		public ObjectType()
		{
			this._Objects = new EntitySet<Object>(new Action<Object>(this.attach_Objects), new Action<Object>(this.detach_Objects));
			this._SiteObjectTypes = new EntitySet<SiteObjectType>(new Action<SiteObjectType>(this.attach_SiteObjectTypes), new Action<SiteObjectType>(this.detach_SiteObjectTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ObjectType", Storage="_ObjectType1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ObjectType1
		{
			get
			{
				return this._ObjectType1;
			}
			set
			{
				if ((this._ObjectType1 != value))
				{
					this.OnObjectType1Changing(value);
					this.SendPropertyChanging();
					this._ObjectType1 = value;
					this.SendPropertyChanged("ObjectType1");
					this.OnObjectType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisibleInList", DbType="TinyInt NOT NULL")]
		public byte VisibleInList
		{
			get
			{
				return this._VisibleInList;
			}
			set
			{
				if ((this._VisibleInList != value))
				{
					this.OnVisibleInListChanging(value);
					this.SendPropertyChanging();
					this._VisibleInList = value;
					this.SendPropertyChanged("VisibleInList");
					this.OnVisibleInListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimContentURL", DbType="NVarChar(100)")]
		public string AimContentURL
		{
			get
			{
				return this._AimContentURL;
			}
			set
			{
				if ((this._AimContentURL != value))
				{
					this.OnAimContentURLChanging(value);
					this.SendPropertyChanging();
					this._AimContentURL = value;
					this.SendPropertyChanged("AimContentURL");
					this.OnAimContentURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentsAboutOT", DbType="NVarChar(100)")]
		public string commentsAboutOT
		{
			get
			{
				return this._commentsAboutOT;
			}
			set
			{
				if ((this._commentsAboutOT != value))
				{
					this.OncommentsAboutOTChanging(value);
					this.SendPropertyChanging();
					this._commentsAboutOT = value;
					this.SendPropertyChanged("commentsAboutOT");
					this.OncommentsAboutOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectType_Object", Storage="_Objects", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<Object> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectType_SiteObjectType", Storage="_SiteObjectTypes", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<SiteObjectType> SiteObjectTypes
		{
			get
			{
				return this._SiteObjectTypes;
			}
			set
			{
				this._SiteObjectTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.ObjectType = this;
		}
		
		private void detach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.ObjectType = null;
		}
		
		private void attach_SiteObjectTypes(SiteObjectType entity)
		{
			this.SendPropertyChanging();
			entity.ObjectType = this;
		}
		
		private void detach_SiteObjectTypes(SiteObjectType entity)
		{
			this.SendPropertyChanging();
			entity.ObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OLDSB_TMP")]
	public partial class OLDSB_TMP
	{
		
		private string _Företag;
		
		private System.Nullable<System.DateTime> _Datum;
		
		public OLDSB_TMP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Företag", DbType="NVarChar(255)")]
		public string Företag
		{
			get
			{
				return this._Företag;
			}
			set
			{
				if ((this._Företag != value))
				{
					this._Företag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="DateTime")]
		public System.Nullable<System.DateTime> Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this._Datum = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Photo")]
	public partial class Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Filename;
		
		private int _PhotoCategoryID;
		
		private System.Nullable<int> _Sort;
		
		private string _Comment;
		
		private bool _Deleted;
		
		private EntityRef<PhotoCategory> _PhotoCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnPhotoCategoryIDChanging(int value);
    partial void OnPhotoCategoryIDChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Photo()
		{
			this._PhotoCategory = default(EntityRef<PhotoCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(50)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoCategoryID", DbType="Int NOT NULL")]
		public int PhotoCategoryID
		{
			get
			{
				return this._PhotoCategoryID;
			}
			set
			{
				if ((this._PhotoCategoryID != value))
				{
					if (this._PhotoCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoCategoryID = value;
					this.SendPropertyChanged("PhotoCategoryID");
					this.OnPhotoCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoCategory_Photo", Storage="_PhotoCategory", ThisKey="PhotoCategoryID", OtherKey="ID", IsForeignKey=true)]
		public PhotoCategory PhotoCategory
		{
			get
			{
				return this._PhotoCategory.Entity;
			}
			set
			{
				PhotoCategory previousValue = this._PhotoCategory.Entity;
				if (((previousValue != value) 
							|| (this._PhotoCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhotoCategory.Entity = null;
						previousValue.Photos.Remove(this);
					}
					this._PhotoCategory.Entity = value;
					if ((value != null))
					{
						value.Photos.Add(this);
						this._PhotoCategoryID = value.ID;
					}
					else
					{
						this._PhotoCategoryID = default(int);
					}
					this.SendPropertyChanged("PhotoCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhotoCategory")]
	public partial class PhotoCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CategoryName;
		
		private int _ObjectID;
		
		private bool _Deleted;
		
		private System.Nullable<System.DateTime> _CategoryDate;
		
		private EntitySet<Photo> _Photos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnCategoryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCategoryDateChanged();
    #endregion
		
		public PhotoCategory()
		{
			this._Photos = new EntitySet<Photo>(new Action<Photo>(this.attach_Photos), new Action<Photo>(this.detach_Photos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(255)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CategoryDate
		{
			get
			{
				return this._CategoryDate;
			}
			set
			{
				if ((this._CategoryDate != value))
				{
					this.OnCategoryDateChanging(value);
					this.SendPropertyChanging();
					this._CategoryDate = value;
					this.SendPropertyChanged("CategoryDate");
					this.OnCategoryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhotoCategory_Photo", Storage="_Photos", ThisKey="ID", OtherKey="PhotoCategoryID")]
		public EntitySet<Photo> Photos
		{
			get
			{
				return this._Photos;
			}
			set
			{
				this._Photos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Photos(Photo entity)
		{
			this.SendPropertyChanging();
			entity.PhotoCategory = this;
		}
		
		private void detach_Photos(Photo entity)
		{
			this.SendPropertyChanging();
			entity.PhotoCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhotoInRoles")]
	public partial class PhotoInRole
	{
		
		private int _PhotoCategoryId;
		
		private System.Guid _RoleId;
		
		public PhotoInRole()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoCategoryId", DbType="Int NOT NULL")]
		public int PhotoCategoryId
		{
			get
			{
				return this._PhotoCategoryId;
			}
			set
			{
				if ((this._PhotoCategoryId != value))
				{
					this._PhotoCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_Areas")]
	public partial class Planinglist_Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Planinglist_ObjectArea> _Planinglist_ObjectAreas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAIDChanging(int value);
    partial void OnAIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Planinglist_Area()
		{
			this._Planinglist_ObjectAreas = new EntitySet<Planinglist_ObjectArea>(new Action<Planinglist_ObjectArea>(this.attach_Planinglist_ObjectAreas), new Action<Planinglist_ObjectArea>(this.detach_Planinglist_ObjectAreas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AID
		{
			get
			{
				return this._AID;
			}
			set
			{
				if ((this._AID != value))
				{
					this.OnAIDChanging(value);
					this.SendPropertyChanging();
					this._AID = value;
					this.SendPropertyChanged("AID");
					this.OnAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(70)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Area_Planinglist_ObjectArea", Storage="_Planinglist_ObjectAreas", ThisKey="AID", OtherKey="AID_FK")]
		public EntitySet<Planinglist_ObjectArea> Planinglist_ObjectAreas
		{
			get
			{
				return this._Planinglist_ObjectAreas;
			}
			set
			{
				this._Planinglist_ObjectAreas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planinglist_ObjectAreas(Planinglist_ObjectArea entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Area = this;
		}
		
		private void detach_Planinglist_ObjectAreas(Planinglist_ObjectArea entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_Comments")]
	public partial class Planinglist_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OID_FK;
		
		private System.Nullable<int> _ID_FK;
		
		private string _Comment;
		
		private bool _Publish;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOID_FKChanging(System.Nullable<int> value);
    partial void OnOID_FKChanged();
    partial void OnID_FKChanging(System.Nullable<int> value);
    partial void OnID_FKChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPublishChanging(bool value);
    partial void OnPublishChanged();
    #endregion
		
		public Planinglist_Comment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID_FK", DbType="Int")]
		public System.Nullable<int> OID_FK
		{
			get
			{
				return this._OID_FK;
			}
			set
			{
				if ((this._OID_FK != value))
				{
					this.OnOID_FKChanging(value);
					this.SendPropertyChanging();
					this._OID_FK = value;
					this.SendPropertyChanged("OID_FK");
					this.OnOID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FK", DbType="Int")]
		public System.Nullable<int> ID_FK
		{
			get
			{
				return this._ID_FK;
			}
			set
			{
				if ((this._ID_FK != value))
				{
					this.OnID_FKChanging(value);
					this.SendPropertyChanging();
					this._ID_FK = value;
					this.SendPropertyChanged("ID_FK");
					this.OnID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish", DbType="Bit NOT NULL")]
		public bool Publish
		{
			get
			{
				return this._Publish;
			}
			set
			{
				if ((this._Publish != value))
				{
					this.OnPublishChanging(value);
					this.SendPropertyChanging();
					this._Publish = value;
					this.SendPropertyChanged("Publish");
					this.OnPublishChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_Day")]
	public partial class Planinglist_Day : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DID;
		
		private System.DateTime _Day;
		
		private bool _Publish;
		
		private EntitySet<Planinglist_Object> _Planinglist_Objects;
		
		private EntitySet<Planinglist_Site> _Planinglist_Sites;
		
		private EntitySet<PlanningList_Comment> _PlanningList_Comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDIDChanging(int value);
    partial void OnDIDChanged();
    partial void OnDayChanging(System.DateTime value);
    partial void OnDayChanged();
    partial void OnPublishChanging(bool value);
    partial void OnPublishChanged();
    #endregion
		
		public Planinglist_Day()
		{
			this._Planinglist_Objects = new EntitySet<Planinglist_Object>(new Action<Planinglist_Object>(this.attach_Planinglist_Objects), new Action<Planinglist_Object>(this.detach_Planinglist_Objects));
			this._Planinglist_Sites = new EntitySet<Planinglist_Site>(new Action<Planinglist_Site>(this.attach_Planinglist_Sites), new Action<Planinglist_Site>(this.detach_Planinglist_Sites));
			this._PlanningList_Comments = new EntitySet<PlanningList_Comment>(new Action<PlanningList_Comment>(this.attach_PlanningList_Comments), new Action<PlanningList_Comment>(this.detach_PlanningList_Comments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DID
		{
			get
			{
				return this._DID;
			}
			set
			{
				if ((this._DID != value))
				{
					this.OnDIDChanging(value);
					this.SendPropertyChanging();
					this._DID = value;
					this.SendPropertyChanged("DID");
					this.OnDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="DateTime NOT NULL")]
		public System.DateTime Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish", DbType="Bit NOT NULL")]
		public bool Publish
		{
			get
			{
				return this._Publish;
			}
			set
			{
				if ((this._Publish != value))
				{
					this.OnPublishChanging(value);
					this.SendPropertyChanging();
					this._Publish = value;
					this.SendPropertyChanged("Publish");
					this.OnPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Day_Planinglist_Object", Storage="_Planinglist_Objects", ThisKey="DID", OtherKey="DAY_FK")]
		public EntitySet<Planinglist_Object> Planinglist_Objects
		{
			get
			{
				return this._Planinglist_Objects;
			}
			set
			{
				this._Planinglist_Objects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Day_Planinglist_Site", Storage="_Planinglist_Sites", ThisKey="DID", OtherKey="DID_FK")]
		public EntitySet<Planinglist_Site> Planinglist_Sites
		{
			get
			{
				return this._Planinglist_Sites;
			}
			set
			{
				this._Planinglist_Sites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Day_PlanningList_Comment", Storage="_PlanningList_Comments", ThisKey="DID", OtherKey="DayID_FK")]
		public EntitySet<PlanningList_Comment> PlanningList_Comments
		{
			get
			{
				return this._PlanningList_Comments;
			}
			set
			{
				this._PlanningList_Comments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planinglist_Objects(Planinglist_Object entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Day = this;
		}
		
		private void detach_Planinglist_Objects(Planinglist_Object entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Day = null;
		}
		
		private void attach_Planinglist_Sites(Planinglist_Site entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Day = this;
		}
		
		private void detach_Planinglist_Sites(Planinglist_Site entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Day = null;
		}
		
		private void attach_PlanningList_Comments(PlanningList_Comment entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Day = this;
		}
		
		private void detach_PlanningList_Comments(PlanningList_Comment entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Day = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_Object")]
	public partial class Planinglist_Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private int _DAY_FK;
		
		private int _Type;
		
		private string _Value;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _Name;
		
		private string _Forman;
		
		private int _Project_FK;
		
		private EntitySet<Planinglist_ObjectHatch> _Planinglist_ObjectHatches;
		
		private EntitySet<Planininglist_ObjectXResource> _Planininglist_ObjectXResources;
		
		private EntityRef<Planinglist_Day> _Planinglist_Day;
		
		private EntityRef<Planinglist_ObjectType> _Planinglist_ObjectType;
		
		private EntityRef<PlanningList_Project> _PlanningList_Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnDAY_FKChanging(int value);
    partial void OnDAY_FKChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFormanChanging(string value);
    partial void OnFormanChanged();
    partial void OnProject_FKChanging(int value);
    partial void OnProject_FKChanged();
    #endregion
		
		public Planinglist_Object()
		{
			this._Planinglist_ObjectHatches = new EntitySet<Planinglist_ObjectHatch>(new Action<Planinglist_ObjectHatch>(this.attach_Planinglist_ObjectHatches), new Action<Planinglist_ObjectHatch>(this.detach_Planinglist_ObjectHatches));
			this._Planininglist_ObjectXResources = new EntitySet<Planininglist_ObjectXResource>(new Action<Planininglist_ObjectXResource>(this.attach_Planininglist_ObjectXResources), new Action<Planininglist_ObjectXResource>(this.detach_Planininglist_ObjectXResources));
			this._Planinglist_Day = default(EntityRef<Planinglist_Day>);
			this._Planinglist_ObjectType = default(EntityRef<Planinglist_ObjectType>);
			this._PlanningList_Project = default(EntityRef<PlanningList_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAY_FK", DbType="Int NOT NULL")]
		public int DAY_FK
		{
			get
			{
				return this._DAY_FK;
			}
			set
			{
				if ((this._DAY_FK != value))
				{
					if (this._Planinglist_Day.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDAY_FKChanging(value);
					this.SendPropertyChanging();
					this._DAY_FK = value;
					this.SendPropertyChanged("DAY_FK");
					this.OnDAY_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._Planinglist_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(255)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(155)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forman", DbType="NVarChar(50)")]
		public string Forman
		{
			get
			{
				return this._Forman;
			}
			set
			{
				if ((this._Forman != value))
				{
					this.OnFormanChanging(value);
					this.SendPropertyChanging();
					this._Forman = value;
					this.SendPropertyChanged("Forman");
					this.OnFormanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_FK", DbType="Int NOT NULL")]
		public int Project_FK
		{
			get
			{
				return this._Project_FK;
			}
			set
			{
				if ((this._Project_FK != value))
				{
					if (this._PlanningList_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_FKChanging(value);
					this.SendPropertyChanging();
					this._Project_FK = value;
					this.SendPropertyChanged("Project_FK");
					this.OnProject_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Object_Planinglist_ObjectHatch", Storage="_Planinglist_ObjectHatches", ThisKey="OID", OtherKey="OID_FK")]
		public EntitySet<Planinglist_ObjectHatch> Planinglist_ObjectHatches
		{
			get
			{
				return this._Planinglist_ObjectHatches;
			}
			set
			{
				this._Planinglist_ObjectHatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Object_Planininglist_ObjectXResource", Storage="_Planininglist_ObjectXResources", ThisKey="OID", OtherKey="OID_FK")]
		public EntitySet<Planininglist_ObjectXResource> Planininglist_ObjectXResources
		{
			get
			{
				return this._Planininglist_ObjectXResources;
			}
			set
			{
				this._Planininglist_ObjectXResources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Day_Planinglist_Object", Storage="_Planinglist_Day", ThisKey="DAY_FK", OtherKey="DID", IsForeignKey=true)]
		public Planinglist_Day Planinglist_Day
		{
			get
			{
				return this._Planinglist_Day.Entity;
			}
			set
			{
				Planinglist_Day previousValue = this._Planinglist_Day.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_Day.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_Day.Entity = null;
						previousValue.Planinglist_Objects.Remove(this);
					}
					this._Planinglist_Day.Entity = value;
					if ((value != null))
					{
						value.Planinglist_Objects.Add(this);
						this._DAY_FK = value.DID;
					}
					else
					{
						this._DAY_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_Day");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ObjectType_Planinglist_Object", Storage="_Planinglist_ObjectType", ThisKey="Type", OtherKey="TID", IsForeignKey=true)]
		public Planinglist_ObjectType Planinglist_ObjectType
		{
			get
			{
				return this._Planinglist_ObjectType.Entity;
			}
			set
			{
				Planinglist_ObjectType previousValue = this._Planinglist_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_ObjectType.Entity = null;
						previousValue.Planinglist_Objects.Remove(this);
					}
					this._Planinglist_ObjectType.Entity = value;
					if ((value != null))
					{
						value.Planinglist_Objects.Add(this);
						this._Type = value.TID;
					}
					else
					{
						this._Type = default(int);
					}
					this.SendPropertyChanged("Planinglist_ObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanningList_Project_Planinglist_Object", Storage="_PlanningList_Project", ThisKey="Project_FK", OtherKey="ID", IsForeignKey=true)]
		public PlanningList_Project PlanningList_Project
		{
			get
			{
				return this._PlanningList_Project.Entity;
			}
			set
			{
				PlanningList_Project previousValue = this._PlanningList_Project.Entity;
				if (((previousValue != value) 
							|| (this._PlanningList_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanningList_Project.Entity = null;
						previousValue.Planinglist_Objects.Remove(this);
					}
					this._PlanningList_Project.Entity = value;
					if ((value != null))
					{
						value.Planinglist_Objects.Add(this);
						this._Project_FK = value.ID;
					}
					else
					{
						this._Project_FK = default(int);
					}
					this.SendPropertyChanged("PlanningList_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planinglist_ObjectHatches(Planinglist_ObjectHatch entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Object = this;
		}
		
		private void detach_Planinglist_ObjectHatches(Planinglist_ObjectHatch entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Object = null;
		}
		
		private void attach_Planininglist_ObjectXResources(Planininglist_ObjectXResource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Object = this;
		}
		
		private void detach_Planininglist_ObjectXResources(Planininglist_ObjectXResource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Object = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_ObjectArea")]
	public partial class Planinglist_ObjectArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OID_FK;
		
		private int _AID_FK;
		
		private string _Value;
		
		private int _HID_FK;
		
		private EntitySet<Planinglist_ObjectAreaXResource> _Planinglist_ObjectAreaXResources;
		
		private EntityRef<Planinglist_Area> _Planinglist_Area;
		
		private EntityRef<Planinglist_ObjectHatch> _Planinglist_ObjectHatch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOID_FKChanging(int value);
    partial void OnOID_FKChanged();
    partial void OnAID_FKChanging(int value);
    partial void OnAID_FKChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnHID_FKChanging(int value);
    partial void OnHID_FKChanged();
    #endregion
		
		public Planinglist_ObjectArea()
		{
			this._Planinglist_ObjectAreaXResources = new EntitySet<Planinglist_ObjectAreaXResource>(new Action<Planinglist_ObjectAreaXResource>(this.attach_Planinglist_ObjectAreaXResources), new Action<Planinglist_ObjectAreaXResource>(this.detach_Planinglist_ObjectAreaXResources));
			this._Planinglist_Area = default(EntityRef<Planinglist_Area>);
			this._Planinglist_ObjectHatch = default(EntityRef<Planinglist_ObjectHatch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID_FK", DbType="Int NOT NULL")]
		public int OID_FK
		{
			get
			{
				return this._OID_FK;
			}
			set
			{
				if ((this._OID_FK != value))
				{
					this.OnOID_FKChanging(value);
					this.SendPropertyChanging();
					this._OID_FK = value;
					this.SendPropertyChanged("OID_FK");
					this.OnOID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID_FK", DbType="Int NOT NULL")]
		public int AID_FK
		{
			get
			{
				return this._AID_FK;
			}
			set
			{
				if ((this._AID_FK != value))
				{
					if (this._Planinglist_Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAID_FKChanging(value);
					this.SendPropertyChanging();
					this._AID_FK = value;
					this.SendPropertyChanged("AID_FK");
					this.OnAID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HID_FK", DbType="Int NOT NULL")]
		public int HID_FK
		{
			get
			{
				return this._HID_FK;
			}
			set
			{
				if ((this._HID_FK != value))
				{
					if (this._Planinglist_ObjectHatch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHID_FKChanging(value);
					this.SendPropertyChanging();
					this._HID_FK = value;
					this.SendPropertyChanged("HID_FK");
					this.OnHID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ObjectArea_Planinglist_ObjectAreaXResource", Storage="_Planinglist_ObjectAreaXResources", ThisKey="ID", OtherKey="ID_FK")]
		public EntitySet<Planinglist_ObjectAreaXResource> Planinglist_ObjectAreaXResources
		{
			get
			{
				return this._Planinglist_ObjectAreaXResources;
			}
			set
			{
				this._Planinglist_ObjectAreaXResources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Area_Planinglist_ObjectArea", Storage="_Planinglist_Area", ThisKey="AID_FK", OtherKey="AID", IsForeignKey=true)]
		public Planinglist_Area Planinglist_Area
		{
			get
			{
				return this._Planinglist_Area.Entity;
			}
			set
			{
				Planinglist_Area previousValue = this._Planinglist_Area.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_Area.Entity = null;
						previousValue.Planinglist_ObjectAreas.Remove(this);
					}
					this._Planinglist_Area.Entity = value;
					if ((value != null))
					{
						value.Planinglist_ObjectAreas.Add(this);
						this._AID_FK = value.AID;
					}
					else
					{
						this._AID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ObjectHatch_Planinglist_ObjectArea", Storage="_Planinglist_ObjectHatch", ThisKey="HID_FK", OtherKey="HID", IsForeignKey=true)]
		public Planinglist_ObjectHatch Planinglist_ObjectHatch
		{
			get
			{
				return this._Planinglist_ObjectHatch.Entity;
			}
			set
			{
				Planinglist_ObjectHatch previousValue = this._Planinglist_ObjectHatch.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_ObjectHatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_ObjectHatch.Entity = null;
						previousValue.Planinglist_ObjectAreas.Remove(this);
					}
					this._Planinglist_ObjectHatch.Entity = value;
					if ((value != null))
					{
						value.Planinglist_ObjectAreas.Add(this);
						this._HID_FK = value.HID;
					}
					else
					{
						this._HID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_ObjectHatch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planinglist_ObjectAreaXResources(Planinglist_ObjectAreaXResource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ObjectArea = this;
		}
		
		private void detach_Planinglist_ObjectAreaXResources(Planinglist_ObjectAreaXResource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ObjectArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_ObjectAreaXResource")]
	public partial class Planinglist_ObjectAreaXResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XID;
		
		private int _ID_FK;
		
		private int _RID_FK;
		
		private string _ShortComment;
		
		private string _LongComment;
		
		private bool _Publish;
		
		private System.Nullable<int> _XID_FK;
		
		private string _bgColor;
		
		private EntityRef<Planinglist_ObjectArea> _Planinglist_ObjectArea;
		
		private EntityRef<Planinglist_Resource> _Planinglist_Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXIDChanging(int value);
    partial void OnXIDChanged();
    partial void OnID_FKChanging(int value);
    partial void OnID_FKChanged();
    partial void OnRID_FKChanging(int value);
    partial void OnRID_FKChanged();
    partial void OnShortCommentChanging(string value);
    partial void OnShortCommentChanged();
    partial void OnLongCommentChanging(string value);
    partial void OnLongCommentChanged();
    partial void OnPublishChanging(bool value);
    partial void OnPublishChanged();
    partial void OnXID_FKChanging(System.Nullable<int> value);
    partial void OnXID_FKChanged();
    partial void OnbgColorChanging(string value);
    partial void OnbgColorChanged();
    #endregion
		
		public Planinglist_ObjectAreaXResource()
		{
			this._Planinglist_ObjectArea = default(EntityRef<Planinglist_ObjectArea>);
			this._Planinglist_Resource = default(EntityRef<Planinglist_Resource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XID
		{
			get
			{
				return this._XID;
			}
			set
			{
				if ((this._XID != value))
				{
					this.OnXIDChanging(value);
					this.SendPropertyChanging();
					this._XID = value;
					this.SendPropertyChanged("XID");
					this.OnXIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FK", DbType="Int NOT NULL")]
		public int ID_FK
		{
			get
			{
				return this._ID_FK;
			}
			set
			{
				if ((this._ID_FK != value))
				{
					if (this._Planinglist_ObjectArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_FKChanging(value);
					this.SendPropertyChanging();
					this._ID_FK = value;
					this.SendPropertyChanged("ID_FK");
					this.OnID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID_FK", DbType="Int NOT NULL")]
		public int RID_FK
		{
			get
			{
				return this._RID_FK;
			}
			set
			{
				if ((this._RID_FK != value))
				{
					if (this._Planinglist_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRID_FKChanging(value);
					this.SendPropertyChanging();
					this._RID_FK = value;
					this.SendPropertyChanged("RID_FK");
					this.OnRID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortComment", DbType="NVarChar(255)")]
		public string ShortComment
		{
			get
			{
				return this._ShortComment;
			}
			set
			{
				if ((this._ShortComment != value))
				{
					this.OnShortCommentChanging(value);
					this.SendPropertyChanging();
					this._ShortComment = value;
					this.SendPropertyChanged("ShortComment");
					this.OnShortCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongComment", DbType="NVarChar(MAX)")]
		public string LongComment
		{
			get
			{
				return this._LongComment;
			}
			set
			{
				if ((this._LongComment != value))
				{
					this.OnLongCommentChanging(value);
					this.SendPropertyChanging();
					this._LongComment = value;
					this.SendPropertyChanged("LongComment");
					this.OnLongCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish", DbType="Bit NOT NULL")]
		public bool Publish
		{
			get
			{
				return this._Publish;
			}
			set
			{
				if ((this._Publish != value))
				{
					this.OnPublishChanging(value);
					this.SendPropertyChanging();
					this._Publish = value;
					this.SendPropertyChanged("Publish");
					this.OnPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XID_FK", DbType="Int")]
		public System.Nullable<int> XID_FK
		{
			get
			{
				return this._XID_FK;
			}
			set
			{
				if ((this._XID_FK != value))
				{
					this.OnXID_FKChanging(value);
					this.SendPropertyChanging();
					this._XID_FK = value;
					this.SendPropertyChanged("XID_FK");
					this.OnXID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bgColor", DbType="NVarChar(20)")]
		public string bgColor
		{
			get
			{
				return this._bgColor;
			}
			set
			{
				if ((this._bgColor != value))
				{
					this.OnbgColorChanging(value);
					this.SendPropertyChanging();
					this._bgColor = value;
					this.SendPropertyChanged("bgColor");
					this.OnbgColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ObjectArea_Planinglist_ObjectAreaXResource", Storage="_Planinglist_ObjectArea", ThisKey="ID_FK", OtherKey="ID", IsForeignKey=true)]
		public Planinglist_ObjectArea Planinglist_ObjectArea
		{
			get
			{
				return this._Planinglist_ObjectArea.Entity;
			}
			set
			{
				Planinglist_ObjectArea previousValue = this._Planinglist_ObjectArea.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_ObjectArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_ObjectArea.Entity = null;
						previousValue.Planinglist_ObjectAreaXResources.Remove(this);
					}
					this._Planinglist_ObjectArea.Entity = value;
					if ((value != null))
					{
						value.Planinglist_ObjectAreaXResources.Add(this);
						this._ID_FK = value.ID;
					}
					else
					{
						this._ID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_ObjectArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Resource_Planinglist_ObjectAreaXResource", Storage="_Planinglist_Resource", ThisKey="RID_FK", OtherKey="RID", IsForeignKey=true)]
		public Planinglist_Resource Planinglist_Resource
		{
			get
			{
				return this._Planinglist_Resource.Entity;
			}
			set
			{
				Planinglist_Resource previousValue = this._Planinglist_Resource.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_Resource.Entity = null;
						previousValue.Planinglist_ObjectAreaXResources.Remove(this);
					}
					this._Planinglist_Resource.Entity = value;
					if ((value != null))
					{
						value.Planinglist_ObjectAreaXResources.Add(this);
						this._RID_FK = value.RID;
					}
					else
					{
						this._RID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_ObjectHatch")]
	public partial class Planinglist_ObjectHatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HID;
		
		private int _OID_FK;
		
		private string _Hatch;
		
		private string _RadioChannel;
		
		private string _Kbmton;
		
		private string _Cargo;
		
		private EntitySet<Planinglist_ObjectArea> _Planinglist_ObjectAreas;
		
		private EntityRef<Planinglist_Object> _Planinglist_Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHIDChanging(int value);
    partial void OnHIDChanged();
    partial void OnOID_FKChanging(int value);
    partial void OnOID_FKChanged();
    partial void OnHatchChanging(string value);
    partial void OnHatchChanged();
    partial void OnRadioChannelChanging(string value);
    partial void OnRadioChannelChanged();
    partial void OnKbmtonChanging(string value);
    partial void OnKbmtonChanged();
    partial void OnCargoChanging(string value);
    partial void OnCargoChanged();
    #endregion
		
		public Planinglist_ObjectHatch()
		{
			this._Planinglist_ObjectAreas = new EntitySet<Planinglist_ObjectArea>(new Action<Planinglist_ObjectArea>(this.attach_Planinglist_ObjectAreas), new Action<Planinglist_ObjectArea>(this.detach_Planinglist_ObjectAreas));
			this._Planinglist_Object = default(EntityRef<Planinglist_Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HID
		{
			get
			{
				return this._HID;
			}
			set
			{
				if ((this._HID != value))
				{
					this.OnHIDChanging(value);
					this.SendPropertyChanging();
					this._HID = value;
					this.SendPropertyChanged("HID");
					this.OnHIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID_FK", DbType="Int NOT NULL")]
		public int OID_FK
		{
			get
			{
				return this._OID_FK;
			}
			set
			{
				if ((this._OID_FK != value))
				{
					if (this._Planinglist_Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOID_FKChanging(value);
					this.SendPropertyChanging();
					this._OID_FK = value;
					this.SendPropertyChanged("OID_FK");
					this.OnOID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hatch", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Hatch
		{
			get
			{
				return this._Hatch;
			}
			set
			{
				if ((this._Hatch != value))
				{
					this.OnHatchChanging(value);
					this.SendPropertyChanging();
					this._Hatch = value;
					this.SendPropertyChanged("Hatch");
					this.OnHatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadioChannel", DbType="NVarChar(10)")]
		public string RadioChannel
		{
			get
			{
				return this._RadioChannel;
			}
			set
			{
				if ((this._RadioChannel != value))
				{
					this.OnRadioChannelChanging(value);
					this.SendPropertyChanging();
					this._RadioChannel = value;
					this.SendPropertyChanged("RadioChannel");
					this.OnRadioChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kbmton", DbType="NVarChar(100)")]
		public string Kbmton
		{
			get
			{
				return this._Kbmton;
			}
			set
			{
				if ((this._Kbmton != value))
				{
					this.OnKbmtonChanging(value);
					this.SendPropertyChanging();
					this._Kbmton = value;
					this.SendPropertyChanged("Kbmton");
					this.OnKbmtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="NVarChar(100)")]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this.OnCargoChanging(value);
					this.SendPropertyChanging();
					this._Cargo = value;
					this.SendPropertyChanged("Cargo");
					this.OnCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ObjectHatch_Planinglist_ObjectArea", Storage="_Planinglist_ObjectAreas", ThisKey="HID", OtherKey="HID_FK")]
		public EntitySet<Planinglist_ObjectArea> Planinglist_ObjectAreas
		{
			get
			{
				return this._Planinglist_ObjectAreas;
			}
			set
			{
				this._Planinglist_ObjectAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Object_Planinglist_ObjectHatch", Storage="_Planinglist_Object", ThisKey="OID_FK", OtherKey="OID", IsForeignKey=true)]
		public Planinglist_Object Planinglist_Object
		{
			get
			{
				return this._Planinglist_Object.Entity;
			}
			set
			{
				Planinglist_Object previousValue = this._Planinglist_Object.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_Object.Entity = null;
						previousValue.Planinglist_ObjectHatches.Remove(this);
					}
					this._Planinglist_Object.Entity = value;
					if ((value != null))
					{
						value.Planinglist_ObjectHatches.Add(this);
						this._OID_FK = value.OID;
					}
					else
					{
						this._OID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planinglist_ObjectAreas(Planinglist_ObjectArea entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ObjectHatch = this;
		}
		
		private void detach_Planinglist_ObjectAreas(Planinglist_ObjectArea entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ObjectHatch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_ObjectType")]
	public partial class Planinglist_ObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Planinglist_Object> _Planinglist_Objects;
		
		private EntitySet<PlanningList_Project> _PlanningList_Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIDChanging(int value);
    partial void OnTIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Planinglist_ObjectType()
		{
			this._Planinglist_Objects = new EntitySet<Planinglist_Object>(new Action<Planinglist_Object>(this.attach_Planinglist_Objects), new Action<Planinglist_Object>(this.detach_Planinglist_Objects));
			this._PlanningList_Projects = new EntitySet<PlanningList_Project>(new Action<PlanningList_Project>(this.attach_PlanningList_Projects), new Action<PlanningList_Project>(this.detach_PlanningList_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					this.OnTIDChanging(value);
					this.SendPropertyChanging();
					this._TID = value;
					this.SendPropertyChanged("TID");
					this.OnTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(70)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ObjectType_Planinglist_Object", Storage="_Planinglist_Objects", ThisKey="TID", OtherKey="Type")]
		public EntitySet<Planinglist_Object> Planinglist_Objects
		{
			get
			{
				return this._Planinglist_Objects;
			}
			set
			{
				this._Planinglist_Objects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ObjectType_PlanningList_Project", Storage="_PlanningList_Projects", ThisKey="TID", OtherKey="TypeID_FK")]
		public EntitySet<PlanningList_Project> PlanningList_Projects
		{
			get
			{
				return this._PlanningList_Projects;
			}
			set
			{
				this._PlanningList_Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planinglist_Objects(Planinglist_Object entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ObjectType = this;
		}
		
		private void detach_Planinglist_Objects(Planinglist_Object entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ObjectType = null;
		}
		
		private void attach_PlanningList_Projects(PlanningList_Project entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ObjectType = this;
		}
		
		private void detach_PlanningList_Projects(PlanningList_Project entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_Resource")]
	public partial class Planinglist_Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RID;
		
		private int _Type;
		
		private System.Nullable<System.Guid> _UserId_FK;
		
		private string _Name;
		
		private string _No;
		
		private string _Value;
		
		private bool _Passive;
		
		private EntitySet<Planinglist_ObjectAreaXResource> _Planinglist_ObjectAreaXResources;
		
		private EntitySet<Planininglist_ObjectXResource> _Planininglist_ObjectXResources;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Planinglist_ResourceType> _Planinglist_ResourceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRIDChanging(int value);
    partial void OnRIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnUserId_FKChanging(System.Nullable<System.Guid> value);
    partial void OnUserId_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNoChanging(string value);
    partial void OnNoChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnPassiveChanging(bool value);
    partial void OnPassiveChanged();
    #endregion
		
		public Planinglist_Resource()
		{
			this._Planinglist_ObjectAreaXResources = new EntitySet<Planinglist_ObjectAreaXResource>(new Action<Planinglist_ObjectAreaXResource>(this.attach_Planinglist_ObjectAreaXResources), new Action<Planinglist_ObjectAreaXResource>(this.detach_Planinglist_ObjectAreaXResources));
			this._Planininglist_ObjectXResources = new EntitySet<Planininglist_ObjectXResource>(new Action<Planininglist_ObjectXResource>(this.attach_Planininglist_ObjectXResources), new Action<Planininglist_ObjectXResource>(this.detach_Planininglist_ObjectXResources));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Planinglist_ResourceType = default(EntityRef<Planinglist_ResourceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._Planinglist_ResourceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId_FK", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId_FK
		{
			get
			{
				return this._UserId_FK;
			}
			set
			{
				if ((this._UserId_FK != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserId_FKChanging(value);
					this.SendPropertyChanging();
					this._UserId_FK = value;
					this.SendPropertyChanged("UserId_FK");
					this.OnUserId_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="NVarChar(50)")]
		public string No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passive", DbType="Bit NOT NULL")]
		public bool Passive
		{
			get
			{
				return this._Passive;
			}
			set
			{
				if ((this._Passive != value))
				{
					this.OnPassiveChanging(value);
					this.SendPropertyChanging();
					this._Passive = value;
					this.SendPropertyChanged("Passive");
					this.OnPassiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Resource_Planinglist_ObjectAreaXResource", Storage="_Planinglist_ObjectAreaXResources", ThisKey="RID", OtherKey="RID_FK")]
		public EntitySet<Planinglist_ObjectAreaXResource> Planinglist_ObjectAreaXResources
		{
			get
			{
				return this._Planinglist_ObjectAreaXResources;
			}
			set
			{
				this._Planinglist_ObjectAreaXResources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Resource_Planininglist_ObjectXResource", Storage="_Planininglist_ObjectXResources", ThisKey="RID", OtherKey="RID_FK")]
		public EntitySet<Planininglist_ObjectXResource> Planininglist_ObjectXResources
		{
			get
			{
				return this._Planininglist_ObjectXResources;
			}
			set
			{
				this._Planininglist_ObjectXResources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Planinglist_Resource", Storage="_aspnet_User", ThisKey="UserId_FK", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Planinglist_Resources.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Planinglist_Resources.Add(this);
						this._UserId_FK = value.UserId;
					}
					else
					{
						this._UserId_FK = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ResourceType_Planinglist_Resource", Storage="_Planinglist_ResourceType", ThisKey="Type", OtherKey="RTID", IsForeignKey=true)]
		public Planinglist_ResourceType Planinglist_ResourceType
		{
			get
			{
				return this._Planinglist_ResourceType.Entity;
			}
			set
			{
				Planinglist_ResourceType previousValue = this._Planinglist_ResourceType.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_ResourceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_ResourceType.Entity = null;
						previousValue.Planinglist_Resources.Remove(this);
					}
					this._Planinglist_ResourceType.Entity = value;
					if ((value != null))
					{
						value.Planinglist_Resources.Add(this);
						this._Type = value.RTID;
					}
					else
					{
						this._Type = default(int);
					}
					this.SendPropertyChanged("Planinglist_ResourceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planinglist_ObjectAreaXResources(Planinglist_ObjectAreaXResource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Resource = this;
		}
		
		private void detach_Planinglist_ObjectAreaXResources(Planinglist_ObjectAreaXResource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Resource = null;
		}
		
		private void attach_Planininglist_ObjectXResources(Planininglist_ObjectXResource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Resource = this;
		}
		
		private void detach_Planininglist_ObjectXResources(Planininglist_ObjectXResource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_Resource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_ResourceType")]
	public partial class Planinglist_ResourceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RTID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Planinglist_Resource> _Planinglist_Resources;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRTIDChanging(int value);
    partial void OnRTIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Planinglist_ResourceType()
		{
			this._Planinglist_Resources = new EntitySet<Planinglist_Resource>(new Action<Planinglist_Resource>(this.attach_Planinglist_Resources), new Action<Planinglist_Resource>(this.detach_Planinglist_Resources));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RTID
		{
			get
			{
				return this._RTID;
			}
			set
			{
				if ((this._RTID != value))
				{
					this.OnRTIDChanging(value);
					this.SendPropertyChanging();
					this._RTID = value;
					this.SendPropertyChanged("RTID");
					this.OnRTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(70)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ResourceType_Planinglist_Resource", Storage="_Planinglist_Resources", ThisKey="RTID", OtherKey="Type")]
		public EntitySet<Planinglist_Resource> Planinglist_Resources
		{
			get
			{
				return this._Planinglist_Resources;
			}
			set
			{
				this._Planinglist_Resources.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planinglist_Resources(Planinglist_Resource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ResourceType = this;
		}
		
		private void detach_Planinglist_Resources(Planinglist_Resource entity)
		{
			this.SendPropertyChanging();
			entity.Planinglist_ResourceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planinglist_Site")]
	public partial class Planinglist_Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID_FK;
		
		private int _DID_FK;
		
		private EntityRef<Planinglist_Day> _Planinglist_Day;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteID_FKChanging(int value);
    partial void OnSiteID_FKChanged();
    partial void OnDID_FKChanging(int value);
    partial void OnDID_FKChanged();
    #endregion
		
		public Planinglist_Site()
		{
			this._Planinglist_Day = default(EntityRef<Planinglist_Day>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID_FK", DbType="Int NOT NULL")]
		public int SiteID_FK
		{
			get
			{
				return this._SiteID_FK;
			}
			set
			{
				if ((this._SiteID_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteID_FKChanging(value);
					this.SendPropertyChanging();
					this._SiteID_FK = value;
					this.SendPropertyChanged("SiteID_FK");
					this.OnSiteID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DID_FK", DbType="Int NOT NULL")]
		public int DID_FK
		{
			get
			{
				return this._DID_FK;
			}
			set
			{
				if ((this._DID_FK != value))
				{
					if (this._Planinglist_Day.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDID_FKChanging(value);
					this.SendPropertyChanging();
					this._DID_FK = value;
					this.SendPropertyChanged("DID_FK");
					this.OnDID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Day_Planinglist_Site", Storage="_Planinglist_Day", ThisKey="DID_FK", OtherKey="DID", IsForeignKey=true)]
		public Planinglist_Day Planinglist_Day
		{
			get
			{
				return this._Planinglist_Day.Entity;
			}
			set
			{
				Planinglist_Day previousValue = this._Planinglist_Day.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_Day.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_Day.Entity = null;
						previousValue.Planinglist_Sites.Remove(this);
					}
					this._Planinglist_Day.Entity = value;
					if ((value != null))
					{
						value.Planinglist_Sites.Add(this);
						this._DID_FK = value.DID;
					}
					else
					{
						this._DID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_Day");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Planinglist_Site", Storage="_Site", ThisKey="SiteID_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Planinglist_Sites.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Planinglist_Sites.Add(this);
						this._SiteID_FK = value.SiteID;
					}
					else
					{
						this._SiteID_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planininglist_ObjectXResource")]
	public partial class Planininglist_ObjectXResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XID;
		
		private int _OID_FK;
		
		private int _RID_FK;
		
		private string _Shortcomment;
		
		private string _LongComment;
		
		private bool _Publish;
		
		private string _bgColor;
		
		private EntityRef<Planinglist_Object> _Planinglist_Object;
		
		private EntityRef<Planinglist_Resource> _Planinglist_Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXIDChanging(int value);
    partial void OnXIDChanged();
    partial void OnOID_FKChanging(int value);
    partial void OnOID_FKChanged();
    partial void OnRID_FKChanging(int value);
    partial void OnRID_FKChanged();
    partial void OnShortcommentChanging(string value);
    partial void OnShortcommentChanged();
    partial void OnLongCommentChanging(string value);
    partial void OnLongCommentChanged();
    partial void OnPublishChanging(bool value);
    partial void OnPublishChanged();
    partial void OnbgColorChanging(string value);
    partial void OnbgColorChanged();
    #endregion
		
		public Planininglist_ObjectXResource()
		{
			this._Planinglist_Object = default(EntityRef<Planinglist_Object>);
			this._Planinglist_Resource = default(EntityRef<Planinglist_Resource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XID
		{
			get
			{
				return this._XID;
			}
			set
			{
				if ((this._XID != value))
				{
					this.OnXIDChanging(value);
					this.SendPropertyChanging();
					this._XID = value;
					this.SendPropertyChanged("XID");
					this.OnXIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID_FK", DbType="Int NOT NULL")]
		public int OID_FK
		{
			get
			{
				return this._OID_FK;
			}
			set
			{
				if ((this._OID_FK != value))
				{
					if (this._Planinglist_Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOID_FKChanging(value);
					this.SendPropertyChanging();
					this._OID_FK = value;
					this.SendPropertyChanged("OID_FK");
					this.OnOID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID_FK", DbType="Int NOT NULL")]
		public int RID_FK
		{
			get
			{
				return this._RID_FK;
			}
			set
			{
				if ((this._RID_FK != value))
				{
					if (this._Planinglist_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRID_FKChanging(value);
					this.SendPropertyChanging();
					this._RID_FK = value;
					this.SendPropertyChanged("RID_FK");
					this.OnRID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortcomment", DbType="NVarChar(255)")]
		public string Shortcomment
		{
			get
			{
				return this._Shortcomment;
			}
			set
			{
				if ((this._Shortcomment != value))
				{
					this.OnShortcommentChanging(value);
					this.SendPropertyChanging();
					this._Shortcomment = value;
					this.SendPropertyChanged("Shortcomment");
					this.OnShortcommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongComment", DbType="NVarChar(MAX)")]
		public string LongComment
		{
			get
			{
				return this._LongComment;
			}
			set
			{
				if ((this._LongComment != value))
				{
					this.OnLongCommentChanging(value);
					this.SendPropertyChanging();
					this._LongComment = value;
					this.SendPropertyChanged("LongComment");
					this.OnLongCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish", DbType="Bit NOT NULL")]
		public bool Publish
		{
			get
			{
				return this._Publish;
			}
			set
			{
				if ((this._Publish != value))
				{
					this.OnPublishChanging(value);
					this.SendPropertyChanging();
					this._Publish = value;
					this.SendPropertyChanged("Publish");
					this.OnPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bgColor", DbType="NVarChar(20)")]
		public string bgColor
		{
			get
			{
				return this._bgColor;
			}
			set
			{
				if ((this._bgColor != value))
				{
					this.OnbgColorChanging(value);
					this.SendPropertyChanging();
					this._bgColor = value;
					this.SendPropertyChanged("bgColor");
					this.OnbgColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Object_Planininglist_ObjectXResource", Storage="_Planinglist_Object", ThisKey="OID_FK", OtherKey="OID", IsForeignKey=true)]
		public Planinglist_Object Planinglist_Object
		{
			get
			{
				return this._Planinglist_Object.Entity;
			}
			set
			{
				Planinglist_Object previousValue = this._Planinglist_Object.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_Object.Entity = null;
						previousValue.Planininglist_ObjectXResources.Remove(this);
					}
					this._Planinglist_Object.Entity = value;
					if ((value != null))
					{
						value.Planininglist_ObjectXResources.Add(this);
						this._OID_FK = value.OID;
					}
					else
					{
						this._OID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_Object");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Resource_Planininglist_ObjectXResource", Storage="_Planinglist_Resource", ThisKey="RID_FK", OtherKey="RID", IsForeignKey=true)]
		public Planinglist_Resource Planinglist_Resource
		{
			get
			{
				return this._Planinglist_Resource.Entity;
			}
			set
			{
				Planinglist_Resource previousValue = this._Planinglist_Resource.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_Resource.Entity = null;
						previousValue.Planininglist_ObjectXResources.Remove(this);
					}
					this._Planinglist_Resource.Entity = value;
					if ((value != null))
					{
						value.Planininglist_ObjectXResources.Add(this);
						this._RID_FK = value.RID;
					}
					else
					{
						this._RID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanningList_Comments")]
	public partial class PlanningList_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CommentLabel;
		
		private string _CommentText;
		
		private int _DayID_FK;
		
		private bool _Published;
		
		private bool _Deleted;
		
		private EntityRef<Planinglist_Day> _Planinglist_Day;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCommentLabelChanging(string value);
    partial void OnCommentLabelChanged();
    partial void OnCommentTextChanging(string value);
    partial void OnCommentTextChanged();
    partial void OnDayID_FKChanging(int value);
    partial void OnDayID_FKChanged();
    partial void OnPublishedChanging(bool value);
    partial void OnPublishedChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public PlanningList_Comment()
		{
			this._Planinglist_Day = default(EntityRef<Planinglist_Day>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentLabel", DbType="NVarChar(50)")]
		public string CommentLabel
		{
			get
			{
				return this._CommentLabel;
			}
			set
			{
				if ((this._CommentLabel != value))
				{
					this.OnCommentLabelChanging(value);
					this.SendPropertyChanging();
					this._CommentLabel = value;
					this.SendPropertyChanged("CommentLabel");
					this.OnCommentLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentText", DbType="NVarChar(MAX)")]
		public string CommentText
		{
			get
			{
				return this._CommentText;
			}
			set
			{
				if ((this._CommentText != value))
				{
					this.OnCommentTextChanging(value);
					this.SendPropertyChanging();
					this._CommentText = value;
					this.SendPropertyChanged("CommentText");
					this.OnCommentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayID_FK", DbType="Int NOT NULL")]
		public int DayID_FK
		{
			get
			{
				return this._DayID_FK;
			}
			set
			{
				if ((this._DayID_FK != value))
				{
					if (this._Planinglist_Day.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayID_FKChanging(value);
					this.SendPropertyChanging();
					this._DayID_FK = value;
					this.SendPropertyChanged("DayID_FK");
					this.OnDayID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_Day_PlanningList_Comment", Storage="_Planinglist_Day", ThisKey="DayID_FK", OtherKey="DID", IsForeignKey=true)]
		public Planinglist_Day Planinglist_Day
		{
			get
			{
				return this._Planinglist_Day.Entity;
			}
			set
			{
				Planinglist_Day previousValue = this._Planinglist_Day.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_Day.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_Day.Entity = null;
						previousValue.PlanningList_Comments.Remove(this);
					}
					this._Planinglist_Day.Entity = value;
					if ((value != null))
					{
						value.PlanningList_Comments.Add(this);
						this._DayID_FK = value.DID;
					}
					else
					{
						this._DayID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_Day");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanningList_Projects")]
	public partial class PlanningList_Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProjectName;
		
		private System.DateTime _DateAdded;
		
		private int _TypeID_FK;
		
		private bool _AddedByDefault;
		
		private bool _Deleted;
		
		private EntitySet<Planinglist_Object> _Planinglist_Objects;
		
		private EntityRef<Planinglist_ObjectType> _Planinglist_ObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnTypeID_FKChanging(int value);
    partial void OnTypeID_FKChanged();
    partial void OnAddedByDefaultChanging(bool value);
    partial void OnAddedByDefaultChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public PlanningList_Project()
		{
			this._Planinglist_Objects = new EntitySet<Planinglist_Object>(new Action<Planinglist_Object>(this.attach_Planinglist_Objects), new Action<Planinglist_Object>(this.detach_Planinglist_Objects));
			this._Planinglist_ObjectType = default(EntityRef<Planinglist_ObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(500)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID_FK", DbType="Int NOT NULL")]
		public int TypeID_FK
		{
			get
			{
				return this._TypeID_FK;
			}
			set
			{
				if ((this._TypeID_FK != value))
				{
					if (this._Planinglist_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeID_FKChanging(value);
					this.SendPropertyChanging();
					this._TypeID_FK = value;
					this.SendPropertyChanged("TypeID_FK");
					this.OnTypeID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedByDefault", DbType="Bit NOT NULL")]
		public bool AddedByDefault
		{
			get
			{
				return this._AddedByDefault;
			}
			set
			{
				if ((this._AddedByDefault != value))
				{
					this.OnAddedByDefaultChanging(value);
					this.SendPropertyChanging();
					this._AddedByDefault = value;
					this.SendPropertyChanged("AddedByDefault");
					this.OnAddedByDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlanningList_Project_Planinglist_Object", Storage="_Planinglist_Objects", ThisKey="ID", OtherKey="Project_FK")]
		public EntitySet<Planinglist_Object> Planinglist_Objects
		{
			get
			{
				return this._Planinglist_Objects;
			}
			set
			{
				this._Planinglist_Objects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planinglist_ObjectType_PlanningList_Project", Storage="_Planinglist_ObjectType", ThisKey="TypeID_FK", OtherKey="TID", IsForeignKey=true)]
		public Planinglist_ObjectType Planinglist_ObjectType
		{
			get
			{
				return this._Planinglist_ObjectType.Entity;
			}
			set
			{
				Planinglist_ObjectType previousValue = this._Planinglist_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._Planinglist_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planinglist_ObjectType.Entity = null;
						previousValue.PlanningList_Projects.Remove(this);
					}
					this._Planinglist_ObjectType.Entity = value;
					if ((value != null))
					{
						value.PlanningList_Projects.Add(this);
						this._TypeID_FK = value.TID;
					}
					else
					{
						this._TypeID_FK = default(int);
					}
					this.SendPropertyChanged("Planinglist_ObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planinglist_Objects(Planinglist_Object entity)
		{
			this.SendPropertyChanging();
			entity.PlanningList_Project = this;
		}
		
		private void detach_Planinglist_Objects(Planinglist_Object entity)
		{
			this.SendPropertyChanging();
			entity.PlanningList_Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private EntitySet<Products_Category> _Products_Categories;
		
		private EntitySet<Products_MainGroup> _Products_MainGroups;
		
		private EntitySet<Products_Property> _Products_Properties;
		
		private EntitySet<Products_PropertiesValueName> _Products_PropertiesValueNames;
		
		private EntitySet<Products_Setting> _Products_Settings;
		
		private EntitySet<Products_Template> _Products_Templates;
		
		private EntitySet<Products_X_Site> _Products_X_Sites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Product()
		{
			this._Products_Categories = new EntitySet<Products_Category>(new Action<Products_Category>(this.attach_Products_Categories), new Action<Products_Category>(this.detach_Products_Categories));
			this._Products_MainGroups = new EntitySet<Products_MainGroup>(new Action<Products_MainGroup>(this.attach_Products_MainGroups), new Action<Products_MainGroup>(this.detach_Products_MainGroups));
			this._Products_Properties = new EntitySet<Products_Property>(new Action<Products_Property>(this.attach_Products_Properties), new Action<Products_Property>(this.detach_Products_Properties));
			this._Products_PropertiesValueNames = new EntitySet<Products_PropertiesValueName>(new Action<Products_PropertiesValueName>(this.attach_Products_PropertiesValueNames), new Action<Products_PropertiesValueName>(this.detach_Products_PropertiesValueNames));
			this._Products_Settings = new EntitySet<Products_Setting>(new Action<Products_Setting>(this.attach_Products_Settings), new Action<Products_Setting>(this.detach_Products_Settings));
			this._Products_Templates = new EntitySet<Products_Template>(new Action<Products_Template>(this.attach_Products_Templates), new Action<Products_Template>(this.detach_Products_Templates));
			this._Products_X_Sites = new EntitySet<Products_X_Site>(new Action<Products_X_Site>(this.attach_Products_X_Sites), new Action<Products_X_Site>(this.detach_Products_X_Sites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Category", Storage="_Products_Categories", ThisKey="ID", OtherKey="Products_FK")]
		public EntitySet<Products_Category> Products_Categories
		{
			get
			{
				return this._Products_Categories;
			}
			set
			{
				this._Products_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_MainGroup", Storage="_Products_MainGroups", ThisKey="ID", OtherKey="Products_FK")]
		public EntitySet<Products_MainGroup> Products_MainGroups
		{
			get
			{
				return this._Products_MainGroups;
			}
			set
			{
				this._Products_MainGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Property", Storage="_Products_Properties", ThisKey="ID", OtherKey="Product_FK")]
		public EntitySet<Products_Property> Products_Properties
		{
			get
			{
				return this._Products_Properties;
			}
			set
			{
				this._Products_Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_PropertiesValueName", Storage="_Products_PropertiesValueNames", ThisKey="ID", OtherKey="Products_FK")]
		public EntitySet<Products_PropertiesValueName> Products_PropertiesValueNames
		{
			get
			{
				return this._Products_PropertiesValueNames;
			}
			set
			{
				this._Products_PropertiesValueNames.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Setting", Storage="_Products_Settings", ThisKey="ID", OtherKey="Products_FK")]
		public EntitySet<Products_Setting> Products_Settings
		{
			get
			{
				return this._Products_Settings;
			}
			set
			{
				this._Products_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Template", Storage="_Products_Templates", ThisKey="ID", OtherKey="Product_FK")]
		public EntitySet<Products_Template> Products_Templates
		{
			get
			{
				return this._Products_Templates;
			}
			set
			{
				this._Products_Templates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_X_Site", Storage="_Products_X_Sites", ThisKey="ID", OtherKey="Products_FK")]
		public EntitySet<Products_X_Site> Products_X_Sites
		{
			get
			{
				return this._Products_X_Sites;
			}
			set
			{
				this._Products_X_Sites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Categories(Products_Category entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Products_Categories(Products_Category entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Products_MainGroups(Products_MainGroup entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Products_MainGroups(Products_MainGroup entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Products_Properties(Products_Property entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Products_Properties(Products_Property entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Products_PropertiesValueNames(Products_PropertiesValueName entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Products_PropertiesValueNames(Products_PropertiesValueName entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Products_Settings(Products_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Products_Settings(Products_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Products_Templates(Products_Template entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Products_Templates(Products_Template entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Products_X_Sites(Products_X_Site entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Products_X_Sites(Products_X_Site entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Category")]
	public partial class Products_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _Products_FK;
		
		private string _ShortName;
		
		private EntitySet<Products_Group> _Products_Groups;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProducts_FKChanging(int value);
    partial void OnProducts_FKChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public Products_Category()
		{
			this._Products_Groups = new EntitySet<Products_Group>(new Action<Products_Group>(this.attach_Products_Groups), new Action<Products_Group>(this.detach_Products_Groups));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_FK", DbType="Int NOT NULL")]
		public int Products_FK
		{
			get
			{
				return this._Products_FK;
			}
			set
			{
				if ((this._Products_FK != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_FK = value;
					this.SendPropertyChanged("Products_FK");
					this.OnProducts_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Category_Products_Group", Storage="_Products_Groups", ThisKey="ID", OtherKey="Products_Category_FK")]
		public EntitySet<Products_Group> Products_Groups
		{
			get
			{
				return this._Products_Groups;
			}
			set
			{
				this._Products_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Category", Storage="_Product", ThisKey="Products_FK", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Products_Categories.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Products_Categories.Add(this);
						this._Products_FK = value.ID;
					}
					else
					{
						this._Products_FK = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Groups(Products_Group entity)
		{
			this.SendPropertyChanging();
			entity.Products_Category = this;
		}
		
		private void detach_Products_Groups(Products_Group entity)
		{
			this.SendPropertyChanging();
			entity.Products_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Files")]
	public partial class Products_File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_Products_FK;
		
		private string _Name;
		
		private int _SortOrder;
		
		private EntitySet<Products_Files_X_Setting> _Products_Files_X_Settings;
		
		private EntityRef<Products_Product> _Products_Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_Products_FKChanging(int value);
    partial void OnProducts_Products_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Products_File()
		{
			this._Products_Files_X_Settings = new EntitySet<Products_Files_X_Setting>(new Action<Products_Files_X_Setting>(this.attach_Products_Files_X_Settings), new Action<Products_Files_X_Setting>(this.detach_Products_Files_X_Settings));
			this._Products_Product = default(EntityRef<Products_Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Products_FK", DbType="Int NOT NULL")]
		public int Products_Products_FK
		{
			get
			{
				return this._Products_Products_FK;
			}
			set
			{
				if ((this._Products_Products_FK != value))
				{
					if (this._Products_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Products_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Products_FK = value;
					this.SendPropertyChanged("Products_Products_FK");
					this.OnProducts_Products_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_File_Products_Files_X_Setting", Storage="_Products_Files_X_Settings", ThisKey="ID", OtherKey="Products_Files_FK")]
		public EntitySet<Products_Files_X_Setting> Products_Files_X_Settings
		{
			get
			{
				return this._Products_Files_X_Settings;
			}
			set
			{
				this._Products_Files_X_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Product_Products_File", Storage="_Products_Product", ThisKey="Products_Products_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Product Products_Product
		{
			get
			{
				return this._Products_Product.Entity;
			}
			set
			{
				Products_Product previousValue = this._Products_Product.Entity;
				if (((previousValue != value) 
							|| (this._Products_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Product.Entity = null;
						previousValue.Products_Files.Remove(this);
					}
					this._Products_Product.Entity = value;
					if ((value != null))
					{
						value.Products_Files.Add(this);
						this._Products_Products_FK = value.ID;
					}
					else
					{
						this._Products_Products_FK = default(int);
					}
					this.SendPropertyChanged("Products_Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Files_X_Settings(Products_Files_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_File = this;
		}
		
		private void detach_Products_Files_X_Settings(Products_Files_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_File = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Files_X_Settings")]
	public partial class Products_Files_X_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_Files_FK;
		
		private int _Products_Settings_FK;
		
		private EntityRef<Products_File> _Products_File;
		
		private EntityRef<Products_Setting> _Products_Setting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_Files_FKChanging(int value);
    partial void OnProducts_Files_FKChanged();
    partial void OnProducts_Settings_FKChanging(int value);
    partial void OnProducts_Settings_FKChanged();
    #endregion
		
		public Products_Files_X_Setting()
		{
			this._Products_File = default(EntityRef<Products_File>);
			this._Products_Setting = default(EntityRef<Products_Setting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Files_FK", DbType="Int NOT NULL")]
		public int Products_Files_FK
		{
			get
			{
				return this._Products_Files_FK;
			}
			set
			{
				if ((this._Products_Files_FK != value))
				{
					if (this._Products_File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Files_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Files_FK = value;
					this.SendPropertyChanged("Products_Files_FK");
					this.OnProducts_Files_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Settings_FK", DbType="Int NOT NULL")]
		public int Products_Settings_FK
		{
			get
			{
				return this._Products_Settings_FK;
			}
			set
			{
				if ((this._Products_Settings_FK != value))
				{
					if (this._Products_Setting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Settings_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Settings_FK = value;
					this.SendPropertyChanged("Products_Settings_FK");
					this.OnProducts_Settings_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_File_Products_Files_X_Setting", Storage="_Products_File", ThisKey="Products_Files_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_File Products_File
		{
			get
			{
				return this._Products_File.Entity;
			}
			set
			{
				Products_File previousValue = this._Products_File.Entity;
				if (((previousValue != value) 
							|| (this._Products_File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_File.Entity = null;
						previousValue.Products_Files_X_Settings.Remove(this);
					}
					this._Products_File.Entity = value;
					if ((value != null))
					{
						value.Products_Files_X_Settings.Add(this);
						this._Products_Files_FK = value.ID;
					}
					else
					{
						this._Products_Files_FK = default(int);
					}
					this.SendPropertyChanged("Products_File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Setting_Products_Files_X_Setting", Storage="_Products_Setting", ThisKey="Products_Settings_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Setting Products_Setting
		{
			get
			{
				return this._Products_Setting.Entity;
			}
			set
			{
				Products_Setting previousValue = this._Products_Setting.Entity;
				if (((previousValue != value) 
							|| (this._Products_Setting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Setting.Entity = null;
						previousValue.Products_Files_X_Settings.Remove(this);
					}
					this._Products_Setting.Entity = value;
					if ((value != null))
					{
						value.Products_Files_X_Settings.Add(this);
						this._Products_Settings_FK = value.ID;
					}
					else
					{
						this._Products_Settings_FK = default(int);
					}
					this.SendPropertyChanged("Products_Setting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Groups")]
	public partial class Products_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_MainGroups_FK;
		
		private System.Nullable<int> _Products_Templates_FK;
		
		private System.Nullable<int> _Products_Category_FK;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Products_Product> _Products_Products;
		
		private EntityRef<Products_Category> _Products_Category;
		
		private EntityRef<Products_MainGroup> _Products_MainGroup;
		
		private EntityRef<Products_Template> _Products_Template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_MainGroups_FKChanging(int value);
    partial void OnProducts_MainGroups_FKChanged();
    partial void OnProducts_Templates_FKChanging(System.Nullable<int> value);
    partial void OnProducts_Templates_FKChanged();
    partial void OnProducts_Category_FKChanging(System.Nullable<int> value);
    partial void OnProducts_Category_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Products_Group()
		{
			this._Products_Products = new EntitySet<Products_Product>(new Action<Products_Product>(this.attach_Products_Products), new Action<Products_Product>(this.detach_Products_Products));
			this._Products_Category = default(EntityRef<Products_Category>);
			this._Products_MainGroup = default(EntityRef<Products_MainGroup>);
			this._Products_Template = default(EntityRef<Products_Template>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_MainGroups_FK", DbType="Int NOT NULL")]
		public int Products_MainGroups_FK
		{
			get
			{
				return this._Products_MainGroups_FK;
			}
			set
			{
				if ((this._Products_MainGroups_FK != value))
				{
					if (this._Products_MainGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_MainGroups_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_MainGroups_FK = value;
					this.SendPropertyChanged("Products_MainGroups_FK");
					this.OnProducts_MainGroups_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Templates_FK", DbType="Int")]
		public System.Nullable<int> Products_Templates_FK
		{
			get
			{
				return this._Products_Templates_FK;
			}
			set
			{
				if ((this._Products_Templates_FK != value))
				{
					if (this._Products_Template.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Templates_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Templates_FK = value;
					this.SendPropertyChanged("Products_Templates_FK");
					this.OnProducts_Templates_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Category_FK", DbType="Int")]
		public System.Nullable<int> Products_Category_FK
		{
			get
			{
				return this._Products_Category_FK;
			}
			set
			{
				if ((this._Products_Category_FK != value))
				{
					if (this._Products_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Category_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Category_FK = value;
					this.SendPropertyChanged("Products_Category_FK");
					this.OnProducts_Category_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Group_Products_Product", Storage="_Products_Products", ThisKey="ID", OtherKey="Products_Groups_FK")]
		public EntitySet<Products_Product> Products_Products
		{
			get
			{
				return this._Products_Products;
			}
			set
			{
				this._Products_Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Category_Products_Group", Storage="_Products_Category", ThisKey="Products_Category_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Category Products_Category
		{
			get
			{
				return this._Products_Category.Entity;
			}
			set
			{
				Products_Category previousValue = this._Products_Category.Entity;
				if (((previousValue != value) 
							|| (this._Products_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Category.Entity = null;
						previousValue.Products_Groups.Remove(this);
					}
					this._Products_Category.Entity = value;
					if ((value != null))
					{
						value.Products_Groups.Add(this);
						this._Products_Category_FK = value.ID;
					}
					else
					{
						this._Products_Category_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Products_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_MainGroup_Products_Group", Storage="_Products_MainGroup", ThisKey="Products_MainGroups_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_MainGroup Products_MainGroup
		{
			get
			{
				return this._Products_MainGroup.Entity;
			}
			set
			{
				Products_MainGroup previousValue = this._Products_MainGroup.Entity;
				if (((previousValue != value) 
							|| (this._Products_MainGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_MainGroup.Entity = null;
						previousValue.Products_Groups.Remove(this);
					}
					this._Products_MainGroup.Entity = value;
					if ((value != null))
					{
						value.Products_Groups.Add(this);
						this._Products_MainGroups_FK = value.ID;
					}
					else
					{
						this._Products_MainGroups_FK = default(int);
					}
					this.SendPropertyChanged("Products_MainGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Template_Products_Group", Storage="_Products_Template", ThisKey="Products_Templates_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Template Products_Template
		{
			get
			{
				return this._Products_Template.Entity;
			}
			set
			{
				Products_Template previousValue = this._Products_Template.Entity;
				if (((previousValue != value) 
							|| (this._Products_Template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Template.Entity = null;
						previousValue.Products_Groups.Remove(this);
					}
					this._Products_Template.Entity = value;
					if ((value != null))
					{
						value.Products_Groups.Add(this);
						this._Products_Templates_FK = value.ID;
					}
					else
					{
						this._Products_Templates_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Products_Template");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Products(Products_Product entity)
		{
			this.SendPropertyChanging();
			entity.Products_Group = this;
		}
		
		private void detach_Products_Products(Products_Product entity)
		{
			this.SendPropertyChanging();
			entity.Products_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_MainGroups")]
	public partial class Products_MainGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_FK;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Products_Group> _Products_Groups;
		
		private EntitySet<Products_Object_X_MainGroup> _Products_Object_X_MainGroups;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_FKChanging(int value);
    partial void OnProducts_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Products_MainGroup()
		{
			this._Products_Groups = new EntitySet<Products_Group>(new Action<Products_Group>(this.attach_Products_Groups), new Action<Products_Group>(this.detach_Products_Groups));
			this._Products_Object_X_MainGroups = new EntitySet<Products_Object_X_MainGroup>(new Action<Products_Object_X_MainGroup>(this.attach_Products_Object_X_MainGroups), new Action<Products_Object_X_MainGroup>(this.detach_Products_Object_X_MainGroups));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_FK", DbType="Int NOT NULL")]
		public int Products_FK
		{
			get
			{
				return this._Products_FK;
			}
			set
			{
				if ((this._Products_FK != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_FK = value;
					this.SendPropertyChanged("Products_FK");
					this.OnProducts_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_MainGroup_Products_Group", Storage="_Products_Groups", ThisKey="ID", OtherKey="Products_MainGroups_FK")]
		public EntitySet<Products_Group> Products_Groups
		{
			get
			{
				return this._Products_Groups;
			}
			set
			{
				this._Products_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_MainGroup_Products_Object_X_MainGroup", Storage="_Products_Object_X_MainGroups", ThisKey="ID", OtherKey="Products_MainGroups_FK")]
		public EntitySet<Products_Object_X_MainGroup> Products_Object_X_MainGroups
		{
			get
			{
				return this._Products_Object_X_MainGroups;
			}
			set
			{
				this._Products_Object_X_MainGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_MainGroup", Storage="_Product", ThisKey="Products_FK", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Products_MainGroups.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Products_MainGroups.Add(this);
						this._Products_FK = value.ID;
					}
					else
					{
						this._Products_FK = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Groups(Products_Group entity)
		{
			this.SendPropertyChanging();
			entity.Products_MainGroup = this;
		}
		
		private void detach_Products_Groups(Products_Group entity)
		{
			this.SendPropertyChanging();
			entity.Products_MainGroup = null;
		}
		
		private void attach_Products_Object_X_MainGroups(Products_Object_X_MainGroup entity)
		{
			this.SendPropertyChanging();
			entity.Products_MainGroup = this;
		}
		
		private void detach_Products_Object_X_MainGroups(Products_Object_X_MainGroup entity)
		{
			this.SendPropertyChanging();
			entity.Products_MainGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Object_X_MainGroups")]
	public partial class Products_Object_X_MainGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Object_FK;
		
		private int _Products_MainGroups_FK;
		
		private EntityRef<Object> _Object;
		
		private EntityRef<Products_MainGroup> _Products_MainGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnObject_FKChanging(int value);
    partial void OnObject_FKChanged();
    partial void OnProducts_MainGroups_FKChanging(int value);
    partial void OnProducts_MainGroups_FKChanged();
    #endregion
		
		public Products_Object_X_MainGroup()
		{
			this._Object = default(EntityRef<Object>);
			this._Products_MainGroup = default(EntityRef<Products_MainGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_FK", DbType="Int NOT NULL")]
		public int Object_FK
		{
			get
			{
				return this._Object_FK;
			}
			set
			{
				if ((this._Object_FK != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObject_FKChanging(value);
					this.SendPropertyChanging();
					this._Object_FK = value;
					this.SendPropertyChanged("Object_FK");
					this.OnObject_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_MainGroups_FK", DbType="Int NOT NULL")]
		public int Products_MainGroups_FK
		{
			get
			{
				return this._Products_MainGroups_FK;
			}
			set
			{
				if ((this._Products_MainGroups_FK != value))
				{
					if (this._Products_MainGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_MainGroups_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_MainGroups_FK = value;
					this.SendPropertyChanged("Products_MainGroups_FK");
					this.OnProducts_MainGroups_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Products_Object_X_MainGroup", Storage="_Object", ThisKey="Object_FK", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Products_Object_X_MainGroups.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Products_Object_X_MainGroups.Add(this);
						this._Object_FK = value.ObjectID;
					}
					else
					{
						this._Object_FK = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_MainGroup_Products_Object_X_MainGroup", Storage="_Products_MainGroup", ThisKey="Products_MainGroups_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_MainGroup Products_MainGroup
		{
			get
			{
				return this._Products_MainGroup.Entity;
			}
			set
			{
				Products_MainGroup previousValue = this._Products_MainGroup.Entity;
				if (((previousValue != value) 
							|| (this._Products_MainGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_MainGroup.Entity = null;
						previousValue.Products_Object_X_MainGroups.Remove(this);
					}
					this._Products_MainGroup.Entity = value;
					if ((value != null))
					{
						value.Products_Object_X_MainGroups.Add(this);
						this._Products_MainGroups_FK = value.ID;
					}
					else
					{
						this._Products_MainGroups_FK = default(int);
					}
					this.SendPropertyChanged("Products_MainGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Picture")]
	public partial class Products_Picture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_Products_FK;
		
		private string _Name;
		
		private int _SortOrder;
		
		private int _Products_Pictures_Types_FK;
		
		private EntitySet<Products_Picture_X_Setting> _Products_Picture_X_Settings;
		
		private EntityRef<Products_Picture_Type> _Products_Picture_Type;
		
		private EntityRef<Products_Product> _Products_Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_Products_FKChanging(int value);
    partial void OnProducts_Products_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnProducts_Pictures_Types_FKChanging(int value);
    partial void OnProducts_Pictures_Types_FKChanged();
    #endregion
		
		public Products_Picture()
		{
			this._Products_Picture_X_Settings = new EntitySet<Products_Picture_X_Setting>(new Action<Products_Picture_X_Setting>(this.attach_Products_Picture_X_Settings), new Action<Products_Picture_X_Setting>(this.detach_Products_Picture_X_Settings));
			this._Products_Picture_Type = default(EntityRef<Products_Picture_Type>);
			this._Products_Product = default(EntityRef<Products_Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Products_FK", DbType="Int NOT NULL")]
		public int Products_Products_FK
		{
			get
			{
				return this._Products_Products_FK;
			}
			set
			{
				if ((this._Products_Products_FK != value))
				{
					if (this._Products_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Products_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Products_FK = value;
					this.SendPropertyChanged("Products_Products_FK");
					this.OnProducts_Products_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Pictures_Types_FK", DbType="Int NOT NULL")]
		public int Products_Pictures_Types_FK
		{
			get
			{
				return this._Products_Pictures_Types_FK;
			}
			set
			{
				if ((this._Products_Pictures_Types_FK != value))
				{
					if (this._Products_Picture_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Pictures_Types_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Pictures_Types_FK = value;
					this.SendPropertyChanged("Products_Pictures_Types_FK");
					this.OnProducts_Pictures_Types_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Picture_Products_Picture_X_Setting", Storage="_Products_Picture_X_Settings", ThisKey="ID", OtherKey="Products_Picture_FK")]
		public EntitySet<Products_Picture_X_Setting> Products_Picture_X_Settings
		{
			get
			{
				return this._Products_Picture_X_Settings;
			}
			set
			{
				this._Products_Picture_X_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Picture_Type_Products_Picture", Storage="_Products_Picture_Type", ThisKey="Products_Pictures_Types_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Picture_Type Products_Picture_Type
		{
			get
			{
				return this._Products_Picture_Type.Entity;
			}
			set
			{
				Products_Picture_Type previousValue = this._Products_Picture_Type.Entity;
				if (((previousValue != value) 
							|| (this._Products_Picture_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Picture_Type.Entity = null;
						previousValue.Products_Pictures.Remove(this);
					}
					this._Products_Picture_Type.Entity = value;
					if ((value != null))
					{
						value.Products_Pictures.Add(this);
						this._Products_Pictures_Types_FK = value.ID;
					}
					else
					{
						this._Products_Pictures_Types_FK = default(int);
					}
					this.SendPropertyChanged("Products_Picture_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Product_Products_Picture", Storage="_Products_Product", ThisKey="Products_Products_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Product Products_Product
		{
			get
			{
				return this._Products_Product.Entity;
			}
			set
			{
				Products_Product previousValue = this._Products_Product.Entity;
				if (((previousValue != value) 
							|| (this._Products_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Product.Entity = null;
						previousValue.Products_Pictures.Remove(this);
					}
					this._Products_Product.Entity = value;
					if ((value != null))
					{
						value.Products_Pictures.Add(this);
						this._Products_Products_FK = value.ID;
					}
					else
					{
						this._Products_Products_FK = default(int);
					}
					this.SendPropertyChanged("Products_Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Picture_X_Settings(Products_Picture_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Picture = this;
		}
		
		private void detach_Products_Picture_X_Settings(Products_Picture_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Picture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Picture_Types")]
	public partial class Products_Picture_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ShortName;
		
		private bool _Multiple;
		
		private EntitySet<Products_Picture> _Products_Pictures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnMultipleChanging(bool value);
    partial void OnMultipleChanged();
    #endregion
		
		public Products_Picture_Type()
		{
			this._Products_Pictures = new EntitySet<Products_Picture>(new Action<Products_Picture>(this.attach_Products_Pictures), new Action<Products_Picture>(this.detach_Products_Pictures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multiple", DbType="Bit NOT NULL")]
		public bool Multiple
		{
			get
			{
				return this._Multiple;
			}
			set
			{
				if ((this._Multiple != value))
				{
					this.OnMultipleChanging(value);
					this.SendPropertyChanging();
					this._Multiple = value;
					this.SendPropertyChanged("Multiple");
					this.OnMultipleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Picture_Type_Products_Picture", Storage="_Products_Pictures", ThisKey="ID", OtherKey="Products_Pictures_Types_FK")]
		public EntitySet<Products_Picture> Products_Pictures
		{
			get
			{
				return this._Products_Pictures;
			}
			set
			{
				this._Products_Pictures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Pictures(Products_Picture entity)
		{
			this.SendPropertyChanging();
			entity.Products_Picture_Type = this;
		}
		
		private void detach_Products_Pictures(Products_Picture entity)
		{
			this.SendPropertyChanging();
			entity.Products_Picture_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Picture_X_Settings")]
	public partial class Products_Picture_X_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_Picture_FK;
		
		private int _Products_Settings_FK;
		
		private EntityRef<Products_Picture> _Products_Picture;
		
		private EntityRef<Products_Setting> _Products_Setting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_Picture_FKChanging(int value);
    partial void OnProducts_Picture_FKChanged();
    partial void OnProducts_Settings_FKChanging(int value);
    partial void OnProducts_Settings_FKChanged();
    #endregion
		
		public Products_Picture_X_Setting()
		{
			this._Products_Picture = default(EntityRef<Products_Picture>);
			this._Products_Setting = default(EntityRef<Products_Setting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Picture_FK", DbType="Int NOT NULL")]
		public int Products_Picture_FK
		{
			get
			{
				return this._Products_Picture_FK;
			}
			set
			{
				if ((this._Products_Picture_FK != value))
				{
					if (this._Products_Picture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Picture_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Picture_FK = value;
					this.SendPropertyChanged("Products_Picture_FK");
					this.OnProducts_Picture_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Settings_FK", DbType="Int NOT NULL")]
		public int Products_Settings_FK
		{
			get
			{
				return this._Products_Settings_FK;
			}
			set
			{
				if ((this._Products_Settings_FK != value))
				{
					if (this._Products_Setting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Settings_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Settings_FK = value;
					this.SendPropertyChanged("Products_Settings_FK");
					this.OnProducts_Settings_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Picture_Products_Picture_X_Setting", Storage="_Products_Picture", ThisKey="Products_Picture_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Picture Products_Picture
		{
			get
			{
				return this._Products_Picture.Entity;
			}
			set
			{
				Products_Picture previousValue = this._Products_Picture.Entity;
				if (((previousValue != value) 
							|| (this._Products_Picture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Picture.Entity = null;
						previousValue.Products_Picture_X_Settings.Remove(this);
					}
					this._Products_Picture.Entity = value;
					if ((value != null))
					{
						value.Products_Picture_X_Settings.Add(this);
						this._Products_Picture_FK = value.ID;
					}
					else
					{
						this._Products_Picture_FK = default(int);
					}
					this.SendPropertyChanged("Products_Picture");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Setting_Products_Picture_X_Setting", Storage="_Products_Setting", ThisKey="Products_Settings_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Setting Products_Setting
		{
			get
			{
				return this._Products_Setting.Entity;
			}
			set
			{
				Products_Setting previousValue = this._Products_Setting.Entity;
				if (((previousValue != value) 
							|| (this._Products_Setting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Setting.Entity = null;
						previousValue.Products_Picture_X_Settings.Remove(this);
					}
					this._Products_Setting.Entity = value;
					if ((value != null))
					{
						value.Products_Picture_X_Settings.Add(this);
						this._Products_Settings_FK = value.ID;
					}
					else
					{
						this._Products_Settings_FK = default(int);
					}
					this.SendPropertyChanged("Products_Setting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Products")]
	public partial class Products_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProductID;
		
		private int _Products_Groups_FK;
		
		private string _Name;
		
		private string _Description;
		
		private string _Notes;
		
		private System.Nullable<int> _Parent_Products;
		
		private EntitySet<Products_File> _Products_Files;
		
		private EntitySet<Products_Picture> _Products_Pictures;
		
		private EntitySet<Products_Products_X_Property> _Products_Products_X_Properties;
		
		private EntitySet<Products_Products_X_Setting> _Products_Products_X_Settings;
		
		private EntityRef<Products_Group> _Products_Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnProducts_Groups_FKChanging(int value);
    partial void OnProducts_Groups_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnParent_ProductsChanging(System.Nullable<int> value);
    partial void OnParent_ProductsChanged();
    #endregion
		
		public Products_Product()
		{
			this._Products_Files = new EntitySet<Products_File>(new Action<Products_File>(this.attach_Products_Files), new Action<Products_File>(this.detach_Products_Files));
			this._Products_Pictures = new EntitySet<Products_Picture>(new Action<Products_Picture>(this.attach_Products_Pictures), new Action<Products_Picture>(this.detach_Products_Pictures));
			this._Products_Products_X_Properties = new EntitySet<Products_Products_X_Property>(new Action<Products_Products_X_Property>(this.attach_Products_Products_X_Properties), new Action<Products_Products_X_Property>(this.detach_Products_Products_X_Properties));
			this._Products_Products_X_Settings = new EntitySet<Products_Products_X_Setting>(new Action<Products_Products_X_Setting>(this.attach_Products_Products_X_Settings), new Action<Products_Products_X_Setting>(this.detach_Products_Products_X_Settings));
			this._Products_Group = default(EntityRef<Products_Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Groups_FK", DbType="Int NOT NULL")]
		public int Products_Groups_FK
		{
			get
			{
				return this._Products_Groups_FK;
			}
			set
			{
				if ((this._Products_Groups_FK != value))
				{
					if (this._Products_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Groups_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Groups_FK = value;
					this.SendPropertyChanged("Products_Groups_FK");
					this.OnProducts_Groups_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_Products", DbType="Int")]
		public System.Nullable<int> Parent_Products
		{
			get
			{
				return this._Parent_Products;
			}
			set
			{
				if ((this._Parent_Products != value))
				{
					this.OnParent_ProductsChanging(value);
					this.SendPropertyChanging();
					this._Parent_Products = value;
					this.SendPropertyChanged("Parent_Products");
					this.OnParent_ProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Product_Products_File", Storage="_Products_Files", ThisKey="ID", OtherKey="Products_Products_FK")]
		public EntitySet<Products_File> Products_Files
		{
			get
			{
				return this._Products_Files;
			}
			set
			{
				this._Products_Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Product_Products_Picture", Storage="_Products_Pictures", ThisKey="ID", OtherKey="Products_Products_FK")]
		public EntitySet<Products_Picture> Products_Pictures
		{
			get
			{
				return this._Products_Pictures;
			}
			set
			{
				this._Products_Pictures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Product_Products_Products_X_Property", Storage="_Products_Products_X_Properties", ThisKey="ID", OtherKey="Products_Products_FK")]
		public EntitySet<Products_Products_X_Property> Products_Products_X_Properties
		{
			get
			{
				return this._Products_Products_X_Properties;
			}
			set
			{
				this._Products_Products_X_Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Product_Products_Products_X_Setting", Storage="_Products_Products_X_Settings", ThisKey="ID", OtherKey="Products_Products_FK")]
		public EntitySet<Products_Products_X_Setting> Products_Products_X_Settings
		{
			get
			{
				return this._Products_Products_X_Settings;
			}
			set
			{
				this._Products_Products_X_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Group_Products_Product", Storage="_Products_Group", ThisKey="Products_Groups_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Group Products_Group
		{
			get
			{
				return this._Products_Group.Entity;
			}
			set
			{
				Products_Group previousValue = this._Products_Group.Entity;
				if (((previousValue != value) 
							|| (this._Products_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Group.Entity = null;
						previousValue.Products_Products.Remove(this);
					}
					this._Products_Group.Entity = value;
					if ((value != null))
					{
						value.Products_Products.Add(this);
						this._Products_Groups_FK = value.ID;
					}
					else
					{
						this._Products_Groups_FK = default(int);
					}
					this.SendPropertyChanged("Products_Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Files(Products_File entity)
		{
			this.SendPropertyChanging();
			entity.Products_Product = this;
		}
		
		private void detach_Products_Files(Products_File entity)
		{
			this.SendPropertyChanging();
			entity.Products_Product = null;
		}
		
		private void attach_Products_Pictures(Products_Picture entity)
		{
			this.SendPropertyChanging();
			entity.Products_Product = this;
		}
		
		private void detach_Products_Pictures(Products_Picture entity)
		{
			this.SendPropertyChanging();
			entity.Products_Product = null;
		}
		
		private void attach_Products_Products_X_Properties(Products_Products_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_Product = this;
		}
		
		private void detach_Products_Products_X_Properties(Products_Products_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_Product = null;
		}
		
		private void attach_Products_Products_X_Settings(Products_Products_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Product = this;
		}
		
		private void detach_Products_Products_X_Settings(Products_Products_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Products_X_Properties")]
	public partial class Products_Products_X_Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_Products_FK;
		
		private int _Products_Properties_FK;
		
		private string _Value;
		
		private int _SortOrder;
		
		private int _Products_PropertiesValueName_FK;
		
		private EntitySet<Products_ProductsProperties_X_Setting> _Products_ProductsProperties_X_Settings;
		
		private EntityRef<Products_Product> _Products_Product;
		
		private EntityRef<Products_Property> _Products_Property;
		
		private EntityRef<Products_PropertiesValueName> _Products_PropertiesValueName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_Products_FKChanging(int value);
    partial void OnProducts_Products_FKChanged();
    partial void OnProducts_Properties_FKChanging(int value);
    partial void OnProducts_Properties_FKChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnProducts_PropertiesValueName_FKChanging(int value);
    partial void OnProducts_PropertiesValueName_FKChanged();
    #endregion
		
		public Products_Products_X_Property()
		{
			this._Products_ProductsProperties_X_Settings = new EntitySet<Products_ProductsProperties_X_Setting>(new Action<Products_ProductsProperties_X_Setting>(this.attach_Products_ProductsProperties_X_Settings), new Action<Products_ProductsProperties_X_Setting>(this.detach_Products_ProductsProperties_X_Settings));
			this._Products_Product = default(EntityRef<Products_Product>);
			this._Products_Property = default(EntityRef<Products_Property>);
			this._Products_PropertiesValueName = default(EntityRef<Products_PropertiesValueName>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Products_FK", DbType="Int NOT NULL")]
		public int Products_Products_FK
		{
			get
			{
				return this._Products_Products_FK;
			}
			set
			{
				if ((this._Products_Products_FK != value))
				{
					if (this._Products_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Products_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Products_FK = value;
					this.SendPropertyChanged("Products_Products_FK");
					this.OnProducts_Products_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Properties_FK", DbType="Int NOT NULL")]
		public int Products_Properties_FK
		{
			get
			{
				return this._Products_Properties_FK;
			}
			set
			{
				if ((this._Products_Properties_FK != value))
				{
					if (this._Products_Property.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Properties_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Properties_FK = value;
					this.SendPropertyChanged("Products_Properties_FK");
					this.OnProducts_Properties_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_PropertiesValueName_FK", DbType="Int NOT NULL")]
		public int Products_PropertiesValueName_FK
		{
			get
			{
				return this._Products_PropertiesValueName_FK;
			}
			set
			{
				if ((this._Products_PropertiesValueName_FK != value))
				{
					if (this._Products_PropertiesValueName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_PropertiesValueName_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_PropertiesValueName_FK = value;
					this.SendPropertyChanged("Products_PropertiesValueName_FK");
					this.OnProducts_PropertiesValueName_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Products_X_Property_Products_ProductsProperties_X_Setting", Storage="_Products_ProductsProperties_X_Settings", ThisKey="ID", OtherKey="Products_ProductsProperties_FK")]
		public EntitySet<Products_ProductsProperties_X_Setting> Products_ProductsProperties_X_Settings
		{
			get
			{
				return this._Products_ProductsProperties_X_Settings;
			}
			set
			{
				this._Products_ProductsProperties_X_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Product_Products_Products_X_Property", Storage="_Products_Product", ThisKey="Products_Products_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Product Products_Product
		{
			get
			{
				return this._Products_Product.Entity;
			}
			set
			{
				Products_Product previousValue = this._Products_Product.Entity;
				if (((previousValue != value) 
							|| (this._Products_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Product.Entity = null;
						previousValue.Products_Products_X_Properties.Remove(this);
					}
					this._Products_Product.Entity = value;
					if ((value != null))
					{
						value.Products_Products_X_Properties.Add(this);
						this._Products_Products_FK = value.ID;
					}
					else
					{
						this._Products_Products_FK = default(int);
					}
					this.SendPropertyChanged("Products_Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Property_Products_Products_X_Property", Storage="_Products_Property", ThisKey="Products_Properties_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Property Products_Property
		{
			get
			{
				return this._Products_Property.Entity;
			}
			set
			{
				Products_Property previousValue = this._Products_Property.Entity;
				if (((previousValue != value) 
							|| (this._Products_Property.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Property.Entity = null;
						previousValue.Products_Products_X_Properties.Remove(this);
					}
					this._Products_Property.Entity = value;
					if ((value != null))
					{
						value.Products_Products_X_Properties.Add(this);
						this._Products_Properties_FK = value.ID;
					}
					else
					{
						this._Products_Properties_FK = default(int);
					}
					this.SendPropertyChanged("Products_Property");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_PropertiesValueName_Products_Products_X_Property", Storage="_Products_PropertiesValueName", ThisKey="Products_PropertiesValueName_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_PropertiesValueName Products_PropertiesValueName
		{
			get
			{
				return this._Products_PropertiesValueName.Entity;
			}
			set
			{
				Products_PropertiesValueName previousValue = this._Products_PropertiesValueName.Entity;
				if (((previousValue != value) 
							|| (this._Products_PropertiesValueName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_PropertiesValueName.Entity = null;
						previousValue.Products_Products_X_Properties.Remove(this);
					}
					this._Products_PropertiesValueName.Entity = value;
					if ((value != null))
					{
						value.Products_Products_X_Properties.Add(this);
						this._Products_PropertiesValueName_FK = value.ID;
					}
					else
					{
						this._Products_PropertiesValueName_FK = default(int);
					}
					this.SendPropertyChanged("Products_PropertiesValueName");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_ProductsProperties_X_Settings(Products_ProductsProperties_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Products_X_Property = this;
		}
		
		private void detach_Products_ProductsProperties_X_Settings(Products_ProductsProperties_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Products_X_Property = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Products_X_Settings")]
	public partial class Products_Products_X_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_Products_FK;
		
		private int _Products_Settings_FK;
		
		private EntityRef<Products_Product> _Products_Product;
		
		private EntityRef<Products_Setting> _Products_Setting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_Products_FKChanging(int value);
    partial void OnProducts_Products_FKChanged();
    partial void OnProducts_Settings_FKChanging(int value);
    partial void OnProducts_Settings_FKChanged();
    #endregion
		
		public Products_Products_X_Setting()
		{
			this._Products_Product = default(EntityRef<Products_Product>);
			this._Products_Setting = default(EntityRef<Products_Setting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Products_FK", DbType="Int NOT NULL")]
		public int Products_Products_FK
		{
			get
			{
				return this._Products_Products_FK;
			}
			set
			{
				if ((this._Products_Products_FK != value))
				{
					if (this._Products_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Products_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Products_FK = value;
					this.SendPropertyChanged("Products_Products_FK");
					this.OnProducts_Products_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Settings_FK", DbType="Int NOT NULL")]
		public int Products_Settings_FK
		{
			get
			{
				return this._Products_Settings_FK;
			}
			set
			{
				if ((this._Products_Settings_FK != value))
				{
					if (this._Products_Setting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Settings_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Settings_FK = value;
					this.SendPropertyChanged("Products_Settings_FK");
					this.OnProducts_Settings_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Product_Products_Products_X_Setting", Storage="_Products_Product", ThisKey="Products_Products_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Product Products_Product
		{
			get
			{
				return this._Products_Product.Entity;
			}
			set
			{
				Products_Product previousValue = this._Products_Product.Entity;
				if (((previousValue != value) 
							|| (this._Products_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Product.Entity = null;
						previousValue.Products_Products_X_Settings.Remove(this);
					}
					this._Products_Product.Entity = value;
					if ((value != null))
					{
						value.Products_Products_X_Settings.Add(this);
						this._Products_Products_FK = value.ID;
					}
					else
					{
						this._Products_Products_FK = default(int);
					}
					this.SendPropertyChanged("Products_Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Setting_Products_Products_X_Setting", Storage="_Products_Setting", ThisKey="Products_Settings_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Setting Products_Setting
		{
			get
			{
				return this._Products_Setting.Entity;
			}
			set
			{
				Products_Setting previousValue = this._Products_Setting.Entity;
				if (((previousValue != value) 
							|| (this._Products_Setting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Setting.Entity = null;
						previousValue.Products_Products_X_Settings.Remove(this);
					}
					this._Products_Setting.Entity = value;
					if ((value != null))
					{
						value.Products_Products_X_Settings.Add(this);
						this._Products_Settings_FK = value.ID;
					}
					else
					{
						this._Products_Settings_FK = default(int);
					}
					this.SendPropertyChanged("Products_Setting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_ProductsProperties_X_Settings")]
	public partial class Products_ProductsProperties_X_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_ProductsProperties_FK;
		
		private int _Products_Settings_FK;
		
		private EntityRef<Products_Products_X_Property> _Products_Products_X_Property;
		
		private EntityRef<Products_Setting> _Products_Setting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_ProductsProperties_FKChanging(int value);
    partial void OnProducts_ProductsProperties_FKChanged();
    partial void OnProducts_Settings_FKChanging(int value);
    partial void OnProducts_Settings_FKChanged();
    #endregion
		
		public Products_ProductsProperties_X_Setting()
		{
			this._Products_Products_X_Property = default(EntityRef<Products_Products_X_Property>);
			this._Products_Setting = default(EntityRef<Products_Setting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_ProductsProperties_FK", DbType="Int NOT NULL")]
		public int Products_ProductsProperties_FK
		{
			get
			{
				return this._Products_ProductsProperties_FK;
			}
			set
			{
				if ((this._Products_ProductsProperties_FK != value))
				{
					if (this._Products_Products_X_Property.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_ProductsProperties_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_ProductsProperties_FK = value;
					this.SendPropertyChanged("Products_ProductsProperties_FK");
					this.OnProducts_ProductsProperties_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Settings_FK", DbType="Int NOT NULL")]
		public int Products_Settings_FK
		{
			get
			{
				return this._Products_Settings_FK;
			}
			set
			{
				if ((this._Products_Settings_FK != value))
				{
					if (this._Products_Setting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Settings_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Settings_FK = value;
					this.SendPropertyChanged("Products_Settings_FK");
					this.OnProducts_Settings_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Products_X_Property_Products_ProductsProperties_X_Setting", Storage="_Products_Products_X_Property", ThisKey="Products_ProductsProperties_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Products_X_Property Products_Products_X_Property
		{
			get
			{
				return this._Products_Products_X_Property.Entity;
			}
			set
			{
				Products_Products_X_Property previousValue = this._Products_Products_X_Property.Entity;
				if (((previousValue != value) 
							|| (this._Products_Products_X_Property.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Products_X_Property.Entity = null;
						previousValue.Products_ProductsProperties_X_Settings.Remove(this);
					}
					this._Products_Products_X_Property.Entity = value;
					if ((value != null))
					{
						value.Products_ProductsProperties_X_Settings.Add(this);
						this._Products_ProductsProperties_FK = value.ID;
					}
					else
					{
						this._Products_ProductsProperties_FK = default(int);
					}
					this.SendPropertyChanged("Products_Products_X_Property");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Setting_Products_ProductsProperties_X_Setting", Storage="_Products_Setting", ThisKey="Products_Settings_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Setting Products_Setting
		{
			get
			{
				return this._Products_Setting.Entity;
			}
			set
			{
				Products_Setting previousValue = this._Products_Setting.Entity;
				if (((previousValue != value) 
							|| (this._Products_Setting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Setting.Entity = null;
						previousValue.Products_ProductsProperties_X_Settings.Remove(this);
					}
					this._Products_Setting.Entity = value;
					if ((value != null))
					{
						value.Products_ProductsProperties_X_Settings.Add(this);
						this._Products_Settings_FK = value.ID;
					}
					else
					{
						this._Products_Settings_FK = default(int);
					}
					this.SendPropertyChanged("Products_Setting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Properties")]
	public partial class Products_Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Product_FK;
		
		private string _Name;
		
		private bool _Locked;
		
		private EntitySet<Products_Products_X_Property> _Products_Products_X_Properties;
		
		private EntitySet<Products_Templates_X_Property> _Products_Templates_X_Properties;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProduct_FKChanging(int value);
    partial void OnProduct_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    #endregion
		
		public Products_Property()
		{
			this._Products_Products_X_Properties = new EntitySet<Products_Products_X_Property>(new Action<Products_Products_X_Property>(this.attach_Products_Products_X_Properties), new Action<Products_Products_X_Property>(this.detach_Products_Products_X_Properties));
			this._Products_Templates_X_Properties = new EntitySet<Products_Templates_X_Property>(new Action<Products_Templates_X_Property>(this.attach_Products_Templates_X_Properties), new Action<Products_Templates_X_Property>(this.detach_Products_Templates_X_Properties));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_FK", DbType="Int NOT NULL")]
		public int Product_FK
		{
			get
			{
				return this._Product_FK;
			}
			set
			{
				if ((this._Product_FK != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_FKChanging(value);
					this.SendPropertyChanging();
					this._Product_FK = value;
					this.SendPropertyChanged("Product_FK");
					this.OnProduct_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Property_Products_Products_X_Property", Storage="_Products_Products_X_Properties", ThisKey="ID", OtherKey="Products_Properties_FK")]
		public EntitySet<Products_Products_X_Property> Products_Products_X_Properties
		{
			get
			{
				return this._Products_Products_X_Properties;
			}
			set
			{
				this._Products_Products_X_Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Property_Products_Templates_X_Property", Storage="_Products_Templates_X_Properties", ThisKey="ID", OtherKey="Products_Properties_FK")]
		public EntitySet<Products_Templates_X_Property> Products_Templates_X_Properties
		{
			get
			{
				return this._Products_Templates_X_Properties;
			}
			set
			{
				this._Products_Templates_X_Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Property", Storage="_Product", ThisKey="Product_FK", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Products_Properties.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Products_Properties.Add(this);
						this._Product_FK = value.ID;
					}
					else
					{
						this._Product_FK = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Products_X_Properties(Products_Products_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_Property = this;
		}
		
		private void detach_Products_Products_X_Properties(Products_Products_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_Property = null;
		}
		
		private void attach_Products_Templates_X_Properties(Products_Templates_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_Property = this;
		}
		
		private void detach_Products_Templates_X_Properties(Products_Templates_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_Property = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_PropertiesValueName")]
	public partial class Products_PropertiesValueName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Products_FK;
		
		private string _Name;
		
		private EntitySet<Products_Products_X_Property> _Products_Products_X_Properties;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_FKChanging(System.Nullable<int> value);
    partial void OnProducts_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Products_PropertiesValueName()
		{
			this._Products_Products_X_Properties = new EntitySet<Products_Products_X_Property>(new Action<Products_Products_X_Property>(this.attach_Products_Products_X_Properties), new Action<Products_Products_X_Property>(this.detach_Products_Products_X_Properties));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_FK", DbType="Int")]
		public System.Nullable<int> Products_FK
		{
			get
			{
				return this._Products_FK;
			}
			set
			{
				if ((this._Products_FK != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_FK = value;
					this.SendPropertyChanged("Products_FK");
					this.OnProducts_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_PropertiesValueName_Products_Products_X_Property", Storage="_Products_Products_X_Properties", ThisKey="ID", OtherKey="Products_PropertiesValueName_FK")]
		public EntitySet<Products_Products_X_Property> Products_Products_X_Properties
		{
			get
			{
				return this._Products_Products_X_Properties;
			}
			set
			{
				this._Products_Products_X_Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_PropertiesValueName", Storage="_Product", ThisKey="Products_FK", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Products_PropertiesValueNames.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Products_PropertiesValueNames.Add(this);
						this._Products_FK = value.ID;
					}
					else
					{
						this._Products_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Products_X_Properties(Products_Products_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_PropertiesValueName = this;
		}
		
		private void detach_Products_Products_X_Properties(Products_Products_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_PropertiesValueName = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Settings")]
	public partial class Products_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private bool _AutoEnable;
		
		private int _Products_FK;
		
		private string _ShortDescription;
		
		private string _Description;
		
		private EntitySet<Products_Files_X_Setting> _Products_Files_X_Settings;
		
		private EntitySet<Products_Picture_X_Setting> _Products_Picture_X_Settings;
		
		private EntitySet<Products_Products_X_Setting> _Products_Products_X_Settings;
		
		private EntitySet<Products_ProductsProperties_X_Setting> _Products_ProductsProperties_X_Settings;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAutoEnableChanging(bool value);
    partial void OnAutoEnableChanged();
    partial void OnProducts_FKChanging(int value);
    partial void OnProducts_FKChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Products_Setting()
		{
			this._Products_Files_X_Settings = new EntitySet<Products_Files_X_Setting>(new Action<Products_Files_X_Setting>(this.attach_Products_Files_X_Settings), new Action<Products_Files_X_Setting>(this.detach_Products_Files_X_Settings));
			this._Products_Picture_X_Settings = new EntitySet<Products_Picture_X_Setting>(new Action<Products_Picture_X_Setting>(this.attach_Products_Picture_X_Settings), new Action<Products_Picture_X_Setting>(this.detach_Products_Picture_X_Settings));
			this._Products_Products_X_Settings = new EntitySet<Products_Products_X_Setting>(new Action<Products_Products_X_Setting>(this.attach_Products_Products_X_Settings), new Action<Products_Products_X_Setting>(this.detach_Products_Products_X_Settings));
			this._Products_ProductsProperties_X_Settings = new EntitySet<Products_ProductsProperties_X_Setting>(new Action<Products_ProductsProperties_X_Setting>(this.attach_Products_ProductsProperties_X_Settings), new Action<Products_ProductsProperties_X_Setting>(this.detach_Products_ProductsProperties_X_Settings));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoEnable", DbType="Bit NOT NULL")]
		public bool AutoEnable
		{
			get
			{
				return this._AutoEnable;
			}
			set
			{
				if ((this._AutoEnable != value))
				{
					this.OnAutoEnableChanging(value);
					this.SendPropertyChanging();
					this._AutoEnable = value;
					this.SendPropertyChanged("AutoEnable");
					this.OnAutoEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_FK", DbType="Int NOT NULL")]
		public int Products_FK
		{
			get
			{
				return this._Products_FK;
			}
			set
			{
				if ((this._Products_FK != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_FK = value;
					this.SendPropertyChanged("Products_FK");
					this.OnProducts_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Setting_Products_Files_X_Setting", Storage="_Products_Files_X_Settings", ThisKey="ID", OtherKey="Products_Settings_FK")]
		public EntitySet<Products_Files_X_Setting> Products_Files_X_Settings
		{
			get
			{
				return this._Products_Files_X_Settings;
			}
			set
			{
				this._Products_Files_X_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Setting_Products_Picture_X_Setting", Storage="_Products_Picture_X_Settings", ThisKey="ID", OtherKey="Products_Settings_FK")]
		public EntitySet<Products_Picture_X_Setting> Products_Picture_X_Settings
		{
			get
			{
				return this._Products_Picture_X_Settings;
			}
			set
			{
				this._Products_Picture_X_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Setting_Products_Products_X_Setting", Storage="_Products_Products_X_Settings", ThisKey="ID", OtherKey="Products_Settings_FK")]
		public EntitySet<Products_Products_X_Setting> Products_Products_X_Settings
		{
			get
			{
				return this._Products_Products_X_Settings;
			}
			set
			{
				this._Products_Products_X_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Setting_Products_ProductsProperties_X_Setting", Storage="_Products_ProductsProperties_X_Settings", ThisKey="ID", OtherKey="Products_Settings_FK")]
		public EntitySet<Products_ProductsProperties_X_Setting> Products_ProductsProperties_X_Settings
		{
			get
			{
				return this._Products_ProductsProperties_X_Settings;
			}
			set
			{
				this._Products_ProductsProperties_X_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Setting", Storage="_Product", ThisKey="Products_FK", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Products_Settings.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Products_Settings.Add(this);
						this._Products_FK = value.ID;
					}
					else
					{
						this._Products_FK = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Files_X_Settings(Products_Files_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Setting = this;
		}
		
		private void detach_Products_Files_X_Settings(Products_Files_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Setting = null;
		}
		
		private void attach_Products_Picture_X_Settings(Products_Picture_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Setting = this;
		}
		
		private void detach_Products_Picture_X_Settings(Products_Picture_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Setting = null;
		}
		
		private void attach_Products_Products_X_Settings(Products_Products_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Setting = this;
		}
		
		private void detach_Products_Products_X_Settings(Products_Products_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Setting = null;
		}
		
		private void attach_Products_ProductsProperties_X_Settings(Products_ProductsProperties_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Setting = this;
		}
		
		private void detach_Products_ProductsProperties_X_Settings(Products_ProductsProperties_X_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Products_Setting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Templates")]
	public partial class Products_Template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Product_FK;
		
		private string _Name;
		
		private EntitySet<Products_Group> _Products_Groups;
		
		private EntitySet<Products_Templates_X_Property> _Products_Templates_X_Properties;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProduct_FKChanging(int value);
    partial void OnProduct_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Products_Template()
		{
			this._Products_Groups = new EntitySet<Products_Group>(new Action<Products_Group>(this.attach_Products_Groups), new Action<Products_Group>(this.detach_Products_Groups));
			this._Products_Templates_X_Properties = new EntitySet<Products_Templates_X_Property>(new Action<Products_Templates_X_Property>(this.attach_Products_Templates_X_Properties), new Action<Products_Templates_X_Property>(this.detach_Products_Templates_X_Properties));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_FK", DbType="Int NOT NULL")]
		public int Product_FK
		{
			get
			{
				return this._Product_FK;
			}
			set
			{
				if ((this._Product_FK != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_FKChanging(value);
					this.SendPropertyChanging();
					this._Product_FK = value;
					this.SendPropertyChanged("Product_FK");
					this.OnProduct_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Template_Products_Group", Storage="_Products_Groups", ThisKey="ID", OtherKey="Products_Templates_FK")]
		public EntitySet<Products_Group> Products_Groups
		{
			get
			{
				return this._Products_Groups;
			}
			set
			{
				this._Products_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Template_Products_Templates_X_Property", Storage="_Products_Templates_X_Properties", ThisKey="ID", OtherKey="Products_Templates_FK")]
		public EntitySet<Products_Templates_X_Property> Products_Templates_X_Properties
		{
			get
			{
				return this._Products_Templates_X_Properties;
			}
			set
			{
				this._Products_Templates_X_Properties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_Template", Storage="_Product", ThisKey="Product_FK", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Products_Templates.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Products_Templates.Add(this);
						this._Product_FK = value.ID;
					}
					else
					{
						this._Product_FK = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products_Groups(Products_Group entity)
		{
			this.SendPropertyChanging();
			entity.Products_Template = this;
		}
		
		private void detach_Products_Groups(Products_Group entity)
		{
			this.SendPropertyChanging();
			entity.Products_Template = null;
		}
		
		private void attach_Products_Templates_X_Properties(Products_Templates_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_Template = this;
		}
		
		private void detach_Products_Templates_X_Properties(Products_Templates_X_Property entity)
		{
			this.SendPropertyChanging();
			entity.Products_Template = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_Templates_X_Properties")]
	public partial class Products_Templates_X_Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_Templates_FK;
		
		private int _Products_Properties_FK;
		
		private bool _Forced;
		
		private int _SortOrder;
		
		private EntityRef<Products_Property> _Products_Property;
		
		private EntityRef<Products_Template> _Products_Template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_Templates_FKChanging(int value);
    partial void OnProducts_Templates_FKChanged();
    partial void OnProducts_Properties_FKChanging(int value);
    partial void OnProducts_Properties_FKChanged();
    partial void OnForcedChanging(bool value);
    partial void OnForcedChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Products_Templates_X_Property()
		{
			this._Products_Property = default(EntityRef<Products_Property>);
			this._Products_Template = default(EntityRef<Products_Template>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Templates_FK", DbType="Int NOT NULL")]
		public int Products_Templates_FK
		{
			get
			{
				return this._Products_Templates_FK;
			}
			set
			{
				if ((this._Products_Templates_FK != value))
				{
					if (this._Products_Template.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Templates_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Templates_FK = value;
					this.SendPropertyChanged("Products_Templates_FK");
					this.OnProducts_Templates_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_Properties_FK", DbType="Int NOT NULL")]
		public int Products_Properties_FK
		{
			get
			{
				return this._Products_Properties_FK;
			}
			set
			{
				if ((this._Products_Properties_FK != value))
				{
					if (this._Products_Property.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_Properties_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_Properties_FK = value;
					this.SendPropertyChanged("Products_Properties_FK");
					this.OnProducts_Properties_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forced", DbType="Bit NOT NULL")]
		public bool Forced
		{
			get
			{
				return this._Forced;
			}
			set
			{
				if ((this._Forced != value))
				{
					this.OnForcedChanging(value);
					this.SendPropertyChanging();
					this._Forced = value;
					this.SendPropertyChanged("Forced");
					this.OnForcedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Property_Products_Templates_X_Property", Storage="_Products_Property", ThisKey="Products_Properties_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Property Products_Property
		{
			get
			{
				return this._Products_Property.Entity;
			}
			set
			{
				Products_Property previousValue = this._Products_Property.Entity;
				if (((previousValue != value) 
							|| (this._Products_Property.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Property.Entity = null;
						previousValue.Products_Templates_X_Properties.Remove(this);
					}
					this._Products_Property.Entity = value;
					if ((value != null))
					{
						value.Products_Templates_X_Properties.Add(this);
						this._Products_Properties_FK = value.ID;
					}
					else
					{
						this._Products_Properties_FK = default(int);
					}
					this.SendPropertyChanged("Products_Property");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Template_Products_Templates_X_Property", Storage="_Products_Template", ThisKey="Products_Templates_FK", OtherKey="ID", IsForeignKey=true)]
		public Products_Template Products_Template
		{
			get
			{
				return this._Products_Template.Entity;
			}
			set
			{
				Products_Template previousValue = this._Products_Template.Entity;
				if (((previousValue != value) 
							|| (this._Products_Template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products_Template.Entity = null;
						previousValue.Products_Templates_X_Properties.Remove(this);
					}
					this._Products_Template.Entity = value;
					if ((value != null))
					{
						value.Products_Templates_X_Properties.Add(this);
						this._Products_Templates_FK = value.ID;
					}
					else
					{
						this._Products_Templates_FK = default(int);
					}
					this.SendPropertyChanged("Products_Template");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products_X_Site")]
	public partial class Products_X_Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Products_FK;
		
		private int _Site_FK;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducts_FKChanging(int value);
    partial void OnProducts_FKChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    #endregion
		
		public Products_X_Site()
		{
			this._Product = default(EntityRef<Product>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products_FK", DbType="Int NOT NULL")]
		public int Products_FK
		{
			get
			{
				return this._Products_FK;
			}
			set
			{
				if ((this._Products_FK != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducts_FKChanging(value);
					this.SendPropertyChanging();
					this._Products_FK = value;
					this.SendPropertyChanged("Products_FK");
					this.OnProducts_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Products_X_Site", Storage="_Product", ThisKey="Products_FK", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Products_X_Sites.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Products_X_Sites.Add(this);
						this._Products_FK = value.ID;
					}
					else
					{
						this._Products_FK = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Products_X_Site", Storage="_Site", ThisKey="Site_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Products_X_Sites.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Products_X_Sites.Add(this);
						this._Site_FK = value.SiteID;
					}
					else
					{
						this._Site_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuizAnswers")]
	public partial class QuizAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Question_FK;
		
		private string _Answer;
		
		private int _Votes;
		
		private EntityRef<QuizQuestion> _QuizQuestion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuestion_FKChanging(int value);
    partial void OnQuestion_FKChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnVotesChanging(int value);
    partial void OnVotesChanged();
    #endregion
		
		public QuizAnswer()
		{
			this._QuizQuestion = default(EntityRef<QuizQuestion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question_FK", DbType="Int NOT NULL")]
		public int Question_FK
		{
			get
			{
				return this._Question_FK;
			}
			set
			{
				if ((this._Question_FK != value))
				{
					if (this._QuizQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestion_FKChanging(value);
					this.SendPropertyChanging();
					this._Question_FK = value;
					this.SendPropertyChanged("Question_FK");
					this.OnQuestion_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(255)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Votes", DbType="Int NOT NULL")]
		public int Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				if ((this._Votes != value))
				{
					this.OnVotesChanging(value);
					this.SendPropertyChanging();
					this._Votes = value;
					this.SendPropertyChanged("Votes");
					this.OnVotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuizQuestion_QuizAnswer", Storage="_QuizQuestion", ThisKey="Question_FK", OtherKey="ID", IsForeignKey=true)]
		public QuizQuestion QuizQuestion
		{
			get
			{
				return this._QuizQuestion.Entity;
			}
			set
			{
				QuizQuestion previousValue = this._QuizQuestion.Entity;
				if (((previousValue != value) 
							|| (this._QuizQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuizQuestion.Entity = null;
						previousValue.QuizAnswers.Remove(this);
					}
					this._QuizQuestion.Entity = value;
					if ((value != null))
					{
						value.QuizAnswers.Add(this);
						this._Question_FK = value.ID;
					}
					else
					{
						this._Question_FK = default(int);
					}
					this.SendPropertyChanged("QuizQuestion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuizIP")]
	public partial class QuizIP
	{
		
		private int _ID;
		
		private int _Question_FK;
		
		private string _IPAdress;
		
		public QuizIP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question_FK", DbType="Int NOT NULL")]
		public int Question_FK
		{
			get
			{
				return this._Question_FK;
			}
			set
			{
				if ((this._Question_FK != value))
				{
					this._Question_FK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAdress", DbType="NVarChar(50)")]
		public string IPAdress
		{
			get
			{
				return this._IPAdress;
			}
			set
			{
				if ((this._IPAdress != value))
				{
					this._IPAdress = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuizQuestion")]
	public partial class QuizQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Question;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<System.DateTime> _Publish;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _Site_FK;
		
		private EntitySet<QuizAnswer> _QuizAnswers;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnPublishChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnSite_FKChanging(System.Nullable<int> value);
    partial void OnSite_FKChanged();
    #endregion
		
		public QuizQuestion()
		{
			this._QuizAnswers = new EntitySet<QuizAnswer>(new Action<QuizAnswer>(this.attach_QuizAnswers), new Action<QuizAnswer>(this.detach_QuizAnswers));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(255)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish", DbType="DateTime")]
		public System.Nullable<System.DateTime> Publish
		{
			get
			{
				return this._Publish;
			}
			set
			{
				if ((this._Publish != value))
				{
					this.OnPublishChanging(value);
					this.SendPropertyChanging();
					this._Publish = value;
					this.SendPropertyChanged("Publish");
					this.OnPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int")]
		public System.Nullable<int> Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuizQuestion_QuizAnswer", Storage="_QuizAnswers", ThisKey="ID", OtherKey="Question_FK")]
		public EntitySet<QuizAnswer> QuizAnswers
		{
			get
			{
				return this._QuizAnswers;
			}
			set
			{
				this._QuizAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_QuizQuestion", Storage="_Site", ThisKey="Site_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.QuizQuestions.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.QuizQuestions.Add(this);
						this._Site_FK = value.SiteID;
					}
					else
					{
						this._Site_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuizAnswers(QuizAnswer entity)
		{
			this.SendPropertyChanging();
			entity.QuizQuestion = this;
		}
		
		private void detach_QuizAnswers(QuizAnswer entity)
		{
			this.SendPropertyChanging();
			entity.QuizQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RetailerList")]
	public partial class RetailerList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID;
		
		private string _RetailerName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _Zipcode;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _Email;
		
		private System.Nullable<int> _CountryID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnRetailerNameChanging(string value);
    partial void OnRetailerNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    #endregion
		
		public RetailerList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetailerName", DbType="NVarChar(150)")]
		public string RetailerName
		{
			get
			{
				return this._RetailerName;
			}
			set
			{
				if ((this._RetailerName != value))
				{
					this.OnRetailerNameChanging(value);
					this.SendPropertyChanging();
					this._RetailerName = value;
					this.SendPropertyChanged("RetailerName");
					this.OnRetailerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(150)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(150)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(150)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="NVarChar(10)")]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RetailerListCountries")]
	public partial class RetailerListCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private int _SiteID;
		
		private string _CountryShort;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnCountryShortChanging(string value);
    partial void OnCountryShortChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public RetailerListCountry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryShort", DbType="NVarChar(5)")]
		public string CountryShort
		{
			get
			{
				return this._CountryShort;
			}
			set
			{
				if ((this._CountryShort != value))
				{
					this.OnCountryShortChanging(value);
					this.SendPropertyChanging();
					this._CountryShort = value;
					this.SendPropertyChanged("CountryShort");
					this.OnCountryShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleGroups")]
	public partial class RoleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Comment;
		
		private System.Guid _aspnet_Applications_FK;
		
		private bool _userMultipleRoles;
		
		private bool _userCanAddRoles;
		
		private EntitySet<RoleGroups_X_aspnet_Role> _RoleGroups_X_aspnet_Roles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void Onaspnet_Applications_FKChanging(System.Guid value);
    partial void Onaspnet_Applications_FKChanged();
    partial void OnuserMultipleRolesChanging(bool value);
    partial void OnuserMultipleRolesChanged();
    partial void OnuserCanAddRolesChanging(bool value);
    partial void OnuserCanAddRolesChanged();
    #endregion
		
		public RoleGroup()
		{
			this._RoleGroups_X_aspnet_Roles = new EntitySet<RoleGroups_X_aspnet_Role>(new Action<RoleGroups_X_aspnet_Role>(this.attach_RoleGroups_X_aspnet_Roles), new Action<RoleGroups_X_aspnet_Role>(this.detach_RoleGroups_X_aspnet_Roles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aspnet_Applications_FK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid aspnet_Applications_FK
		{
			get
			{
				return this._aspnet_Applications_FK;
			}
			set
			{
				if ((this._aspnet_Applications_FK != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaspnet_Applications_FKChanging(value);
					this.SendPropertyChanging();
					this._aspnet_Applications_FK = value;
					this.SendPropertyChanged("aspnet_Applications_FK");
					this.Onaspnet_Applications_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userMultipleRoles", DbType="Bit NOT NULL")]
		public bool userMultipleRoles
		{
			get
			{
				return this._userMultipleRoles;
			}
			set
			{
				if ((this._userMultipleRoles != value))
				{
					this.OnuserMultipleRolesChanging(value);
					this.SendPropertyChanging();
					this._userMultipleRoles = value;
					this.SendPropertyChanged("userMultipleRoles");
					this.OnuserMultipleRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userCanAddRoles", DbType="Bit NOT NULL")]
		public bool userCanAddRoles
		{
			get
			{
				return this._userCanAddRoles;
			}
			set
			{
				if ((this._userCanAddRoles != value))
				{
					this.OnuserCanAddRolesChanging(value);
					this.SendPropertyChanging();
					this._userCanAddRoles = value;
					this.SendPropertyChanged("userCanAddRoles");
					this.OnuserCanAddRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleGroup_RoleGroups_X_aspnet_Role", Storage="_RoleGroups_X_aspnet_Roles", ThisKey="ID", OtherKey="RoleGroups_FK")]
		public EntitySet<RoleGroups_X_aspnet_Role> RoleGroups_X_aspnet_Roles
		{
			get
			{
				return this._RoleGroups_X_aspnet_Roles;
			}
			set
			{
				this._RoleGroups_X_aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_RoleGroup", Storage="_aspnet_Application", ThisKey="aspnet_Applications_FK", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.RoleGroups.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.RoleGroups.Add(this);
						this._aspnet_Applications_FK = value.ApplicationId;
					}
					else
					{
						this._aspnet_Applications_FK = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleGroups_X_aspnet_Roles(RoleGroups_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.RoleGroup = this;
		}
		
		private void detach_RoleGroups_X_aspnet_Roles(RoleGroups_X_aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.RoleGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleGroups_X_aspnet_Roles")]
	public partial class RoleGroups_X_aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _aspnet_Roles_FK;
		
		private int _RoleGroups_FK;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<RoleGroup> _RoleGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaspnet_Roles_FKChanging(System.Guid value);
    partial void Onaspnet_Roles_FKChanged();
    partial void OnRoleGroups_FKChanging(int value);
    partial void OnRoleGroups_FKChanged();
    #endregion
		
		public RoleGroups_X_aspnet_Role()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._RoleGroup = default(EntityRef<RoleGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aspnet_Roles_FK", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid aspnet_Roles_FK
		{
			get
			{
				return this._aspnet_Roles_FK;
			}
			set
			{
				if ((this._aspnet_Roles_FK != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaspnet_Roles_FKChanging(value);
					this.SendPropertyChanging();
					this._aspnet_Roles_FK = value;
					this.SendPropertyChanged("aspnet_Roles_FK");
					this.Onaspnet_Roles_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroups_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleGroups_FK
		{
			get
			{
				return this._RoleGroups_FK;
			}
			set
			{
				if ((this._RoleGroups_FK != value))
				{
					if (this._RoleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleGroups_FKChanging(value);
					this.SendPropertyChanging();
					this._RoleGroups_FK = value;
					this.SendPropertyChanged("RoleGroups_FK");
					this.OnRoleGroups_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_RoleGroups_X_aspnet_Role", Storage="_aspnet_Role", ThisKey="aspnet_Roles_FK", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.RoleGroups_X_aspnet_Roles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.RoleGroups_X_aspnet_Roles.Add(this);
						this._aspnet_Roles_FK = value.RoleId;
					}
					else
					{
						this._aspnet_Roles_FK = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleGroup_RoleGroups_X_aspnet_Role", Storage="_RoleGroup", ThisKey="RoleGroups_FK", OtherKey="ID", IsForeignKey=true)]
		public RoleGroup RoleGroup
		{
			get
			{
				return this._RoleGroup.Entity;
			}
			set
			{
				RoleGroup previousValue = this._RoleGroup.Entity;
				if (((previousValue != value) 
							|| (this._RoleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleGroup.Entity = null;
						previousValue.RoleGroups_X_aspnet_Roles.Remove(this);
					}
					this._RoleGroup.Entity = value;
					if ((value != null))
					{
						value.RoleGroups_X_aspnet_Roles.Add(this);
						this._RoleGroups_FK = value.ID;
					}
					else
					{
						this._RoleGroups_FK = default(int);
					}
					this.SendPropertyChanged("RoleGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RoleName;
		
		private System.Nullable<int> _SiteID;
		
		private EntitySet<AdminRole> _AdminRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Role()
		{
			this._AdminRoles = new EntitySet<AdminRole>(new Action<AdminRole>(this.attach_AdminRoles), new Action<AdminRole>(this.detach_AdminRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_AdminRole", Storage="_AdminRoles", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<AdminRole> AdminRoles
		{
			get
			{
				return this._AdminRoles;
			}
			set
			{
				this._AdminRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminRoles(AdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_AdminRoles(AdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.satila_AreaProperties")]
	public partial class satila_AreaProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private int _PID;
		
		private EntityRef<satila_Area> _satila_Area;
		
		private EntityRef<satila_Property> _satila_Property;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    #endregion
		
		public satila_AreaProperty()
		{
			this._satila_Area = default(EntityRef<satila_Area>);
			this._satila_Property = default(EntityRef<satila_Property>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._satila_Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._satila_Property.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="satila_Area_satila_AreaProperty", Storage="_satila_Area", ThisKey="CID", OtherKey="CID", IsForeignKey=true)]
		public satila_Area satila_Area
		{
			get
			{
				return this._satila_Area.Entity;
			}
			set
			{
				satila_Area previousValue = this._satila_Area.Entity;
				if (((previousValue != value) 
							|| (this._satila_Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._satila_Area.Entity = null;
						previousValue.satila_AreaProperties.Remove(this);
					}
					this._satila_Area.Entity = value;
					if ((value != null))
					{
						value.satila_AreaProperties.Add(this);
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(int);
					}
					this.SendPropertyChanged("satila_Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="satila_Property_satila_AreaProperty", Storage="_satila_Property", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public satila_Property satila_Property
		{
			get
			{
				return this._satila_Property.Entity;
			}
			set
			{
				satila_Property previousValue = this._satila_Property.Entity;
				if (((previousValue != value) 
							|| (this._satila_Property.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._satila_Property.Entity = null;
						previousValue.satila_AreaProperties.Remove(this);
					}
					this._satila_Property.Entity = value;
					if ((value != null))
					{
						value.satila_AreaProperties.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("satila_Property");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.satila_Areas")]
	public partial class satila_Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private string _City;
		
		private string _Country;
		
		private System.Nullable<int> _SiteID;
		
		private EntitySet<satila_AreaProperty> _satila_AreaProperties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public satila_Area()
		{
			this._satila_AreaProperties = new EntitySet<satila_AreaProperty>(new Action<satila_AreaProperty>(this.attach_satila_AreaProperties), new Action<satila_AreaProperty>(this.detach_satila_AreaProperties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(255)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="satila_Area_satila_AreaProperty", Storage="_satila_AreaProperties", ThisKey="CID", OtherKey="CID")]
		public EntitySet<satila_AreaProperty> satila_AreaProperties
		{
			get
			{
				return this._satila_AreaProperties;
			}
			set
			{
				this._satila_AreaProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_satila_AreaProperties(satila_AreaProperty entity)
		{
			this.SendPropertyChanging();
			entity.satila_Area = this;
		}
		
		private void detach_satila_AreaProperties(satila_AreaProperty entity)
		{
			this.SendPropertyChanging();
			entity.satila_Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.satila_Files")]
	public partial class satila_File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PID;
		
		private System.Nullable<int> _LID;
		
		private string _FileName;
		
		private string _Type;
		
		private System.Nullable<int> _Sort;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _MainPic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnLIDChanging(System.Nullable<int> value);
    partial void OnLIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnMainPicChanging(System.Nullable<bool> value);
    partial void OnMainPicChanged();
    #endregion
		
		public satila_File()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LID", DbType="Int")]
		public System.Nullable<int> LID
		{
			get
			{
				return this._LID;
			}
			set
			{
				if ((this._LID != value))
				{
					this.OnLIDChanging(value);
					this.SendPropertyChanging();
					this._LID = value;
					this.SendPropertyChanged("LID");
					this.OnLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainPic", DbType="Bit")]
		public System.Nullable<bool> MainPic
		{
			get
			{
				return this._MainPic;
			}
			set
			{
				if ((this._MainPic != value))
				{
					this.OnMainPicChanging(value);
					this.SendPropertyChanging();
					this._MainPic = value;
					this.SendPropertyChanged("MainPic");
					this.OnMainPicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.satila_Lokal")]
	public partial class satila_Lokal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LID;
		
		private System.Nullable<int> _PID;
		
		private string _Area;
		
		private string _Address;
		
		private string _Floor;
		
		private string _Square;
		
		private string _Type;
		
		private string _Other;
		
		private System.Nullable<System.DateTime> _AvailableDate;
		
		private string _Text;
		
		private string _Internet;
		
		private string _Elevator;
		
		private string _HouseType;
		
		private string _Notering;
		
		private System.Nullable<int> _SiteID;
		
		private System.Nullable<bool> _Vacant;
		
		private EntitySet<satila_LokalType> _satila_LokalTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLIDChanging(int value);
    partial void OnLIDChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnSquareChanging(string value);
    partial void OnSquareChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnOtherChanging(string value);
    partial void OnOtherChanged();
    partial void OnAvailableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAvailableDateChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnInternetChanging(string value);
    partial void OnInternetChanged();
    partial void OnElevatorChanging(string value);
    partial void OnElevatorChanged();
    partial void OnHouseTypeChanging(string value);
    partial void OnHouseTypeChanged();
    partial void OnNoteringChanging(string value);
    partial void OnNoteringChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnVacantChanging(System.Nullable<bool> value);
    partial void OnVacantChanged();
    #endregion
		
		public satila_Lokal()
		{
			this._satila_LokalTypes = new EntitySet<satila_LokalType>(new Action<satila_LokalType>(this.attach_satila_LokalTypes), new Action<satila_LokalType>(this.detach_satila_LokalTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LID
		{
			get
			{
				return this._LID;
			}
			set
			{
				if ((this._LID != value))
				{
					this.OnLIDChanging(value);
					this.SendPropertyChanging();
					this._LID = value;
					this.SendPropertyChanged("LID");
					this.OnLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(255)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(150)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Square", DbType="NVarChar(150)")]
		public string Square
		{
			get
			{
				return this._Square;
			}
			set
			{
				if ((this._Square != value))
				{
					this.OnSquareChanging(value);
					this.SendPropertyChanging();
					this._Square = value;
					this.SendPropertyChanged("Square");
					this.OnSquareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(150)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="NVarChar(255)")]
		public string Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this.OnOtherChanging(value);
					this.SendPropertyChanging();
					this._Other = value;
					this.SendPropertyChanged("Other");
					this.OnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AvailableDate
		{
			get
			{
				return this._AvailableDate;
			}
			set
			{
				if ((this._AvailableDate != value))
				{
					this.OnAvailableDateChanging(value);
					this.SendPropertyChanging();
					this._AvailableDate = value;
					this.SendPropertyChanged("AvailableDate");
					this.OnAvailableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Internet", DbType="NVarChar(100)")]
		public string Internet
		{
			get
			{
				return this._Internet;
			}
			set
			{
				if ((this._Internet != value))
				{
					this.OnInternetChanging(value);
					this.SendPropertyChanging();
					this._Internet = value;
					this.SendPropertyChanged("Internet");
					this.OnInternetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elevator", DbType="NVarChar(255)")]
		public string Elevator
		{
			get
			{
				return this._Elevator;
			}
			set
			{
				if ((this._Elevator != value))
				{
					this.OnElevatorChanging(value);
					this.SendPropertyChanging();
					this._Elevator = value;
					this.SendPropertyChanged("Elevator");
					this.OnElevatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseType", DbType="NVarChar(255)")]
		public string HouseType
		{
			get
			{
				return this._HouseType;
			}
			set
			{
				if ((this._HouseType != value))
				{
					this.OnHouseTypeChanging(value);
					this.SendPropertyChanging();
					this._HouseType = value;
					this.SendPropertyChanged("HouseType");
					this.OnHouseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notering", DbType="NVarChar(255)")]
		public string Notering
		{
			get
			{
				return this._Notering;
			}
			set
			{
				if ((this._Notering != value))
				{
					this.OnNoteringChanging(value);
					this.SendPropertyChanging();
					this._Notering = value;
					this.SendPropertyChanged("Notering");
					this.OnNoteringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vacant", DbType="Bit")]
		public System.Nullable<bool> Vacant
		{
			get
			{
				return this._Vacant;
			}
			set
			{
				if ((this._Vacant != value))
				{
					this.OnVacantChanging(value);
					this.SendPropertyChanging();
					this._Vacant = value;
					this.SendPropertyChanged("Vacant");
					this.OnVacantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="satila_Lokal_satila_LokalType", Storage="_satila_LokalTypes", ThisKey="LID", OtherKey="LID")]
		public EntitySet<satila_LokalType> satila_LokalTypes
		{
			get
			{
				return this._satila_LokalTypes;
			}
			set
			{
				this._satila_LokalTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_satila_LokalTypes(satila_LokalType entity)
		{
			this.SendPropertyChanging();
			entity.satila_Lokal = this;
		}
		
		private void detach_satila_LokalTypes(satila_LokalType entity)
		{
			this.SendPropertyChanging();
			entity.satila_Lokal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.satila_Lokal_attribute")]
	public partial class satila_Lokal_attribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AID;
		
		private int _LID;
		
		private string _Header;
		
		private string _Value_;
		
		private bool _Hide;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAIDChanging(int value);
    partial void OnAIDChanged();
    partial void OnLIDChanging(int value);
    partial void OnLIDChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnValue_Changing(string value);
    partial void OnValue_Changed();
    partial void OnHideChanging(bool value);
    partial void OnHideChanged();
    #endregion
		
		public satila_Lokal_attribute()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AID
		{
			get
			{
				return this._AID;
			}
			set
			{
				if ((this._AID != value))
				{
					this.OnAIDChanging(value);
					this.SendPropertyChanging();
					this._AID = value;
					this.SendPropertyChanged("AID");
					this.OnAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LID", DbType="Int NOT NULL")]
		public int LID
		{
			get
			{
				return this._LID;
			}
			set
			{
				if ((this._LID != value))
				{
					this.OnLIDChanging(value);
					this.SendPropertyChanging();
					this._LID = value;
					this.SendPropertyChanged("LID");
					this.OnLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value_", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Value_
		{
			get
			{
				return this._Value_;
			}
			set
			{
				if ((this._Value_ != value))
				{
					this.OnValue_Changing(value);
					this.SendPropertyChanging();
					this._Value_ = value;
					this.SendPropertyChanged("Value_");
					this.OnValue_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.satila_LokalType")]
	public partial class satila_LokalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TID;
		
		private int _LID;
		
		private EntityRef<satila_Lokal> _satila_Lokal;
		
		private EntityRef<satila_Type> _satila_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIDChanging(int value);
    partial void OnTIDChanged();
    partial void OnLIDChanging(int value);
    partial void OnLIDChanged();
    #endregion
		
		public satila_LokalType()
		{
			this._satila_Lokal = default(EntityRef<satila_Lokal>);
			this._satila_Type = default(EntityRef<satila_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					if (this._satila_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIDChanging(value);
					this.SendPropertyChanging();
					this._TID = value;
					this.SendPropertyChanged("TID");
					this.OnTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LID
		{
			get
			{
				return this._LID;
			}
			set
			{
				if ((this._LID != value))
				{
					if (this._satila_Lokal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIDChanging(value);
					this.SendPropertyChanging();
					this._LID = value;
					this.SendPropertyChanged("LID");
					this.OnLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="satila_Lokal_satila_LokalType", Storage="_satila_Lokal", ThisKey="LID", OtherKey="LID", IsForeignKey=true)]
		public satila_Lokal satila_Lokal
		{
			get
			{
				return this._satila_Lokal.Entity;
			}
			set
			{
				satila_Lokal previousValue = this._satila_Lokal.Entity;
				if (((previousValue != value) 
							|| (this._satila_Lokal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._satila_Lokal.Entity = null;
						previousValue.satila_LokalTypes.Remove(this);
					}
					this._satila_Lokal.Entity = value;
					if ((value != null))
					{
						value.satila_LokalTypes.Add(this);
						this._LID = value.LID;
					}
					else
					{
						this._LID = default(int);
					}
					this.SendPropertyChanged("satila_Lokal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="satila_Type_satila_LokalType", Storage="_satila_Type", ThisKey="TID", OtherKey="TID", IsForeignKey=true)]
		public satila_Type satila_Type
		{
			get
			{
				return this._satila_Type.Entity;
			}
			set
			{
				satila_Type previousValue = this._satila_Type.Entity;
				if (((previousValue != value) 
							|| (this._satila_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._satila_Type.Entity = null;
						previousValue.satila_LokalTypes.Remove(this);
					}
					this._satila_Type.Entity = value;
					if ((value != null))
					{
						value.satila_LokalTypes.Add(this);
						this._TID = value.TID;
					}
					else
					{
						this._TID = default(int);
					}
					this.SendPropertyChanged("satila_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.satila_Properties")]
	public partial class satila_Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PID;
		
		private string _Address;
		
		private string _AreaCode;
		
		private string _City;
		
		private string _Text;
		
		private System.Nullable<int> _SiteID;
		
		private string _Maplink;
		
		private System.Nullable<bool> _Deleted;
		
		private EntitySet<satila_AreaProperty> _satila_AreaProperties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAreaCodeChanging(string value);
    partial void OnAreaCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnMaplinkChanging(string value);
    partial void OnMaplinkChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public satila_Property()
		{
			this._satila_AreaProperties = new EntitySet<satila_AreaProperty>(new Action<satila_AreaProperty>(this.attach_satila_AreaProperties), new Action<satila_AreaProperty>(this.detach_satila_AreaProperties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode", DbType="NVarChar(50)")]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this.OnAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._AreaCode = value;
					this.SendPropertyChanged("AreaCode");
					this.OnAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(150)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maplink", DbType="NVarChar(MAX)")]
		public string Maplink
		{
			get
			{
				return this._Maplink;
			}
			set
			{
				if ((this._Maplink != value))
				{
					this.OnMaplinkChanging(value);
					this.SendPropertyChanging();
					this._Maplink = value;
					this.SendPropertyChanged("Maplink");
					this.OnMaplinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="satila_Property_satila_AreaProperty", Storage="_satila_AreaProperties", ThisKey="PID", OtherKey="PID")]
		public EntitySet<satila_AreaProperty> satila_AreaProperties
		{
			get
			{
				return this._satila_AreaProperties;
			}
			set
			{
				this._satila_AreaProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_satila_AreaProperties(satila_AreaProperty entity)
		{
			this.SendPropertyChanging();
			entity.satila_Property = this;
		}
		
		private void detach_satila_AreaProperties(satila_AreaProperty entity)
		{
			this.SendPropertyChanging();
			entity.satila_Property = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.satila_Types")]
	public partial class satila_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _SiteID;
		
		private EntitySet<satila_LokalType> _satila_LokalTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIDChanging(int value);
    partial void OnTIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public satila_Type()
		{
			this._satila_LokalTypes = new EntitySet<satila_LokalType>(new Action<satila_LokalType>(this.attach_satila_LokalTypes), new Action<satila_LokalType>(this.detach_satila_LokalTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					this.OnTIDChanging(value);
					this.SendPropertyChanging();
					this._TID = value;
					this.SendPropertyChanged("TID");
					this.OnTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="satila_Type_satila_LokalType", Storage="_satila_LokalTypes", ThisKey="TID", OtherKey="TID")]
		public EntitySet<satila_LokalType> satila_LokalTypes
		{
			get
			{
				return this._satila_LokalTypes;
			}
			set
			{
				this._satila_LokalTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_satila_LokalTypes(satila_LokalType entity)
		{
			this.SendPropertyChanging();
			entity.satila_Type = this;
		}
		
		private void detach_satila_LokalTypes(satila_LokalType entity)
		{
			this.SendPropertyChanging();
			entity.satila_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sh_ShareHolding")]
	public partial class sh_ShareHolding : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ObjectID;
		
		private string _Name;
		
		private string _Image;
		
		private string _Html;
		
		private System.Nullable<int> _DisplayOrder;
		
		private bool _Hidden;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnHtmlChanging(string value);
    partial void OnHtmlChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnHiddenChanging(bool value);
    partial void OnHiddenChanged();
    #endregion
		
		public sh_ShareHolding()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(255)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Html", DbType="NVarChar(MAX)")]
		public string Html
		{
			get
			{
				return this._Html;
			}
			set
			{
				if ((this._Html != value))
				{
					this.OnHtmlChanging(value);
					this.SendPropertyChanging();
					this._Html = value;
					this.SendPropertyChanged("Html");
					this.OnHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="Bit NOT NULL")]
		public bool Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged("Hidden");
					this.OnHiddenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Site")]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteID;
		
		private string _SiteName;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _ConfigID;
		
		private EntitySet<Form_ExternalConnection> _Form_ExternalConnections;
		
		private EntitySet<Admin> _Admins;
		
		private EntitySet<Aim_Dropdown__Area> _Aim_Dropdown__Areas;
		
		private EntitySet<Aim_Dropdown_Connection> _Aim_Dropdown_Connections;
		
		private EntitySet<Aim_Dropdown_Page> _Aim_Dropdown_Pages;
		
		private EntitySet<AimWalk_Group> _AimWalk_Groups;
		
		private EntitySet<AimWalk_UsersInCompany> _AimWalk_UsersInCompanies;
		
		private EntitySet<Connect_RegionGroup> _Connect_RegionGroups;
		
		private EntitySet<crm_DevelopmentAssignment> _crm_DevelopmentAssignments;
		
		private EntitySet<crm_DevelopmentAssignments_Type> _crm_DevelopmentAssignments_Types;
		
		private EntitySet<crm_staffreport> _crm_staffreports;
		
		private EntitySet<DocumentArchive_X_Site> _DocumentArchive_X_Sites;
		
		private EntitySet<Form_Responder> _Form_Responders;
		
		private EntitySet<Form_Setting> _Form_Settings;
		
		private EntitySet<Intranet> _Intranets;
		
		private EntitySet<Object> _Objects;
		
		private EntitySet<Planinglist_Site> _Planinglist_Sites;
		
		private EntitySet<Products_X_Site> _Products_X_Sites;
		
		private EntitySet<QuizQuestion> _QuizQuestions;
		
		private EntitySet<SiteLanguage> _SiteLanguages;
		
		private EntitySet<SiteModule> _SiteModules;
		
		private EntitySet<SiteObjectType> _SiteObjectTypes;
		
		private EntitySet<SiteTemplate> _SiteTemplates;
		
		private EntityRef<AimDoc> _AimDoc;
		
		private EntityRef<Config> _Config;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnConfigIDChanging(System.Nullable<int> value);
    partial void OnConfigIDChanged();
    #endregion
		
		public Site()
		{
			this._Form_ExternalConnections = new EntitySet<Form_ExternalConnection>(new Action<Form_ExternalConnection>(this.attach_Form_ExternalConnections), new Action<Form_ExternalConnection>(this.detach_Form_ExternalConnections));
			this._Admins = new EntitySet<Admin>(new Action<Admin>(this.attach_Admins), new Action<Admin>(this.detach_Admins));
			this._Aim_Dropdown__Areas = new EntitySet<Aim_Dropdown__Area>(new Action<Aim_Dropdown__Area>(this.attach_Aim_Dropdown__Areas), new Action<Aim_Dropdown__Area>(this.detach_Aim_Dropdown__Areas));
			this._Aim_Dropdown_Connections = new EntitySet<Aim_Dropdown_Connection>(new Action<Aim_Dropdown_Connection>(this.attach_Aim_Dropdown_Connections), new Action<Aim_Dropdown_Connection>(this.detach_Aim_Dropdown_Connections));
			this._Aim_Dropdown_Pages = new EntitySet<Aim_Dropdown_Page>(new Action<Aim_Dropdown_Page>(this.attach_Aim_Dropdown_Pages), new Action<Aim_Dropdown_Page>(this.detach_Aim_Dropdown_Pages));
			this._AimWalk_Groups = new EntitySet<AimWalk_Group>(new Action<AimWalk_Group>(this.attach_AimWalk_Groups), new Action<AimWalk_Group>(this.detach_AimWalk_Groups));
			this._AimWalk_UsersInCompanies = new EntitySet<AimWalk_UsersInCompany>(new Action<AimWalk_UsersInCompany>(this.attach_AimWalk_UsersInCompanies), new Action<AimWalk_UsersInCompany>(this.detach_AimWalk_UsersInCompanies));
			this._Connect_RegionGroups = new EntitySet<Connect_RegionGroup>(new Action<Connect_RegionGroup>(this.attach_Connect_RegionGroups), new Action<Connect_RegionGroup>(this.detach_Connect_RegionGroups));
			this._crm_DevelopmentAssignments = new EntitySet<crm_DevelopmentAssignment>(new Action<crm_DevelopmentAssignment>(this.attach_crm_DevelopmentAssignments), new Action<crm_DevelopmentAssignment>(this.detach_crm_DevelopmentAssignments));
			this._crm_DevelopmentAssignments_Types = new EntitySet<crm_DevelopmentAssignments_Type>(new Action<crm_DevelopmentAssignments_Type>(this.attach_crm_DevelopmentAssignments_Types), new Action<crm_DevelopmentAssignments_Type>(this.detach_crm_DevelopmentAssignments_Types));
			this._crm_staffreports = new EntitySet<crm_staffreport>(new Action<crm_staffreport>(this.attach_crm_staffreports), new Action<crm_staffreport>(this.detach_crm_staffreports));
			this._DocumentArchive_X_Sites = new EntitySet<DocumentArchive_X_Site>(new Action<DocumentArchive_X_Site>(this.attach_DocumentArchive_X_Sites), new Action<DocumentArchive_X_Site>(this.detach_DocumentArchive_X_Sites));
			this._Form_Responders = new EntitySet<Form_Responder>(new Action<Form_Responder>(this.attach_Form_Responders), new Action<Form_Responder>(this.detach_Form_Responders));
			this._Form_Settings = new EntitySet<Form_Setting>(new Action<Form_Setting>(this.attach_Form_Settings), new Action<Form_Setting>(this.detach_Form_Settings));
			this._Intranets = new EntitySet<Intranet>(new Action<Intranet>(this.attach_Intranets), new Action<Intranet>(this.detach_Intranets));
			this._Objects = new EntitySet<Object>(new Action<Object>(this.attach_Objects), new Action<Object>(this.detach_Objects));
			this._Planinglist_Sites = new EntitySet<Planinglist_Site>(new Action<Planinglist_Site>(this.attach_Planinglist_Sites), new Action<Planinglist_Site>(this.detach_Planinglist_Sites));
			this._Products_X_Sites = new EntitySet<Products_X_Site>(new Action<Products_X_Site>(this.attach_Products_X_Sites), new Action<Products_X_Site>(this.detach_Products_X_Sites));
			this._QuizQuestions = new EntitySet<QuizQuestion>(new Action<QuizQuestion>(this.attach_QuizQuestions), new Action<QuizQuestion>(this.detach_QuizQuestions));
			this._SiteLanguages = new EntitySet<SiteLanguage>(new Action<SiteLanguage>(this.attach_SiteLanguages), new Action<SiteLanguage>(this.detach_SiteLanguages));
			this._SiteModules = new EntitySet<SiteModule>(new Action<SiteModule>(this.attach_SiteModules), new Action<SiteModule>(this.detach_SiteModules));
			this._SiteObjectTypes = new EntitySet<SiteObjectType>(new Action<SiteObjectType>(this.attach_SiteObjectTypes), new Action<SiteObjectType>(this.detach_SiteObjectTypes));
			this._SiteTemplates = new EntitySet<SiteTemplate>(new Action<SiteTemplate>(this.attach_SiteTemplates), new Action<SiteTemplate>(this.detach_SiteTemplates));
			this._AimDoc = default(EntityRef<AimDoc>);
			this._Config = default(EntityRef<Config>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigID", DbType="Int")]
		public System.Nullable<int> ConfigID
		{
			get
			{
				return this._ConfigID;
			}
			set
			{
				if ((this._ConfigID != value))
				{
					if (this._Config.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfigIDChanging(value);
					this.SendPropertyChanging();
					this._ConfigID = value;
					this.SendPropertyChanged("ConfigID");
					this.OnConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Form_ExternalConnection", Storage="_Form_ExternalConnections", ThisKey="SiteID", OtherKey="Site_FK")]
		public EntitySet<Form_ExternalConnection> Form_ExternalConnections
		{
			get
			{
				return this._Form_ExternalConnections;
			}
			set
			{
				this._Form_ExternalConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Admin", Storage="_Admins", ThisKey="SiteID", OtherKey="siteID")]
		public EntitySet<Admin> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Aim_Dropdown__Area", Storage="_Aim_Dropdown__Areas", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<Aim_Dropdown__Area> Aim_Dropdown__Areas
		{
			get
			{
				return this._Aim_Dropdown__Areas;
			}
			set
			{
				this._Aim_Dropdown__Areas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Aim_Dropdown_Connection", Storage="_Aim_Dropdown_Connections", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<Aim_Dropdown_Connection> Aim_Dropdown_Connections
		{
			get
			{
				return this._Aim_Dropdown_Connections;
			}
			set
			{
				this._Aim_Dropdown_Connections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Aim_Dropdown_Page", Storage="_Aim_Dropdown_Pages", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<Aim_Dropdown_Page> Aim_Dropdown_Pages
		{
			get
			{
				return this._Aim_Dropdown_Pages;
			}
			set
			{
				this._Aim_Dropdown_Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_AimWalk_Group", Storage="_AimWalk_Groups", ThisKey="SiteID", OtherKey="CompanyID")]
		public EntitySet<AimWalk_Group> AimWalk_Groups
		{
			get
			{
				return this._AimWalk_Groups;
			}
			set
			{
				this._AimWalk_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_AimWalk_UsersInCompany", Storage="_AimWalk_UsersInCompanies", ThisKey="SiteID", OtherKey="CompanyID")]
		public EntitySet<AimWalk_UsersInCompany> AimWalk_UsersInCompanies
		{
			get
			{
				return this._AimWalk_UsersInCompanies;
			}
			set
			{
				this._AimWalk_UsersInCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Connect_RegionGroup", Storage="_Connect_RegionGroups", ThisKey="SiteID", OtherKey="Site_FK")]
		public EntitySet<Connect_RegionGroup> Connect_RegionGroups
		{
			get
			{
				return this._Connect_RegionGroups;
			}
			set
			{
				this._Connect_RegionGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_crm_DevelopmentAssignment", Storage="_crm_DevelopmentAssignments", ThisKey="SiteID", OtherKey="SiteID_FK")]
		public EntitySet<crm_DevelopmentAssignment> crm_DevelopmentAssignments
		{
			get
			{
				return this._crm_DevelopmentAssignments;
			}
			set
			{
				this._crm_DevelopmentAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_crm_DevelopmentAssignments_Type", Storage="_crm_DevelopmentAssignments_Types", ThisKey="SiteID", OtherKey="SiteID_FK")]
		public EntitySet<crm_DevelopmentAssignments_Type> crm_DevelopmentAssignments_Types
		{
			get
			{
				return this._crm_DevelopmentAssignments_Types;
			}
			set
			{
				this._crm_DevelopmentAssignments_Types.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_crm_staffreport", Storage="_crm_staffreports", ThisKey="SiteID", OtherKey="Site_FK")]
		public EntitySet<crm_staffreport> crm_staffreports
		{
			get
			{
				return this._crm_staffreports;
			}
			set
			{
				this._crm_staffreports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_DocumentArchive_X_Site", Storage="_DocumentArchive_X_Sites", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<DocumentArchive_X_Site> DocumentArchive_X_Sites
		{
			get
			{
				return this._DocumentArchive_X_Sites;
			}
			set
			{
				this._DocumentArchive_X_Sites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Form_Responder", Storage="_Form_Responders", ThisKey="SiteID", OtherKey="Site_FK")]
		public EntitySet<Form_Responder> Form_Responders
		{
			get
			{
				return this._Form_Responders;
			}
			set
			{
				this._Form_Responders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Form_Setting", Storage="_Form_Settings", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<Form_Setting> Form_Settings
		{
			get
			{
				return this._Form_Settings;
			}
			set
			{
				this._Form_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Intranet", Storage="_Intranets", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<Intranet> Intranets
		{
			get
			{
				return this._Intranets;
			}
			set
			{
				this._Intranets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Object", Storage="_Objects", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<Object> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Planinglist_Site", Storage="_Planinglist_Sites", ThisKey="SiteID", OtherKey="SiteID_FK")]
		public EntitySet<Planinglist_Site> Planinglist_Sites
		{
			get
			{
				return this._Planinglist_Sites;
			}
			set
			{
				this._Planinglist_Sites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Products_X_Site", Storage="_Products_X_Sites", ThisKey="SiteID", OtherKey="Site_FK")]
		public EntitySet<Products_X_Site> Products_X_Sites
		{
			get
			{
				return this._Products_X_Sites;
			}
			set
			{
				this._Products_X_Sites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_QuizQuestion", Storage="_QuizQuestions", ThisKey="SiteID", OtherKey="Site_FK")]
		public EntitySet<QuizQuestion> QuizQuestions
		{
			get
			{
				return this._QuizQuestions;
			}
			set
			{
				this._QuizQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteLanguage", Storage="_SiteLanguages", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<SiteLanguage> SiteLanguages
		{
			get
			{
				return this._SiteLanguages;
			}
			set
			{
				this._SiteLanguages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteModule", Storage="_SiteModules", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<SiteModule> SiteModules
		{
			get
			{
				return this._SiteModules;
			}
			set
			{
				this._SiteModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteObjectType", Storage="_SiteObjectTypes", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<SiteObjectType> SiteObjectTypes
		{
			get
			{
				return this._SiteObjectTypes;
			}
			set
			{
				this._SiteObjectTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteTemplate", Storage="_SiteTemplates", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<SiteTemplate> SiteTemplates
		{
			get
			{
				return this._SiteTemplates;
			}
			set
			{
				this._SiteTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_AimDoc", Storage="_AimDoc", ThisKey="SiteID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public AimDoc AimDoc
		{
			get
			{
				return this._AimDoc.Entity;
			}
			set
			{
				AimDoc previousValue = this._AimDoc.Entity;
				if (((previousValue != value) 
							|| (this._AimDoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AimDoc.Entity = null;
						previousValue.Site = null;
					}
					this._AimDoc.Entity = value;
					if ((value != null))
					{
						value.Site = this;
					}
					this.SendPropertyChanged("AimDoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Config_Site", Storage="_Config", ThisKey="ConfigID", OtherKey="ID", IsForeignKey=true)]
		public Config Config
		{
			get
			{
				return this._Config.Entity;
			}
			set
			{
				Config previousValue = this._Config.Entity;
				if (((previousValue != value) 
							|| (this._Config.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Config.Entity = null;
						previousValue.Sites.Remove(this);
					}
					this._Config.Entity = value;
					if ((value != null))
					{
						value.Sites.Add(this);
						this._ConfigID = value.ID;
					}
					else
					{
						this._ConfigID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Config");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_ExternalConnections(Form_ExternalConnection entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Form_ExternalConnections(Form_ExternalConnection entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Aim_Dropdown__Areas(Aim_Dropdown__Area entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Aim_Dropdown__Areas(Aim_Dropdown__Area entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Aim_Dropdown_Connections(Aim_Dropdown_Connection entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Aim_Dropdown_Connections(Aim_Dropdown_Connection entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Aim_Dropdown_Pages(Aim_Dropdown_Page entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Aim_Dropdown_Pages(Aim_Dropdown_Page entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_AimWalk_Groups(AimWalk_Group entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_AimWalk_Groups(AimWalk_Group entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_AimWalk_UsersInCompanies(AimWalk_UsersInCompany entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_AimWalk_UsersInCompanies(AimWalk_UsersInCompany entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Connect_RegionGroups(Connect_RegionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Connect_RegionGroups(Connect_RegionGroup entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_crm_DevelopmentAssignments(crm_DevelopmentAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_crm_DevelopmentAssignments(crm_DevelopmentAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_crm_DevelopmentAssignments_Types(crm_DevelopmentAssignments_Type entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_crm_DevelopmentAssignments_Types(crm_DevelopmentAssignments_Type entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_crm_staffreports(crm_staffreport entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_crm_staffreports(crm_staffreport entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_DocumentArchive_X_Sites(DocumentArchive_X_Site entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_DocumentArchive_X_Sites(DocumentArchive_X_Site entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Form_Responders(Form_Responder entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Form_Responders(Form_Responder entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Form_Settings(Form_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Form_Settings(Form_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Intranets(Intranet entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Intranets(Intranet entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Planinglist_Sites(Planinglist_Site entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Planinglist_Sites(Planinglist_Site entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Products_X_Sites(Products_X_Site entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Products_X_Sites(Products_X_Site entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_QuizQuestions(QuizQuestion entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_QuizQuestions(QuizQuestion entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_SiteLanguages(SiteLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_SiteLanguages(SiteLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_SiteModules(SiteModule entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_SiteModules(SiteModule entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_SiteObjectTypes(SiteObjectType entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_SiteObjectTypes(SiteObjectType entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_SiteTemplates(SiteTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_SiteTemplates(SiteTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteLanguage")]
	public partial class SiteLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LangID;
		
		private int _SiteID;
		
		private System.Nullable<int> _RootID;
		
		private System.Nullable<int> _StartPageID;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnRootIDChanging(System.Nullable<int> value);
    partial void OnRootIDChanged();
    partial void OnStartPageIDChanging(System.Nullable<int> value);
    partial void OnStartPageIDChanged();
    #endregion
		
		public SiteLanguage()
		{
			this._Language = default(EntityRef<Language>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootID", DbType="Int")]
		public System.Nullable<int> RootID
		{
			get
			{
				return this._RootID;
			}
			set
			{
				if ((this._RootID != value))
				{
					this.OnRootIDChanging(value);
					this.SendPropertyChanging();
					this._RootID = value;
					this.SendPropertyChanged("RootID");
					this.OnRootIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartPageID", DbType="Int")]
		public System.Nullable<int> StartPageID
		{
			get
			{
				return this._StartPageID;
			}
			set
			{
				if ((this._StartPageID != value))
				{
					this.OnStartPageIDChanging(value);
					this.SendPropertyChanging();
					this._StartPageID = value;
					this.SendPropertyChanged("StartPageID");
					this.OnStartPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_SiteLanguage", Storage="_Language", ThisKey="LangID", OtherKey="LangID", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.SiteLanguages.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.SiteLanguages.Add(this);
						this._LangID = value.LangID;
					}
					else
					{
						this._LangID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteLanguage", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.SiteLanguages.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.SiteLanguages.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteModule")]
	public partial class SiteModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteID;
		
		private int _ModuleID;
		
		private EntityRef<Module> _Module;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    #endregion
		
		public SiteModule()
		{
			this._Module = default(EntityRef<Module>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_SiteModule", Storage="_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true)]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.SiteModules.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.SiteModules.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteModule", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.SiteModules.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.SiteModules.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteObjectType")]
	public partial class SiteObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteID;
		
		private int _ObjectTypeID;
		
		private string _ObjectTypeURL;
		
		private bool _UseLongURL;
		
		private EntityRef<ObjectType> _ObjectType;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnObjectTypeURLChanging(string value);
    partial void OnObjectTypeURLChanged();
    partial void OnUseLongURLChanging(bool value);
    partial void OnUseLongURLChanged();
    #endregion
		
		public SiteObjectType()
		{
			this._ObjectType = default(EntityRef<ObjectType>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeURL", DbType="NVarChar(255)")]
		public string ObjectTypeURL
		{
			get
			{
				return this._ObjectTypeURL;
			}
			set
			{
				if ((this._ObjectTypeURL != value))
				{
					this.OnObjectTypeURLChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeURL = value;
					this.SendPropertyChanged("ObjectTypeURL");
					this.OnObjectTypeURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLongURL", DbType="Bit NOT NULL")]
		public bool UseLongURL
		{
			get
			{
				return this._UseLongURL;
			}
			set
			{
				if ((this._UseLongURL != value))
				{
					this.OnUseLongURLChanging(value);
					this.SendPropertyChanging();
					this._UseLongURL = value;
					this.SendPropertyChanged("UseLongURL");
					this.OnUseLongURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectType_SiteObjectType", Storage="_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public ObjectType ObjectType
		{
			get
			{
				return this._ObjectType.Entity;
			}
			set
			{
				ObjectType previousValue = this._ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectType.Entity = null;
						previousValue.SiteObjectTypes.Remove(this);
					}
					this._ObjectType.Entity = value;
					if ((value != null))
					{
						value.SiteObjectTypes.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(int);
					}
					this.SendPropertyChanged("ObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteObjectType", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.SiteObjectTypes.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.SiteObjectTypes.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteTemplates")]
	public partial class SiteTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID;
		
		private string _TemplateName;
		
		private string _PageHandler;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnTemplateNameChanging(string value);
    partial void OnTemplateNameChanged();
    partial void OnPageHandlerChanging(string value);
    partial void OnPageHandlerChanged();
    #endregion
		
		public SiteTemplate()
		{
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TemplateName
		{
			get
			{
				return this._TemplateName;
			}
			set
			{
				if ((this._TemplateName != value))
				{
					this.OnTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._TemplateName = value;
					this.SendPropertyChanged("TemplateName");
					this.OnTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageHandler", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PageHandler
		{
			get
			{
				return this._PageHandler;
			}
			set
			{
				if ((this._PageHandler != value))
				{
					this.OnPageHandlerChanging(value);
					this.SendPropertyChanging();
					this._PageHandler = value;
					this.SendPropertyChanged("PageHandler");
					this.OnPageHandlerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteTemplate", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.SiteTemplates.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.SiteTemplates.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_Calender")]
	public partial class Skogshjortarna_Calender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Skogshjortarna_CalenderType_FK;
		
		private System.Nullable<int> _Skogshjortarna_CompetitionType_FK;
		
		private System.DateTime _ActivityDate;
		
		private string _ActivityName;
		
		private System.Nullable<System.DateTime> _EntryDate;
		
		private string _KlubbenOnlineLinkId;
		
		private string _ClubLink;
		
		private string _ResultsLink;
		
		private string _Winsplit;
		
		private string _Responsible;
		
		private System.Nullable<bool> _Lamp;
		
		private string _Shoes;
		
		private string _MoreInfo;
		
		private bool _Deleted;
		
		private EntitySet<Skogshjortarna_Calender_X_TrainingGroup> _Skogshjortarna_Calender_X_TrainingGroups;
		
		private EntityRef<Skogshjortarna_CalenderType> _Skogshjortarna_CalenderType;
		
		private EntityRef<Skogshjortarna_CompetitionType> _Skogshjortarna_CompetitionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSkogshjortarna_CalenderType_FKChanging(int value);
    partial void OnSkogshjortarna_CalenderType_FKChanged();
    partial void OnSkogshjortarna_CompetitionType_FKChanging(System.Nullable<int> value);
    partial void OnSkogshjortarna_CompetitionType_FKChanged();
    partial void OnActivityDateChanging(System.DateTime value);
    partial void OnActivityDateChanged();
    partial void OnActivityNameChanging(string value);
    partial void OnActivityNameChanged();
    partial void OnEntryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEntryDateChanged();
    partial void OnKlubbenOnlineLinkIdChanging(string value);
    partial void OnKlubbenOnlineLinkIdChanged();
    partial void OnClubLinkChanging(string value);
    partial void OnClubLinkChanged();
    partial void OnResultsLinkChanging(string value);
    partial void OnResultsLinkChanged();
    partial void OnWinsplitChanging(string value);
    partial void OnWinsplitChanged();
    partial void OnResponsibleChanging(string value);
    partial void OnResponsibleChanged();
    partial void OnLampChanging(System.Nullable<bool> value);
    partial void OnLampChanged();
    partial void OnShoesChanging(string value);
    partial void OnShoesChanged();
    partial void OnMoreInfoChanging(string value);
    partial void OnMoreInfoChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Skogshjortarna_Calender()
		{
			this._Skogshjortarna_Calender_X_TrainingGroups = new EntitySet<Skogshjortarna_Calender_X_TrainingGroup>(new Action<Skogshjortarna_Calender_X_TrainingGroup>(this.attach_Skogshjortarna_Calender_X_TrainingGroups), new Action<Skogshjortarna_Calender_X_TrainingGroup>(this.detach_Skogshjortarna_Calender_X_TrainingGroups));
			this._Skogshjortarna_CalenderType = default(EntityRef<Skogshjortarna_CalenderType>);
			this._Skogshjortarna_CompetitionType = default(EntityRef<Skogshjortarna_CompetitionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skogshjortarna_CalenderType_FK", DbType="Int NOT NULL")]
		public int Skogshjortarna_CalenderType_FK
		{
			get
			{
				return this._Skogshjortarna_CalenderType_FK;
			}
			set
			{
				if ((this._Skogshjortarna_CalenderType_FK != value))
				{
					if (this._Skogshjortarna_CalenderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkogshjortarna_CalenderType_FKChanging(value);
					this.SendPropertyChanging();
					this._Skogshjortarna_CalenderType_FK = value;
					this.SendPropertyChanged("Skogshjortarna_CalenderType_FK");
					this.OnSkogshjortarna_CalenderType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skogshjortarna_CompetitionType_FK", DbType="Int")]
		public System.Nullable<int> Skogshjortarna_CompetitionType_FK
		{
			get
			{
				return this._Skogshjortarna_CompetitionType_FK;
			}
			set
			{
				if ((this._Skogshjortarna_CompetitionType_FK != value))
				{
					if (this._Skogshjortarna_CompetitionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkogshjortarna_CompetitionType_FKChanging(value);
					this.SendPropertyChanging();
					this._Skogshjortarna_CompetitionType_FK = value;
					this.SendPropertyChanged("Skogshjortarna_CompetitionType_FK");
					this.OnSkogshjortarna_CompetitionType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActivityDate
		{
			get
			{
				return this._ActivityDate;
			}
			set
			{
				if ((this._ActivityDate != value))
				{
					this.OnActivityDateChanging(value);
					this.SendPropertyChanging();
					this._ActivityDate = value;
					this.SendPropertyChanged("ActivityDate");
					this.OnActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityName", DbType="NVarChar(100)")]
		public string ActivityName
		{
			get
			{
				return this._ActivityName;
			}
			set
			{
				if ((this._ActivityName != value))
				{
					this.OnActivityNameChanging(value);
					this.SendPropertyChanging();
					this._ActivityName = value;
					this.SendPropertyChanged("ActivityName");
					this.OnActivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlubbenOnlineLinkId", DbType="NVarChar(20)")]
		public string KlubbenOnlineLinkId
		{
			get
			{
				return this._KlubbenOnlineLinkId;
			}
			set
			{
				if ((this._KlubbenOnlineLinkId != value))
				{
					this.OnKlubbenOnlineLinkIdChanging(value);
					this.SendPropertyChanging();
					this._KlubbenOnlineLinkId = value;
					this.SendPropertyChanged("KlubbenOnlineLinkId");
					this.OnKlubbenOnlineLinkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubLink", DbType="NVarChar(300)")]
		public string ClubLink
		{
			get
			{
				return this._ClubLink;
			}
			set
			{
				if ((this._ClubLink != value))
				{
					this.OnClubLinkChanging(value);
					this.SendPropertyChanging();
					this._ClubLink = value;
					this.SendPropertyChanged("ClubLink");
					this.OnClubLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultsLink", DbType="NVarChar(300)")]
		public string ResultsLink
		{
			get
			{
				return this._ResultsLink;
			}
			set
			{
				if ((this._ResultsLink != value))
				{
					this.OnResultsLinkChanging(value);
					this.SendPropertyChanging();
					this._ResultsLink = value;
					this.SendPropertyChanged("ResultsLink");
					this.OnResultsLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Winsplit", DbType="NVarChar(300)")]
		public string Winsplit
		{
			get
			{
				return this._Winsplit;
			}
			set
			{
				if ((this._Winsplit != value))
				{
					this.OnWinsplitChanging(value);
					this.SendPropertyChanging();
					this._Winsplit = value;
					this.SendPropertyChanged("Winsplit");
					this.OnWinsplitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible", DbType="NVarChar(100)")]
		public string Responsible
		{
			get
			{
				return this._Responsible;
			}
			set
			{
				if ((this._Responsible != value))
				{
					this.OnResponsibleChanging(value);
					this.SendPropertyChanging();
					this._Responsible = value;
					this.SendPropertyChanged("Responsible");
					this.OnResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lamp", DbType="Bit")]
		public System.Nullable<bool> Lamp
		{
			get
			{
				return this._Lamp;
			}
			set
			{
				if ((this._Lamp != value))
				{
					this.OnLampChanging(value);
					this.SendPropertyChanging();
					this._Lamp = value;
					this.SendPropertyChanged("Lamp");
					this.OnLampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shoes", DbType="NVarChar(50)")]
		public string Shoes
		{
			get
			{
				return this._Shoes;
			}
			set
			{
				if ((this._Shoes != value))
				{
					this.OnShoesChanging(value);
					this.SendPropertyChanging();
					this._Shoes = value;
					this.SendPropertyChanged("Shoes");
					this.OnShoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoreInfo", DbType="NVarChar(MAX)")]
		public string MoreInfo
		{
			get
			{
				return this._MoreInfo;
			}
			set
			{
				if ((this._MoreInfo != value))
				{
					this.OnMoreInfoChanging(value);
					this.SendPropertyChanging();
					this._MoreInfo = value;
					this.SendPropertyChanged("MoreInfo");
					this.OnMoreInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_Calender_Skogshjortarna_Calender_X_TrainingGroup", Storage="_Skogshjortarna_Calender_X_TrainingGroups", ThisKey="ID", OtherKey="Skogshjortarna_Calender_FK")]
		public EntitySet<Skogshjortarna_Calender_X_TrainingGroup> Skogshjortarna_Calender_X_TrainingGroups
		{
			get
			{
				return this._Skogshjortarna_Calender_X_TrainingGroups;
			}
			set
			{
				this._Skogshjortarna_Calender_X_TrainingGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_CalenderType_Skogshjortarna_Calender", Storage="_Skogshjortarna_CalenderType", ThisKey="Skogshjortarna_CalenderType_FK", OtherKey="ID", IsForeignKey=true)]
		public Skogshjortarna_CalenderType Skogshjortarna_CalenderType
		{
			get
			{
				return this._Skogshjortarna_CalenderType.Entity;
			}
			set
			{
				Skogshjortarna_CalenderType previousValue = this._Skogshjortarna_CalenderType.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_CalenderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_CalenderType.Entity = null;
						previousValue.Skogshjortarna_Calenders.Remove(this);
					}
					this._Skogshjortarna_CalenderType.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_Calenders.Add(this);
						this._Skogshjortarna_CalenderType_FK = value.ID;
					}
					else
					{
						this._Skogshjortarna_CalenderType_FK = default(int);
					}
					this.SendPropertyChanged("Skogshjortarna_CalenderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_CompetitionType_Skogshjortarna_Calender", Storage="_Skogshjortarna_CompetitionType", ThisKey="Skogshjortarna_CompetitionType_FK", OtherKey="ID", IsForeignKey=true)]
		public Skogshjortarna_CompetitionType Skogshjortarna_CompetitionType
		{
			get
			{
				return this._Skogshjortarna_CompetitionType.Entity;
			}
			set
			{
				Skogshjortarna_CompetitionType previousValue = this._Skogshjortarna_CompetitionType.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_CompetitionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_CompetitionType.Entity = null;
						previousValue.Skogshjortarna_Calenders.Remove(this);
					}
					this._Skogshjortarna_CompetitionType.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_Calenders.Add(this);
						this._Skogshjortarna_CompetitionType_FK = value.ID;
					}
					else
					{
						this._Skogshjortarna_CompetitionType_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Skogshjortarna_CompetitionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skogshjortarna_Calender_X_TrainingGroups(Skogshjortarna_Calender_X_TrainingGroup entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_Calender = this;
		}
		
		private void detach_Skogshjortarna_Calender_X_TrainingGroups(Skogshjortarna_Calender_X_TrainingGroup entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_Calender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_Calender_X_TrainingGroups")]
	public partial class Skogshjortarna_Calender_X_TrainingGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Skogshjortarna_Calender_FK;
		
		private int _Skogshjortarna_TrainigGroups_FK;
		
		private EntityRef<Skogshjortarna_Calender> _Skogshjortarna_Calender;
		
		private EntityRef<Skogshjortarna_TrainingGroup> _Skogshjortarna_TrainingGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkogshjortarna_Calender_FKChanging(int value);
    partial void OnSkogshjortarna_Calender_FKChanged();
    partial void OnSkogshjortarna_TrainigGroups_FKChanging(int value);
    partial void OnSkogshjortarna_TrainigGroups_FKChanged();
    #endregion
		
		public Skogshjortarna_Calender_X_TrainingGroup()
		{
			this._Skogshjortarna_Calender = default(EntityRef<Skogshjortarna_Calender>);
			this._Skogshjortarna_TrainingGroup = default(EntityRef<Skogshjortarna_TrainingGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skogshjortarna_Calender_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Skogshjortarna_Calender_FK
		{
			get
			{
				return this._Skogshjortarna_Calender_FK;
			}
			set
			{
				if ((this._Skogshjortarna_Calender_FK != value))
				{
					if (this._Skogshjortarna_Calender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkogshjortarna_Calender_FKChanging(value);
					this.SendPropertyChanging();
					this._Skogshjortarna_Calender_FK = value;
					this.SendPropertyChanged("Skogshjortarna_Calender_FK");
					this.OnSkogshjortarna_Calender_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skogshjortarna_TrainigGroups_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Skogshjortarna_TrainigGroups_FK
		{
			get
			{
				return this._Skogshjortarna_TrainigGroups_FK;
			}
			set
			{
				if ((this._Skogshjortarna_TrainigGroups_FK != value))
				{
					if (this._Skogshjortarna_TrainingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkogshjortarna_TrainigGroups_FKChanging(value);
					this.SendPropertyChanging();
					this._Skogshjortarna_TrainigGroups_FK = value;
					this.SendPropertyChanged("Skogshjortarna_TrainigGroups_FK");
					this.OnSkogshjortarna_TrainigGroups_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_Calender_Skogshjortarna_Calender_X_TrainingGroup", Storage="_Skogshjortarna_Calender", ThisKey="Skogshjortarna_Calender_FK", OtherKey="ID", IsForeignKey=true)]
		public Skogshjortarna_Calender Skogshjortarna_Calender
		{
			get
			{
				return this._Skogshjortarna_Calender.Entity;
			}
			set
			{
				Skogshjortarna_Calender previousValue = this._Skogshjortarna_Calender.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_Calender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_Calender.Entity = null;
						previousValue.Skogshjortarna_Calender_X_TrainingGroups.Remove(this);
					}
					this._Skogshjortarna_Calender.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_Calender_X_TrainingGroups.Add(this);
						this._Skogshjortarna_Calender_FK = value.ID;
					}
					else
					{
						this._Skogshjortarna_Calender_FK = default(int);
					}
					this.SendPropertyChanged("Skogshjortarna_Calender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_TrainingGroup_Skogshjortarna_Calender_X_TrainingGroup", Storage="_Skogshjortarna_TrainingGroup", ThisKey="Skogshjortarna_TrainigGroups_FK", OtherKey="ID", IsForeignKey=true)]
		public Skogshjortarna_TrainingGroup Skogshjortarna_TrainingGroup
		{
			get
			{
				return this._Skogshjortarna_TrainingGroup.Entity;
			}
			set
			{
				Skogshjortarna_TrainingGroup previousValue = this._Skogshjortarna_TrainingGroup.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_TrainingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_TrainingGroup.Entity = null;
						previousValue.Skogshjortarna_Calender_X_TrainingGroups.Remove(this);
					}
					this._Skogshjortarna_TrainingGroup.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_Calender_X_TrainingGroups.Add(this);
						this._Skogshjortarna_TrainigGroups_FK = value.ID;
					}
					else
					{
						this._Skogshjortarna_TrainigGroups_FK = default(int);
					}
					this.SendPropertyChanged("Skogshjortarna_TrainingGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_CalenderGroupType")]
	public partial class Skogshjortarna_CalenderGroupType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Skogshjortarna_CalenderType> _Skogshjortarna_CalenderTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Skogshjortarna_CalenderGroupType()
		{
			this._Skogshjortarna_CalenderTypes = new EntitySet<Skogshjortarna_CalenderType>(new Action<Skogshjortarna_CalenderType>(this.attach_Skogshjortarna_CalenderTypes), new Action<Skogshjortarna_CalenderType>(this.detach_Skogshjortarna_CalenderTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_CalenderGroupType_Skogshjortarna_CalenderType", Storage="_Skogshjortarna_CalenderTypes", ThisKey="ID", OtherKey="Skogshjortarna_CalenderGroupType_FK")]
		public EntitySet<Skogshjortarna_CalenderType> Skogshjortarna_CalenderTypes
		{
			get
			{
				return this._Skogshjortarna_CalenderTypes;
			}
			set
			{
				this._Skogshjortarna_CalenderTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skogshjortarna_CalenderTypes(Skogshjortarna_CalenderType entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_CalenderGroupType = this;
		}
		
		private void detach_Skogshjortarna_CalenderTypes(Skogshjortarna_CalenderType entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_CalenderGroupType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_CalenderType")]
	public partial class Skogshjortarna_CalenderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Skogshjortarna_CalenderGroupType_FK;
		
		private string _Name;
		
		private string _ShortName;
		
		private EntitySet<Skogshjortarna_Calender> _Skogshjortarna_Calenders;
		
		private EntityRef<Skogshjortarna_CalenderGroupType> _Skogshjortarna_CalenderGroupType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSkogshjortarna_CalenderGroupType_FKChanging(System.Nullable<int> value);
    partial void OnSkogshjortarna_CalenderGroupType_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public Skogshjortarna_CalenderType()
		{
			this._Skogshjortarna_Calenders = new EntitySet<Skogshjortarna_Calender>(new Action<Skogshjortarna_Calender>(this.attach_Skogshjortarna_Calenders), new Action<Skogshjortarna_Calender>(this.detach_Skogshjortarna_Calenders));
			this._Skogshjortarna_CalenderGroupType = default(EntityRef<Skogshjortarna_CalenderGroupType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skogshjortarna_CalenderGroupType_FK", DbType="Int")]
		public System.Nullable<int> Skogshjortarna_CalenderGroupType_FK
		{
			get
			{
				return this._Skogshjortarna_CalenderGroupType_FK;
			}
			set
			{
				if ((this._Skogshjortarna_CalenderGroupType_FK != value))
				{
					if (this._Skogshjortarna_CalenderGroupType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkogshjortarna_CalenderGroupType_FKChanging(value);
					this.SendPropertyChanging();
					this._Skogshjortarna_CalenderGroupType_FK = value;
					this.SendPropertyChanged("Skogshjortarna_CalenderGroupType_FK");
					this.OnSkogshjortarna_CalenderGroupType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_CalenderType_Skogshjortarna_Calender", Storage="_Skogshjortarna_Calenders", ThisKey="ID", OtherKey="Skogshjortarna_CalenderType_FK")]
		public EntitySet<Skogshjortarna_Calender> Skogshjortarna_Calenders
		{
			get
			{
				return this._Skogshjortarna_Calenders;
			}
			set
			{
				this._Skogshjortarna_Calenders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_CalenderGroupType_Skogshjortarna_CalenderType", Storage="_Skogshjortarna_CalenderGroupType", ThisKey="Skogshjortarna_CalenderGroupType_FK", OtherKey="ID", IsForeignKey=true)]
		public Skogshjortarna_CalenderGroupType Skogshjortarna_CalenderGroupType
		{
			get
			{
				return this._Skogshjortarna_CalenderGroupType.Entity;
			}
			set
			{
				Skogshjortarna_CalenderGroupType previousValue = this._Skogshjortarna_CalenderGroupType.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_CalenderGroupType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_CalenderGroupType.Entity = null;
						previousValue.Skogshjortarna_CalenderTypes.Remove(this);
					}
					this._Skogshjortarna_CalenderGroupType.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_CalenderTypes.Add(this);
						this._Skogshjortarna_CalenderGroupType_FK = value.ID;
					}
					else
					{
						this._Skogshjortarna_CalenderGroupType_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Skogshjortarna_CalenderGroupType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skogshjortarna_Calenders(Skogshjortarna_Calender entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_CalenderType = this;
		}
		
		private void detach_Skogshjortarna_Calenders(Skogshjortarna_Calender entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_CalenderType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_CompetitionType")]
	public partial class Skogshjortarna_CompetitionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ImageUrl;
		
		private EntitySet<Skogshjortarna_Calender> _Skogshjortarna_Calenders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    #endregion
		
		public Skogshjortarna_CompetitionType()
		{
			this._Skogshjortarna_Calenders = new EntitySet<Skogshjortarna_Calender>(new Action<Skogshjortarna_Calender>(this.attach_Skogshjortarna_Calenders), new Action<Skogshjortarna_Calender>(this.detach_Skogshjortarna_Calenders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(200)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_CompetitionType_Skogshjortarna_Calender", Storage="_Skogshjortarna_Calenders", ThisKey="ID", OtherKey="Skogshjortarna_CompetitionType_FK")]
		public EntitySet<Skogshjortarna_Calender> Skogshjortarna_Calenders
		{
			get
			{
				return this._Skogshjortarna_Calenders;
			}
			set
			{
				this._Skogshjortarna_Calenders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skogshjortarna_Calenders(Skogshjortarna_Calender entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_CompetitionType = this;
		}
		
		private void detach_Skogshjortarna_Calenders(Skogshjortarna_Calender entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_CompetitionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_InternalComp")]
	public partial class Skogshjortarna_InternalComp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Info;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<System.DateTime> _LastEntryDate;
		
		private System.Nullable<System.DateTime> _OutOfDate;
		
		private System.Guid _Owner;
		
		private bool _Deleted;
		
		private EntitySet<Skogshjortarna_InternalComp_X_aspnet_User> _Skogshjortarna_InternalComp_X_aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnLastEntryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEntryDateChanged();
    partial void OnOutOfDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOutOfDateChanged();
    partial void OnOwnerChanging(System.Guid value);
    partial void OnOwnerChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Skogshjortarna_InternalComp()
		{
			this._Skogshjortarna_InternalComp_X_aspnet_Users = new EntitySet<Skogshjortarna_InternalComp_X_aspnet_User>(new Action<Skogshjortarna_InternalComp_X_aspnet_User>(this.attach_Skogshjortarna_InternalComp_X_aspnet_Users), new Action<Skogshjortarna_InternalComp_X_aspnet_User>(this.detach_Skogshjortarna_InternalComp_X_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="NVarChar(MAX)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEntryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEntryDate
		{
			get
			{
				return this._LastEntryDate;
			}
			set
			{
				if ((this._LastEntryDate != value))
				{
					this.OnLastEntryDateChanging(value);
					this.SendPropertyChanging();
					this._LastEntryDate = value;
					this.SendPropertyChanged("LastEntryDate");
					this.OnLastEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutOfDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutOfDate
		{
			get
			{
				return this._OutOfDate;
			}
			set
			{
				if ((this._OutOfDate != value))
				{
					this.OnOutOfDateChanging(value);
					this.SendPropertyChanging();
					this._OutOfDate = value;
					this.SendPropertyChanged("OutOfDate");
					this.OnOutOfDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_InternalComp_Skogshjortarna_InternalComp_X_aspnet_User", Storage="_Skogshjortarna_InternalComp_X_aspnet_Users", ThisKey="ID", OtherKey="Skogshjortarna_InternalComp_FK")]
		public EntitySet<Skogshjortarna_InternalComp_X_aspnet_User> Skogshjortarna_InternalComp_X_aspnet_Users
		{
			get
			{
				return this._Skogshjortarna_InternalComp_X_aspnet_Users;
			}
			set
			{
				this._Skogshjortarna_InternalComp_X_aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skogshjortarna_InternalComp_X_aspnet_Users(Skogshjortarna_InternalComp_X_aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_InternalComp = this;
		}
		
		private void detach_Skogshjortarna_InternalComp_X_aspnet_Users(Skogshjortarna_InternalComp_X_aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_InternalComp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_InternalComp_X_aspnet_Users")]
	public partial class Skogshjortarna_InternalComp_X_aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _aspnet_User_FK;
		
		private int _Skogshjortarna_InternalComp_FK;
		
		private string _Name;
		
		private string _Info;
		
		private string _SI;
		
		private string _Class;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Skogshjortarna_InternalComp> _Skogshjortarna_InternalComp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onaspnet_User_FKChanging(System.Guid value);
    partial void Onaspnet_User_FKChanged();
    partial void OnSkogshjortarna_InternalComp_FKChanging(int value);
    partial void OnSkogshjortarna_InternalComp_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnSIChanging(string value);
    partial void OnSIChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    #endregion
		
		public Skogshjortarna_InternalComp_X_aspnet_User()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Skogshjortarna_InternalComp = default(EntityRef<Skogshjortarna_InternalComp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aspnet_User_FK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid aspnet_User_FK
		{
			get
			{
				return this._aspnet_User_FK;
			}
			set
			{
				if ((this._aspnet_User_FK != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaspnet_User_FKChanging(value);
					this.SendPropertyChanging();
					this._aspnet_User_FK = value;
					this.SendPropertyChanged("aspnet_User_FK");
					this.Onaspnet_User_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skogshjortarna_InternalComp_FK", DbType="Int NOT NULL")]
		public int Skogshjortarna_InternalComp_FK
		{
			get
			{
				return this._Skogshjortarna_InternalComp_FK;
			}
			set
			{
				if ((this._Skogshjortarna_InternalComp_FK != value))
				{
					if (this._Skogshjortarna_InternalComp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkogshjortarna_InternalComp_FKChanging(value);
					this.SendPropertyChanging();
					this._Skogshjortarna_InternalComp_FK = value;
					this.SendPropertyChanged("Skogshjortarna_InternalComp_FK");
					this.OnSkogshjortarna_InternalComp_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="NVarChar(MAX)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI", DbType="NVarChar(50)")]
		public string SI
		{
			get
			{
				return this._SI;
			}
			set
			{
				if ((this._SI != value))
				{
					this.OnSIChanging(value);
					this.SendPropertyChanging();
					this._SI = value;
					this.SendPropertyChanged("SI");
					this.OnSIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(100)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Skogshjortarna_InternalComp_X_aspnet_User", Storage="_aspnet_User", ThisKey="aspnet_User_FK", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Skogshjortarna_InternalComp_X_aspnet_Users.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_InternalComp_X_aspnet_Users.Add(this);
						this._aspnet_User_FK = value.UserId;
					}
					else
					{
						this._aspnet_User_FK = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_InternalComp_Skogshjortarna_InternalComp_X_aspnet_User", Storage="_Skogshjortarna_InternalComp", ThisKey="Skogshjortarna_InternalComp_FK", OtherKey="ID", IsForeignKey=true)]
		public Skogshjortarna_InternalComp Skogshjortarna_InternalComp
		{
			get
			{
				return this._Skogshjortarna_InternalComp.Entity;
			}
			set
			{
				Skogshjortarna_InternalComp previousValue = this._Skogshjortarna_InternalComp.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_InternalComp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_InternalComp.Entity = null;
						previousValue.Skogshjortarna_InternalComp_X_aspnet_Users.Remove(this);
					}
					this._Skogshjortarna_InternalComp.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_InternalComp_X_aspnet_Users.Add(this);
						this._Skogshjortarna_InternalComp_FK = value.ID;
					}
					else
					{
						this._Skogshjortarna_InternalComp_FK = default(int);
					}
					this.SendPropertyChanged("Skogshjortarna_InternalComp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_NewsOwner")]
	public partial class Skogshjortarna_NewsOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsID;
		
		private System.Guid _OwnerUser;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnOwnerUserChanging(System.Guid value);
    partial void OnOwnerUserChanged();
    #endregion
		
		public Skogshjortarna_NewsOwner()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerUser", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerUser
		{
			get
			{
				return this._OwnerUser;
			}
			set
			{
				if ((this._OwnerUser != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerUserChanging(value);
					this.SendPropertyChanging();
					this._OwnerUser = value;
					this.SendPropertyChanged("OwnerUser");
					this.OnOwnerUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Skogshjortarna_NewsOwner", Storage="_aspnet_User", ThisKey="OwnerUser", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Skogshjortarna_NewsOwners.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_NewsOwners.Add(this);
						this._OwnerUser = value.UserId;
					}
					else
					{
						this._OwnerUser = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Skogshjortarna_NewsOwner", Storage="_Object", ThisKey="NewsID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Skogshjortarna_NewsOwner = null;
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_NewsOwner = this;
						this._NewsID = value.ObjectID;
					}
					else
					{
						this._NewsID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_SnowStatus")]
	public partial class Skogshjortarna_SnowStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private bool _Activated;
		
		private EntitySet<Skogshjortarna_SnowStatusItem> _Skogshjortarna_SnowStatusItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActivatedChanging(bool value);
    partial void OnActivatedChanged();
    #endregion
		
		public Skogshjortarna_SnowStatus()
		{
			this._Skogshjortarna_SnowStatusItems = new EntitySet<Skogshjortarna_SnowStatusItem>(new Action<Skogshjortarna_SnowStatusItem>(this.attach_Skogshjortarna_SnowStatusItems), new Action<Skogshjortarna_SnowStatusItem>(this.detach_Skogshjortarna_SnowStatusItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activated", DbType="Bit NOT NULL")]
		public bool Activated
		{
			get
			{
				return this._Activated;
			}
			set
			{
				if ((this._Activated != value))
				{
					this.OnActivatedChanging(value);
					this.SendPropertyChanging();
					this._Activated = value;
					this.SendPropertyChanged("Activated");
					this.OnActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_SnowStatus_Skogshjortarna_SnowStatusItem", Storage="_Skogshjortarna_SnowStatusItems", ThisKey="ID", OtherKey="Skogshjortarna_SnowStatus_FK")]
		public EntitySet<Skogshjortarna_SnowStatusItem> Skogshjortarna_SnowStatusItems
		{
			get
			{
				return this._Skogshjortarna_SnowStatusItems;
			}
			set
			{
				this._Skogshjortarna_SnowStatusItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skogshjortarna_SnowStatusItems(Skogshjortarna_SnowStatusItem entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_SnowStatus = this;
		}
		
		private void detach_Skogshjortarna_SnowStatusItems(Skogshjortarna_SnowStatusItem entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_SnowStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_SnowStatusItems")]
	public partial class Skogshjortarna_SnowStatusItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Skogshjortarna_SnowStatus_FK;
		
		private int _Sort;
		
		private string _Name;
		
		private string _Description;
		
		private string _ImageUrl;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private bool _View;
		
		private EntityRef<Skogshjortarna_SnowStatus> _Skogshjortarna_SnowStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSkogshjortarna_SnowStatus_FKChanging(int value);
    partial void OnSkogshjortarna_SnowStatus_FKChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnViewChanging(bool value);
    partial void OnViewChanged();
    #endregion
		
		public Skogshjortarna_SnowStatusItem()
		{
			this._Skogshjortarna_SnowStatus = default(EntityRef<Skogshjortarna_SnowStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skogshjortarna_SnowStatus_FK", DbType="Int NOT NULL")]
		public int Skogshjortarna_SnowStatus_FK
		{
			get
			{
				return this._Skogshjortarna_SnowStatus_FK;
			}
			set
			{
				if ((this._Skogshjortarna_SnowStatus_FK != value))
				{
					if (this._Skogshjortarna_SnowStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkogshjortarna_SnowStatus_FKChanging(value);
					this.SendPropertyChanging();
					this._Skogshjortarna_SnowStatus_FK = value;
					this.SendPropertyChanged("Skogshjortarna_SnowStatus_FK");
					this.OnSkogshjortarna_SnowStatus_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int NOT NULL")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(300)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[View]", Storage="_View", DbType="Bit NOT NULL")]
		public bool View
		{
			get
			{
				return this._View;
			}
			set
			{
				if ((this._View != value))
				{
					this.OnViewChanging(value);
					this.SendPropertyChanging();
					this._View = value;
					this.SendPropertyChanged("View");
					this.OnViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_SnowStatus_Skogshjortarna_SnowStatusItem", Storage="_Skogshjortarna_SnowStatus", ThisKey="Skogshjortarna_SnowStatus_FK", OtherKey="ID", IsForeignKey=true)]
		public Skogshjortarna_SnowStatus Skogshjortarna_SnowStatus
		{
			get
			{
				return this._Skogshjortarna_SnowStatus.Entity;
			}
			set
			{
				Skogshjortarna_SnowStatus previousValue = this._Skogshjortarna_SnowStatus.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_SnowStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_SnowStatus.Entity = null;
						previousValue.Skogshjortarna_SnowStatusItems.Remove(this);
					}
					this._Skogshjortarna_SnowStatus.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_SnowStatusItems.Add(this);
						this._Skogshjortarna_SnowStatus_FK = value.ID;
					}
					else
					{
						this._Skogshjortarna_SnowStatus_FK = default(int);
					}
					this.SendPropertyChanged("Skogshjortarna_SnowStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.skogshjortarna_temp_anv")]
	public partial class skogshjortarna_temp_anv
	{
		
		private string _user;
		
		private string _namn;
		
		private string _roller;
		
		private string _nyroll;
		
		private string _pw;
		
		private string _epost;
		
		private string _visa;
		
		public skogshjortarna_temp_anv()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[user]", Storage="_user", DbType="NVarChar(200)")]
		public string user
		{
			get
			{
				return this._user;
			}
			set
			{
				if ((this._user != value))
				{
					this._user = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namn", DbType="NVarChar(200)")]
		public string namn
		{
			get
			{
				return this._namn;
			}
			set
			{
				if ((this._namn != value))
				{
					this._namn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roller", DbType="NVarChar(200)")]
		public string roller
		{
			get
			{
				return this._roller;
			}
			set
			{
				if ((this._roller != value))
				{
					this._roller = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nyroll", DbType="NVarChar(200)")]
		public string nyroll
		{
			get
			{
				return this._nyroll;
			}
			set
			{
				if ((this._nyroll != value))
				{
					this._nyroll = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pw", DbType="NVarChar(200)")]
		public string pw
		{
			get
			{
				return this._pw;
			}
			set
			{
				if ((this._pw != value))
				{
					this._pw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epost", DbType="NVarChar(200)")]
		public string epost
		{
			get
			{
				return this._epost;
			}
			set
			{
				if ((this._epost != value))
				{
					this._epost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visa", DbType="NVarChar(200)")]
		public string visa
		{
			get
			{
				return this._visa;
			}
			set
			{
				if ((this._visa != value))
				{
					this._visa = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_TipsPromenad")]
	public partial class Skogshjortarna_TipsPromenad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Date;
		
		private string _Vuxen;
		
		private string _Barn;
		
		private string _Vinnare;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnVuxenChanging(string value);
    partial void OnVuxenChanged();
    partial void OnBarnChanging(string value);
    partial void OnBarnChanged();
    partial void OnVinnareChanging(string value);
    partial void OnVinnareChanged();
    #endregion
		
		public Skogshjortarna_TipsPromenad()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vuxen", DbType="NVarChar(MAX)")]
		public string Vuxen
		{
			get
			{
				return this._Vuxen;
			}
			set
			{
				if ((this._Vuxen != value))
				{
					this.OnVuxenChanging(value);
					this.SendPropertyChanging();
					this._Vuxen = value;
					this.SendPropertyChanged("Vuxen");
					this.OnVuxenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barn", DbType="NVarChar(MAX)")]
		public string Barn
		{
			get
			{
				return this._Barn;
			}
			set
			{
				if ((this._Barn != value))
				{
					this.OnBarnChanging(value);
					this.SendPropertyChanging();
					this._Barn = value;
					this.SendPropertyChanged("Barn");
					this.OnBarnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vinnare", DbType="NVarChar(MAX)")]
		public string Vinnare
		{
			get
			{
				return this._Vinnare;
			}
			set
			{
				if ((this._Vinnare != value))
				{
					this.OnVinnareChanging(value);
					this.SendPropertyChanging();
					this._Vinnare = value;
					this.SendPropertyChanged("Vinnare");
					this.OnVinnareChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_TrainingDiary")]
	public partial class Skogshjortarna_TrainingDiary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _aspnet_User_FK;
		
		private bool _isPublic;
		
		private string _Planing;
		
		private EntitySet<Skogshjortarna_TrainingDiary_Training> _Skogshjortarna_TrainingDiary_Trainings;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onaspnet_User_FKChanging(System.Guid value);
    partial void Onaspnet_User_FKChanged();
    partial void OnisPublicChanging(bool value);
    partial void OnisPublicChanged();
    partial void OnPlaningChanging(string value);
    partial void OnPlaningChanged();
    #endregion
		
		public Skogshjortarna_TrainingDiary()
		{
			this._Skogshjortarna_TrainingDiary_Trainings = new EntitySet<Skogshjortarna_TrainingDiary_Training>(new Action<Skogshjortarna_TrainingDiary_Training>(this.attach_Skogshjortarna_TrainingDiary_Trainings), new Action<Skogshjortarna_TrainingDiary_Training>(this.detach_Skogshjortarna_TrainingDiary_Trainings));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aspnet_User_FK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid aspnet_User_FK
		{
			get
			{
				return this._aspnet_User_FK;
			}
			set
			{
				if ((this._aspnet_User_FK != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaspnet_User_FKChanging(value);
					this.SendPropertyChanging();
					this._aspnet_User_FK = value;
					this.SendPropertyChanged("aspnet_User_FK");
					this.Onaspnet_User_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPublic", DbType="Bit NOT NULL")]
		public bool isPublic
		{
			get
			{
				return this._isPublic;
			}
			set
			{
				if ((this._isPublic != value))
				{
					this.OnisPublicChanging(value);
					this.SendPropertyChanging();
					this._isPublic = value;
					this.SendPropertyChanged("isPublic");
					this.OnisPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Planing", DbType="NVarChar(MAX)")]
		public string Planing
		{
			get
			{
				return this._Planing;
			}
			set
			{
				if ((this._Planing != value))
				{
					this.OnPlaningChanging(value);
					this.SendPropertyChanging();
					this._Planing = value;
					this.SendPropertyChanged("Planing");
					this.OnPlaningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_TrainingDiary_Skogshjortarna_TrainingDiary_Training", Storage="_Skogshjortarna_TrainingDiary_Trainings", ThisKey="ID", OtherKey="Skogshjortarna_TrainingDiary_FK")]
		public EntitySet<Skogshjortarna_TrainingDiary_Training> Skogshjortarna_TrainingDiary_Trainings
		{
			get
			{
				return this._Skogshjortarna_TrainingDiary_Trainings;
			}
			set
			{
				this._Skogshjortarna_TrainingDiary_Trainings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Skogshjortarna_TrainingDiary", Storage="_aspnet_User", ThisKey="aspnet_User_FK", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Skogshjortarna_TrainingDiaries.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_TrainingDiaries.Add(this);
						this._aspnet_User_FK = value.UserId;
					}
					else
					{
						this._aspnet_User_FK = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skogshjortarna_TrainingDiary_Trainings(Skogshjortarna_TrainingDiary_Training entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_TrainingDiary = this;
		}
		
		private void detach_Skogshjortarna_TrainingDiary_Trainings(Skogshjortarna_TrainingDiary_Training entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_TrainingDiary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_TrainingDiary_Training")]
	public partial class Skogshjortarna_TrainingDiary_Training : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Skogshjortarna_TrainingDiary_FK;
		
		private int _Skogshjortarna_TrainingDiary_TrainingType_FK;
		
		private System.DateTime _TrainingDay;
		
		private System.Nullable<int> _PaceHigh;
		
		private System.Nullable<int> _PaceMedium;
		
		private System.Nullable<int> _PaceLow;
		
		private System.Nullable<int> _Strength;
		
		private string _Comment;
		
		private bool _SickDay;
		
		private bool _InjuryDay;
		
		private EntityRef<Skogshjortarna_TrainingDiary> _Skogshjortarna_TrainingDiary;
		
		private EntityRef<Skogshjortarna_TrainingDiary_TrainingType> _Skogshjortarna_TrainingDiary_TrainingType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSkogshjortarna_TrainingDiary_FKChanging(int value);
    partial void OnSkogshjortarna_TrainingDiary_FKChanged();
    partial void OnSkogshjortarna_TrainingDiary_TrainingType_FKChanging(int value);
    partial void OnSkogshjortarna_TrainingDiary_TrainingType_FKChanged();
    partial void OnTrainingDayChanging(System.DateTime value);
    partial void OnTrainingDayChanged();
    partial void OnPaceHighChanging(System.Nullable<int> value);
    partial void OnPaceHighChanged();
    partial void OnPaceMediumChanging(System.Nullable<int> value);
    partial void OnPaceMediumChanged();
    partial void OnPaceLowChanging(System.Nullable<int> value);
    partial void OnPaceLowChanged();
    partial void OnStrengthChanging(System.Nullable<int> value);
    partial void OnStrengthChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnSickDayChanging(bool value);
    partial void OnSickDayChanged();
    partial void OnInjuryDayChanging(bool value);
    partial void OnInjuryDayChanged();
    #endregion
		
		public Skogshjortarna_TrainingDiary_Training()
		{
			this._Skogshjortarna_TrainingDiary = default(EntityRef<Skogshjortarna_TrainingDiary>);
			this._Skogshjortarna_TrainingDiary_TrainingType = default(EntityRef<Skogshjortarna_TrainingDiary_TrainingType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skogshjortarna_TrainingDiary_FK", DbType="Int NOT NULL")]
		public int Skogshjortarna_TrainingDiary_FK
		{
			get
			{
				return this._Skogshjortarna_TrainingDiary_FK;
			}
			set
			{
				if ((this._Skogshjortarna_TrainingDiary_FK != value))
				{
					if (this._Skogshjortarna_TrainingDiary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkogshjortarna_TrainingDiary_FKChanging(value);
					this.SendPropertyChanging();
					this._Skogshjortarna_TrainingDiary_FK = value;
					this.SendPropertyChanged("Skogshjortarna_TrainingDiary_FK");
					this.OnSkogshjortarna_TrainingDiary_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skogshjortarna_TrainingDiary_TrainingType_FK", DbType="Int NOT NULL")]
		public int Skogshjortarna_TrainingDiary_TrainingType_FK
		{
			get
			{
				return this._Skogshjortarna_TrainingDiary_TrainingType_FK;
			}
			set
			{
				if ((this._Skogshjortarna_TrainingDiary_TrainingType_FK != value))
				{
					if (this._Skogshjortarna_TrainingDiary_TrainingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkogshjortarna_TrainingDiary_TrainingType_FKChanging(value);
					this.SendPropertyChanging();
					this._Skogshjortarna_TrainingDiary_TrainingType_FK = value;
					this.SendPropertyChanged("Skogshjortarna_TrainingDiary_TrainingType_FK");
					this.OnSkogshjortarna_TrainingDiary_TrainingType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingDay", DbType="DateTime NOT NULL")]
		public System.DateTime TrainingDay
		{
			get
			{
				return this._TrainingDay;
			}
			set
			{
				if ((this._TrainingDay != value))
				{
					this.OnTrainingDayChanging(value);
					this.SendPropertyChanging();
					this._TrainingDay = value;
					this.SendPropertyChanged("TrainingDay");
					this.OnTrainingDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaceHigh", DbType="Int")]
		public System.Nullable<int> PaceHigh
		{
			get
			{
				return this._PaceHigh;
			}
			set
			{
				if ((this._PaceHigh != value))
				{
					this.OnPaceHighChanging(value);
					this.SendPropertyChanging();
					this._PaceHigh = value;
					this.SendPropertyChanged("PaceHigh");
					this.OnPaceHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaceMedium", DbType="Int")]
		public System.Nullable<int> PaceMedium
		{
			get
			{
				return this._PaceMedium;
			}
			set
			{
				if ((this._PaceMedium != value))
				{
					this.OnPaceMediumChanging(value);
					this.SendPropertyChanging();
					this._PaceMedium = value;
					this.SendPropertyChanged("PaceMedium");
					this.OnPaceMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaceLow", DbType="Int")]
		public System.Nullable<int> PaceLow
		{
			get
			{
				return this._PaceLow;
			}
			set
			{
				if ((this._PaceLow != value))
				{
					this.OnPaceLowChanging(value);
					this.SendPropertyChanging();
					this._PaceLow = value;
					this.SendPropertyChanged("PaceLow");
					this.OnPaceLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="Int")]
		public System.Nullable<int> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SickDay", DbType="Bit NOT NULL")]
		public bool SickDay
		{
			get
			{
				return this._SickDay;
			}
			set
			{
				if ((this._SickDay != value))
				{
					this.OnSickDayChanging(value);
					this.SendPropertyChanging();
					this._SickDay = value;
					this.SendPropertyChanged("SickDay");
					this.OnSickDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjuryDay", DbType="Bit NOT NULL")]
		public bool InjuryDay
		{
			get
			{
				return this._InjuryDay;
			}
			set
			{
				if ((this._InjuryDay != value))
				{
					this.OnInjuryDayChanging(value);
					this.SendPropertyChanging();
					this._InjuryDay = value;
					this.SendPropertyChanged("InjuryDay");
					this.OnInjuryDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_TrainingDiary_Skogshjortarna_TrainingDiary_Training", Storage="_Skogshjortarna_TrainingDiary", ThisKey="Skogshjortarna_TrainingDiary_FK", OtherKey="ID", IsForeignKey=true)]
		public Skogshjortarna_TrainingDiary Skogshjortarna_TrainingDiary
		{
			get
			{
				return this._Skogshjortarna_TrainingDiary.Entity;
			}
			set
			{
				Skogshjortarna_TrainingDiary previousValue = this._Skogshjortarna_TrainingDiary.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_TrainingDiary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_TrainingDiary.Entity = null;
						previousValue.Skogshjortarna_TrainingDiary_Trainings.Remove(this);
					}
					this._Skogshjortarna_TrainingDiary.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_TrainingDiary_Trainings.Add(this);
						this._Skogshjortarna_TrainingDiary_FK = value.ID;
					}
					else
					{
						this._Skogshjortarna_TrainingDiary_FK = default(int);
					}
					this.SendPropertyChanged("Skogshjortarna_TrainingDiary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_TrainingDiary_TrainingType_Skogshjortarna_TrainingDiary_Training", Storage="_Skogshjortarna_TrainingDiary_TrainingType", ThisKey="Skogshjortarna_TrainingDiary_TrainingType_FK", OtherKey="ID", IsForeignKey=true)]
		public Skogshjortarna_TrainingDiary_TrainingType Skogshjortarna_TrainingDiary_TrainingType
		{
			get
			{
				return this._Skogshjortarna_TrainingDiary_TrainingType.Entity;
			}
			set
			{
				Skogshjortarna_TrainingDiary_TrainingType previousValue = this._Skogshjortarna_TrainingDiary_TrainingType.Entity;
				if (((previousValue != value) 
							|| (this._Skogshjortarna_TrainingDiary_TrainingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Skogshjortarna_TrainingDiary_TrainingType.Entity = null;
						previousValue.Skogshjortarna_TrainingDiary_Trainings.Remove(this);
					}
					this._Skogshjortarna_TrainingDiary_TrainingType.Entity = value;
					if ((value != null))
					{
						value.Skogshjortarna_TrainingDiary_Trainings.Add(this);
						this._Skogshjortarna_TrainingDiary_TrainingType_FK = value.ID;
					}
					else
					{
						this._Skogshjortarna_TrainingDiary_TrainingType_FK = default(int);
					}
					this.SendPropertyChanged("Skogshjortarna_TrainingDiary_TrainingType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_TrainingDiary_TrainingTypes")]
	public partial class Skogshjortarna_TrainingDiary_TrainingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Skogshjortarna_TrainingDiary_Training> _Skogshjortarna_TrainingDiary_Trainings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Skogshjortarna_TrainingDiary_TrainingType()
		{
			this._Skogshjortarna_TrainingDiary_Trainings = new EntitySet<Skogshjortarna_TrainingDiary_Training>(new Action<Skogshjortarna_TrainingDiary_Training>(this.attach_Skogshjortarna_TrainingDiary_Trainings), new Action<Skogshjortarna_TrainingDiary_Training>(this.detach_Skogshjortarna_TrainingDiary_Trainings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_TrainingDiary_TrainingType_Skogshjortarna_TrainingDiary_Training", Storage="_Skogshjortarna_TrainingDiary_Trainings", ThisKey="ID", OtherKey="Skogshjortarna_TrainingDiary_TrainingType_FK")]
		public EntitySet<Skogshjortarna_TrainingDiary_Training> Skogshjortarna_TrainingDiary_Trainings
		{
			get
			{
				return this._Skogshjortarna_TrainingDiary_Trainings;
			}
			set
			{
				this._Skogshjortarna_TrainingDiary_Trainings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skogshjortarna_TrainingDiary_Trainings(Skogshjortarna_TrainingDiary_Training entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_TrainingDiary_TrainingType = this;
		}
		
		private void detach_Skogshjortarna_TrainingDiary_Trainings(Skogshjortarna_TrainingDiary_Training entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_TrainingDiary_TrainingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skogshjortarna_TrainingGroups")]
	public partial class Skogshjortarna_TrainingGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Skogshjortarna_Calender_X_TrainingGroup> _Skogshjortarna_Calender_X_TrainingGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Skogshjortarna_TrainingGroup()
		{
			this._Skogshjortarna_Calender_X_TrainingGroups = new EntitySet<Skogshjortarna_Calender_X_TrainingGroup>(new Action<Skogshjortarna_Calender_X_TrainingGroup>(this.attach_Skogshjortarna_Calender_X_TrainingGroups), new Action<Skogshjortarna_Calender_X_TrainingGroup>(this.detach_Skogshjortarna_Calender_X_TrainingGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Skogshjortarna_TrainingGroup_Skogshjortarna_Calender_X_TrainingGroup", Storage="_Skogshjortarna_Calender_X_TrainingGroups", ThisKey="ID", OtherKey="Skogshjortarna_TrainigGroups_FK")]
		public EntitySet<Skogshjortarna_Calender_X_TrainingGroup> Skogshjortarna_Calender_X_TrainingGroups
		{
			get
			{
				return this._Skogshjortarna_Calender_X_TrainingGroups;
			}
			set
			{
				this._Skogshjortarna_Calender_X_TrainingGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Skogshjortarna_Calender_X_TrainingGroups(Skogshjortarna_Calender_X_TrainingGroup entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_TrainingGroup = this;
		}
		
		private void detach_Skogshjortarna_Calender_X_TrainingGroups(Skogshjortarna_Calender_X_TrainingGroup entity)
		{
			this.SendPropertyChanging();
			entity.Skogshjortarna_TrainingGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMS_Customers")]
	public partial class SMS_Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Customer;
		
		private string _UserName;
		
		private string _PassWord;
		
		private double _debitPerSmsPrioLow;
		
		private double _debitPerSmsPrioMedium;
		
		private double _debitPerSmsPrioHigh;
		
		private int _debitPerMonth;
		
		private int _maxSmsPerDay;
		
		private EntitySet<SMS_SendHistory> _SMS_SendHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OndebitPerSmsPrioLowChanging(double value);
    partial void OndebitPerSmsPrioLowChanged();
    partial void OndebitPerSmsPrioMediumChanging(double value);
    partial void OndebitPerSmsPrioMediumChanged();
    partial void OndebitPerSmsPrioHighChanging(double value);
    partial void OndebitPerSmsPrioHighChanged();
    partial void OndebitPerMonthChanging(int value);
    partial void OndebitPerMonthChanged();
    partial void OnmaxSmsPerDayChanging(int value);
    partial void OnmaxSmsPerDayChanged();
    #endregion
		
		public SMS_Customer()
		{
			this._SMS_SendHistories = new EntitySet<SMS_SendHistory>(new Action<SMS_SendHistory>(this.attach_SMS_SendHistories), new Action<SMS_SendHistory>(this.detach_SMS_SendHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debitPerSmsPrioLow", DbType="Float NOT NULL")]
		public double debitPerSmsPrioLow
		{
			get
			{
				return this._debitPerSmsPrioLow;
			}
			set
			{
				if ((this._debitPerSmsPrioLow != value))
				{
					this.OndebitPerSmsPrioLowChanging(value);
					this.SendPropertyChanging();
					this._debitPerSmsPrioLow = value;
					this.SendPropertyChanged("debitPerSmsPrioLow");
					this.OndebitPerSmsPrioLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debitPerSmsPrioMedium", DbType="Float NOT NULL")]
		public double debitPerSmsPrioMedium
		{
			get
			{
				return this._debitPerSmsPrioMedium;
			}
			set
			{
				if ((this._debitPerSmsPrioMedium != value))
				{
					this.OndebitPerSmsPrioMediumChanging(value);
					this.SendPropertyChanging();
					this._debitPerSmsPrioMedium = value;
					this.SendPropertyChanged("debitPerSmsPrioMedium");
					this.OndebitPerSmsPrioMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debitPerSmsPrioHigh", DbType="Float NOT NULL")]
		public double debitPerSmsPrioHigh
		{
			get
			{
				return this._debitPerSmsPrioHigh;
			}
			set
			{
				if ((this._debitPerSmsPrioHigh != value))
				{
					this.OndebitPerSmsPrioHighChanging(value);
					this.SendPropertyChanging();
					this._debitPerSmsPrioHigh = value;
					this.SendPropertyChanged("debitPerSmsPrioHigh");
					this.OndebitPerSmsPrioHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debitPerMonth", DbType="Int NOT NULL")]
		public int debitPerMonth
		{
			get
			{
				return this._debitPerMonth;
			}
			set
			{
				if ((this._debitPerMonth != value))
				{
					this.OndebitPerMonthChanging(value);
					this.SendPropertyChanging();
					this._debitPerMonth = value;
					this.SendPropertyChanged("debitPerMonth");
					this.OndebitPerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxSmsPerDay", DbType="Int NOT NULL")]
		public int maxSmsPerDay
		{
			get
			{
				return this._maxSmsPerDay;
			}
			set
			{
				if ((this._maxSmsPerDay != value))
				{
					this.OnmaxSmsPerDayChanging(value);
					this.SendPropertyChanging();
					this._maxSmsPerDay = value;
					this.SendPropertyChanged("maxSmsPerDay");
					this.OnmaxSmsPerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMS_Customer_SMS_SendHistory", Storage="_SMS_SendHistories", ThisKey="ID", OtherKey="SMS_Customers_FK")]
		public EntitySet<SMS_SendHistory> SMS_SendHistories
		{
			get
			{
				return this._SMS_SendHistories;
			}
			set
			{
				this._SMS_SendHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SMS_SendHistories(SMS_SendHistory entity)
		{
			this.SendPropertyChanging();
			entity.SMS_Customer = this;
		}
		
		private void detach_SMS_SendHistories(SMS_SendHistory entity)
		{
			this.SendPropertyChanging();
			entity.SMS_Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMS_ErrorLog")]
	public partial class SMS_ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _When;
		
		private string _Message;
		
		private string _StackTrace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWhenChanging(System.DateTime value);
    partial void OnWhenChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    #endregion
		
		public SMS_ErrorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[When]", Storage="_When", DbType="DateTime NOT NULL")]
		public System.DateTime When
		{
			get
			{
				return this._When;
			}
			set
			{
				if ((this._When != value))
				{
					this.OnWhenChanging(value);
					this.SendPropertyChanging();
					this._When = value;
					this.SendPropertyChanged("When");
					this.OnWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackTrace", DbType="NVarChar(MAX)")]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMS_Recipients")]
	public partial class SMS_Recipient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SMS_SendHistory_FK;
		
		private string _Recipient;
		
		private string _SmsGatewayUniqueId;
		
		private EntityRef<SMS_SendHistory> _SMS_SendHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSMS_SendHistory_FKChanging(int value);
    partial void OnSMS_SendHistory_FKChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnSmsGatewayUniqueIdChanging(string value);
    partial void OnSmsGatewayUniqueIdChanged();
    #endregion
		
		public SMS_Recipient()
		{
			this._SMS_SendHistory = default(EntityRef<SMS_SendHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS_SendHistory_FK", DbType="Int NOT NULL")]
		public int SMS_SendHistory_FK
		{
			get
			{
				return this._SMS_SendHistory_FK;
			}
			set
			{
				if ((this._SMS_SendHistory_FK != value))
				{
					if (this._SMS_SendHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSMS_SendHistory_FKChanging(value);
					this.SendPropertyChanging();
					this._SMS_SendHistory_FK = value;
					this.SendPropertyChanged("SMS_SendHistory_FK");
					this.OnSMS_SendHistory_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsGatewayUniqueId", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SmsGatewayUniqueId
		{
			get
			{
				return this._SmsGatewayUniqueId;
			}
			set
			{
				if ((this._SmsGatewayUniqueId != value))
				{
					this.OnSmsGatewayUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._SmsGatewayUniqueId = value;
					this.SendPropertyChanged("SmsGatewayUniqueId");
					this.OnSmsGatewayUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMS_SendHistory_SMS_Recipient", Storage="_SMS_SendHistory", ThisKey="SMS_SendHistory_FK", OtherKey="ID", IsForeignKey=true)]
		public SMS_SendHistory SMS_SendHistory
		{
			get
			{
				return this._SMS_SendHistory.Entity;
			}
			set
			{
				SMS_SendHistory previousValue = this._SMS_SendHistory.Entity;
				if (((previousValue != value) 
							|| (this._SMS_SendHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SMS_SendHistory.Entity = null;
						previousValue.SMS_Recipients.Remove(this);
					}
					this._SMS_SendHistory.Entity = value;
					if ((value != null))
					{
						value.SMS_Recipients.Add(this);
						this._SMS_SendHistory_FK = value.ID;
					}
					else
					{
						this._SMS_SendHistory_FK = default(int);
					}
					this.SendPropertyChanged("SMS_SendHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMS_SendHistory")]
	public partial class SMS_SendHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SMS_Customers_FK;
		
		private System.DateTime _When;
		
		private System.DateTime _SendDate;
		
		private string _From;
		
		private string _Message;
		
		private System.Nullable<int> _Priority;
		
		private int _MessageSize;
		
		private EntitySet<SMS_Recipient> _SMS_Recipients;
		
		private EntityRef<SMS_Customer> _SMS_Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSMS_Customers_FKChanging(int value);
    partial void OnSMS_Customers_FKChanged();
    partial void OnWhenChanging(System.DateTime value);
    partial void OnWhenChanged();
    partial void OnSendDateChanging(System.DateTime value);
    partial void OnSendDateChanged();
    partial void OnFromChanging(string value);
    partial void OnFromChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnMessageSizeChanging(int value);
    partial void OnMessageSizeChanged();
    #endregion
		
		public SMS_SendHistory()
		{
			this._SMS_Recipients = new EntitySet<SMS_Recipient>(new Action<SMS_Recipient>(this.attach_SMS_Recipients), new Action<SMS_Recipient>(this.detach_SMS_Recipients));
			this._SMS_Customer = default(EntityRef<SMS_Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMS_Customers_FK", DbType="Int NOT NULL")]
		public int SMS_Customers_FK
		{
			get
			{
				return this._SMS_Customers_FK;
			}
			set
			{
				if ((this._SMS_Customers_FK != value))
				{
					if (this._SMS_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSMS_Customers_FKChanging(value);
					this.SendPropertyChanging();
					this._SMS_Customers_FK = value;
					this.SendPropertyChanged("SMS_Customers_FK");
					this.OnSMS_Customers_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[When]", Storage="_When", DbType="DateTime NOT NULL")]
		public System.DateTime When
		{
			get
			{
				return this._When;
			}
			set
			{
				if ((this._When != value))
				{
					this.OnWhenChanging(value);
					this.SendPropertyChanging();
					this._When = value;
					this.SendPropertyChanged("When");
					this.OnWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime NOT NULL")]
		public System.DateTime SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[From]", Storage="_From", DbType="NVarChar(MAX)")]
		public string From
		{
			get
			{
				return this._From;
			}
			set
			{
				if ((this._From != value))
				{
					this.OnFromChanging(value);
					this.SendPropertyChanging();
					this._From = value;
					this.SendPropertyChanged("From");
					this.OnFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageSize", DbType="Int NOT NULL")]
		public int MessageSize
		{
			get
			{
				return this._MessageSize;
			}
			set
			{
				if ((this._MessageSize != value))
				{
					this.OnMessageSizeChanging(value);
					this.SendPropertyChanging();
					this._MessageSize = value;
					this.SendPropertyChanged("MessageSize");
					this.OnMessageSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMS_SendHistory_SMS_Recipient", Storage="_SMS_Recipients", ThisKey="ID", OtherKey="SMS_SendHistory_FK")]
		public EntitySet<SMS_Recipient> SMS_Recipients
		{
			get
			{
				return this._SMS_Recipients;
			}
			set
			{
				this._SMS_Recipients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMS_Customer_SMS_SendHistory", Storage="_SMS_Customer", ThisKey="SMS_Customers_FK", OtherKey="ID", IsForeignKey=true)]
		public SMS_Customer SMS_Customer
		{
			get
			{
				return this._SMS_Customer.Entity;
			}
			set
			{
				SMS_Customer previousValue = this._SMS_Customer.Entity;
				if (((previousValue != value) 
							|| (this._SMS_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SMS_Customer.Entity = null;
						previousValue.SMS_SendHistories.Remove(this);
					}
					this._SMS_Customer.Entity = value;
					if ((value != null))
					{
						value.SMS_SendHistories.Add(this);
						this._SMS_Customers_FK = value.ID;
					}
					else
					{
						this._SMS_Customers_FK = default(int);
					}
					this.SendPropertyChanged("SMS_Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SMS_Recipients(SMS_Recipient entity)
		{
			this.SendPropertyChanging();
			entity.SMS_SendHistory = this;
		}
		
		private void detach_SMS_Recipients(SMS_Recipient entity)
		{
			this.SendPropertyChanging();
			entity.SMS_SendHistory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stavdal_Img_Rotator")]
	public partial class Stavdal_Img_Rotator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID;
		
		private string _Img;
		
		private System.Nullable<int> _Sort;
		
		private bool _Visible;
		
		private bool _Deleted;
		
		private string _Href;
		
		private string _Target;
		
		private string _Border;
		
		private System.Nullable<int> _RotatorID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnHrefChanging(string value);
    partial void OnHrefChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnBorderChanging(string value);
    partial void OnBorderChanged();
    partial void OnRotatorIDChanging(System.Nullable<int> value);
    partial void OnRotatorIDChanged();
    #endregion
		
		public Stavdal_Img_Rotator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="NVarChar(255)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Href", DbType="NVarChar(300)")]
		public string Href
		{
			get
			{
				return this._Href;
			}
			set
			{
				if ((this._Href != value))
				{
					this.OnHrefChanging(value);
					this.SendPropertyChanging();
					this._Href = value;
					this.SendPropertyChanged("Href");
					this.OnHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(25)")]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Border", DbType="NVarChar(50)")]
		public string Border
		{
			get
			{
				return this._Border;
			}
			set
			{
				if ((this._Border != value))
				{
					this.OnBorderChanging(value);
					this.SendPropertyChanging();
					this._Border = value;
					this.SendPropertyChanged("Border");
					this.OnBorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RotatorID", DbType="Int")]
		public System.Nullable<int> RotatorID
		{
			get
			{
				return this._RotatorID;
			}
			set
			{
				if ((this._RotatorID != value))
				{
					this.OnRotatorIDChanging(value);
					this.SendPropertyChanging();
					this._RotatorID = value;
					this.SendPropertyChanged("RotatorID");
					this.OnRotatorIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stavdal_ListRoles")]
	public partial class Stavdal_ListRole
	{
		
		private System.Guid _RoleId;
		
		private int _SiteId;
		
		private string _RoleName;
		
		public Stavdal_ListRole()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int NOT NULL")]
		public int SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this._SiteId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stavdal_ProvidersList")]
	public partial class Stavdal_ProvidersList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SiteID;
		
		private System.Nullable<int> _RegionID;
		
		private System.Nullable<int> _ListID;
		
		private string _Properties;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnListIDChanging(System.Nullable<int> value);
    partial void OnListIDChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public Stavdal_ProvidersList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int")]
		public System.Nullable<int> ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stavdal_ReportItems")]
	public partial class Stavdal_ReportItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ReportItem;
		
		private string _Columns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReportItemChanging(string value);
    partial void OnReportItemChanged();
    partial void OnColumnsChanging(string value);
    partial void OnColumnsChanged();
    #endregion
		
		public Stavdal_ReportItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportItem", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReportItem
		{
			get
			{
				return this._ReportItem;
			}
			set
			{
				if ((this._ReportItem != value))
				{
					this.OnReportItemChanging(value);
					this.SendPropertyChanging();
					this._ReportItem = value;
					this.SendPropertyChanged("ReportItem");
					this.OnReportItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Columns", DbType="NVarChar(MAX)")]
		public string Columns
		{
			get
			{
				return this._Columns;
			}
			set
			{
				if ((this._Columns != value))
				{
					this.OnColumnsChanging(value);
					this.SendPropertyChanging();
					this._Columns = value;
					this.SendPropertyChanged("Columns");
					this.OnColumnsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stavdal_ReportRoles")]
	public partial class Stavdal_ReportRole
	{
		
		private System.Guid _RoleId;
		
		private int _SiteId;
		
		private string _RoleName;
		
		public Stavdal_ReportRole()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int NOT NULL")]
		public int SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this._SiteId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stavdal_Reports")]
	public partial class Stavdal_Report
	{
		
		private int _ID;
		
		private int _ItemID;
		
		private string _Data;
		
		private bool _IsOpen;
		
		private string _CreatedBy;
		
		private string _ReportNr;
		
		private bool _Locked;
		
		private string _Responsible;
		
		private System.Nullable<System.DateTime> _DateClosed;
		
		private string _ClosedBy;
		
		public Stavdal_Report()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOpen", DbType="Bit NOT NULL")]
		public bool IsOpen
		{
			get
			{
				return this._IsOpen;
			}
			set
			{
				if ((this._IsOpen != value))
				{
					this._IsOpen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportNr", DbType="NVarChar(50)")]
		public string ReportNr
		{
			get
			{
				return this._ReportNr;
			}
			set
			{
				if ((this._ReportNr != value))
				{
					this._ReportNr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this._Locked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible", DbType="NVarChar(255)")]
		public string Responsible
		{
			get
			{
				return this._Responsible;
			}
			set
			{
				if ((this._Responsible != value))
				{
					this._Responsible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateClosed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateClosed
		{
			get
			{
				return this._DateClosed;
			}
			set
			{
				if ((this._DateClosed != value))
				{
					this._DateClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedBy", DbType="NVarChar(255)")]
		public string ClosedBy
		{
			get
			{
				return this._ClosedBy;
			}
			set
			{
				if ((this._ClosedBy != value))
				{
					this._ClosedBy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Steps")]
	public partial class Step : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PersonID;
		
		private int _Steps;
		
		private int _Length;
		
		private string _Calories;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(int value);
    partial void OnPersonIDChanged();
    partial void OnStepsChanging(int value);
    partial void OnStepsChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnCaloriesChanging(string value);
    partial void OnCaloriesChanged();
    #endregion
		
		public Step()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL")]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Steps", DbType="Int NOT NULL")]
		public int Steps
		{
			get
			{
				return this._Steps;
			}
			set
			{
				if ((this._Steps != value))
				{
					this.OnStepsChanging(value);
					this.SendPropertyChanging();
					this._Steps = value;
					this.SendPropertyChanged("Steps");
					this.OnStepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calories", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Calories
		{
			get
			{
				return this._Calories;
			}
			set
			{
				if ((this._Calories != value))
				{
					this.OnCaloriesChanging(value);
					this.SendPropertyChanging();
					this._Calories = value;
					this.SendPropertyChanged("Calories");
					this.OnCaloriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Step", Storage="_User", ThisKey="PersonID", OtherKey="PersonID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Steps.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Steps.Add(this);
						this._PersonID = value.PersonID;
					}
					else
					{
						this._PersonID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscriber")]
	public partial class Subscriber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _company;
		
		private string _email;
		
		private string _telephone;
		
		private string _mobile;
		
		private string _fax;
		
		private string _address;
		
		private string _postal;
		
		private string _city;
		
		private string _country;
		
		private string _orgnr;
		
		private System.DateTime _created;
		
		private System.Nullable<int> _SiteID;
		
		private string _ObjectKey;
		
		private bool _unregistered;
		
		private EntitySet<GroupSubscriber> _GroupSubscribers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OncompanyChanging(string value);
    partial void OncompanyChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnpostalChanging(string value);
    partial void OnpostalChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnorgnrChanging(string value);
    partial void OnorgnrChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnObjectKeyChanging(string value);
    partial void OnObjectKeyChanged();
    partial void OnunregisteredChanging(bool value);
    partial void OnunregisteredChanged();
    #endregion
		
		public Subscriber()
		{
			this._GroupSubscribers = new EntitySet<GroupSubscriber>(new Action<GroupSubscriber>(this.attach_GroupSubscribers), new Action<GroupSubscriber>(this.detach_GroupSubscribers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="NVarChar(50)")]
		public string company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="NVarChar(50)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="NVarChar(50)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(50)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal", DbType="NVarChar(10)")]
		public string postal
		{
			get
			{
				return this._postal;
			}
			set
			{
				if ((this._postal != value))
				{
					this.OnpostalChanging(value);
					this.SendPropertyChanging();
					this._postal = value;
					this.SendPropertyChanged("postal");
					this.OnpostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(100)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(100)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orgnr", DbType="NVarChar(50)")]
		public string orgnr
		{
			get
			{
				return this._orgnr;
			}
			set
			{
				if ((this._orgnr != value))
				{
					this.OnorgnrChanging(value);
					this.SendPropertyChanging();
					this._orgnr = value;
					this.SendPropertyChanged("orgnr");
					this.OnorgnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(15)")]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this.OnObjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ObjectKey = value;
					this.SendPropertyChanged("ObjectKey");
					this.OnObjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unregistered", DbType="Bit NOT NULL")]
		public bool unregistered
		{
			get
			{
				return this._unregistered;
			}
			set
			{
				if ((this._unregistered != value))
				{
					this.OnunregisteredChanging(value);
					this.SendPropertyChanging();
					this._unregistered = value;
					this.SendPropertyChanged("unregistered");
					this.OnunregisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriber_GroupSubscriber", Storage="_GroupSubscribers", ThisKey="ID", OtherKey="SubscriberID")]
		public EntitySet<GroupSubscriber> GroupSubscribers
		{
			get
			{
				return this._GroupSubscribers;
			}
			set
			{
				this._GroupSubscribers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupSubscribers(GroupSubscriber entity)
		{
			this.SendPropertyChanging();
			entity.Subscriber = this;
		}
		
		private void detach_GroupSubscribers(GroupSubscriber entity)
		{
			this.SendPropertyChanging();
			entity.Subscriber = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.support")]
	public partial class support : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Priority;
		
		private string _Customer;
		
		private string _ContactPerson;
		
		private string _ContactMail;
		
		private string _ContactPhone;
		
		private string _Details;
		
		private string _attachedFile;
		
		private System.DateTime _createdDate;
		
		private System.Nullable<System.DateTime> _solvedDate;
		
		private string _solvedBy;
		
		private string _Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPriorityChanging(string value);
    partial void OnPriorityChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactMailChanging(string value);
    partial void OnContactMailChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnattachedFileChanging(string value);
    partial void OnattachedFileChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnsolvedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsolvedDateChanged();
    partial void OnsolvedByChanging(string value);
    partial void OnsolvedByChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public support()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(100)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMail", DbType="NVarChar(255)")]
		public string ContactMail
		{
			get
			{
				return this._ContactMail;
			}
			set
			{
				if ((this._ContactMail != value))
				{
					this.OnContactMailChanging(value);
					this.SendPropertyChanging();
					this._ContactMail = value;
					this.SendPropertyChanged("ContactMail");
					this.OnContactMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(100)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attachedFile", DbType="NVarChar(255)")]
		public string attachedFile
		{
			get
			{
				return this._attachedFile;
			}
			set
			{
				if ((this._attachedFile != value))
				{
					this.OnattachedFileChanging(value);
					this.SendPropertyChanging();
					this._attachedFile = value;
					this.SendPropertyChanged("attachedFile");
					this.OnattachedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solvedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> solvedDate
		{
			get
			{
				return this._solvedDate;
			}
			set
			{
				if ((this._solvedDate != value))
				{
					this.OnsolvedDateChanging(value);
					this.SendPropertyChanging();
					this._solvedDate = value;
					this.SendPropertyChanged("solvedDate");
					this.OnsolvedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solvedBy", DbType="NVarChar(50)")]
		public string solvedBy
		{
			get
			{
				return this._solvedBy;
			}
			set
			{
				if ((this._solvedBy != value))
				{
					this.OnsolvedByChanging(value);
					this.SendPropertyChanging();
					this._solvedBy = value;
					this.SendPropertyChanged("solvedBy");
					this.OnsolvedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TechnicalTip_Answer")]
	public partial class TechnicalTip_Answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Question_FK;
		
		private string _Answer;
		
		private System.Guid _UserID;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<TechnicalTip_Question> _TechnicalTip_Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuestion_FKChanging(int value);
    partial void OnQuestion_FKChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    #endregion
		
		public TechnicalTip_Answer()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._TechnicalTip_Question = default(EntityRef<TechnicalTip_Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question_FK", DbType="Int NOT NULL")]
		public int Question_FK
		{
			get
			{
				return this._Question_FK;
			}
			set
			{
				if ((this._Question_FK != value))
				{
					if (this._TechnicalTip_Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestion_FKChanging(value);
					this.SendPropertyChanging();
					this._Question_FK = value;
					this.SendPropertyChanged("Question_FK");
					this.OnQuestion_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_TechnicalTip_Answer", Storage="_aspnet_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.TechnicalTip_Answers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.TechnicalTip_Answers.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TechnicalTip_Question_TechnicalTip_Answer", Storage="_TechnicalTip_Question", ThisKey="Question_FK", OtherKey="ID", IsForeignKey=true)]
		public TechnicalTip_Question TechnicalTip_Question
		{
			get
			{
				return this._TechnicalTip_Question.Entity;
			}
			set
			{
				TechnicalTip_Question previousValue = this._TechnicalTip_Question.Entity;
				if (((previousValue != value) 
							|| (this._TechnicalTip_Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TechnicalTip_Question.Entity = null;
						previousValue.TechnicalTip_Answers.Remove(this);
					}
					this._TechnicalTip_Question.Entity = value;
					if ((value != null))
					{
						value.TechnicalTip_Answers.Add(this);
						this._Question_FK = value.ID;
					}
					else
					{
						this._Question_FK = default(int);
					}
					this.SendPropertyChanged("TechnicalTip_Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TechnicalTip_Question")]
	public partial class TechnicalTip_Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private string _Question;
		
		private int _ObjectID;
		
		private string _Title;
		
		private string _Identification;
		
		private EntitySet<TechnicalTip_Answer> _TechnicalTip_Answers;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIdentificationChanging(string value);
    partial void OnIdentificationChanged();
    #endregion
		
		public TechnicalTip_Question()
		{
			this._TechnicalTip_Answers = new EntitySet<TechnicalTip_Answer>(new Action<TechnicalTip_Answer>(this.attach_TechnicalTip_Answers), new Action<TechnicalTip_Answer>(this.detach_TechnicalTip_Answers));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identification", DbType="NVarChar(100)")]
		public string Identification
		{
			get
			{
				return this._Identification;
			}
			set
			{
				if ((this._Identification != value))
				{
					this.OnIdentificationChanging(value);
					this.SendPropertyChanging();
					this._Identification = value;
					this.SendPropertyChanged("Identification");
					this.OnIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TechnicalTip_Question_TechnicalTip_Answer", Storage="_TechnicalTip_Answers", ThisKey="ID", OtherKey="Question_FK")]
		public EntitySet<TechnicalTip_Answer> TechnicalTip_Answers
		{
			get
			{
				return this._TechnicalTip_Answers;
			}
			set
			{
				this._TechnicalTip_Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_TechnicalTip_Question", Storage="_aspnet_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.TechnicalTip_Questions.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.TechnicalTip_Questions.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TechnicalTip_Answers(TechnicalTip_Answer entity)
		{
			this.SendPropertyChanging();
			entity.TechnicalTip_Question = this;
		}
		
		private void detach_TechnicalTip_Answers(TechnicalTip_Answer entity)
		{
			this.SendPropertyChanging();
			entity.TechnicalTip_Question = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Texts")]
	public partial class Text : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Structure;
		
		private string _MenuTitle;
		
		private string _HTMLContent;
		
		private string _Title;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _LastChanged;
		
		private System.Nullable<int> _sortorder;
		
		private string _picture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStructureChanging(string value);
    partial void OnStructureChanged();
    partial void OnMenuTitleChanging(string value);
    partial void OnMenuTitleChanged();
    partial void OnHTMLContentChanging(string value);
    partial void OnHTMLContentChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnLastChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangedChanged();
    partial void OnsortorderChanging(System.Nullable<int> value);
    partial void OnsortorderChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    #endregion
		
		public Text()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Structure", DbType="NVarChar(50)")]
		public string Structure
		{
			get
			{
				return this._Structure;
			}
			set
			{
				if ((this._Structure != value))
				{
					this.OnStructureChanging(value);
					this.SendPropertyChanging();
					this._Structure = value;
					this.SendPropertyChanged("Structure");
					this.OnStructureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuTitle", DbType="NVarChar(255)")]
		public string MenuTitle
		{
			get
			{
				return this._MenuTitle;
			}
			set
			{
				if ((this._MenuTitle != value))
				{
					this.OnMenuTitleChanging(value);
					this.SendPropertyChanging();
					this._MenuTitle = value;
					this.SendPropertyChanged("MenuTitle");
					this.OnMenuTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this.OnHTMLContentChanging(value);
					this.SendPropertyChanging();
					this._HTMLContent = value;
					this.SendPropertyChanged("HTMLContent");
					this.OnHTMLContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(255)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(1000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastChanged
		{
			get
			{
				return this._LastChanged;
			}
			set
			{
				if ((this._LastChanged != value))
				{
					this.OnLastChangedChanging(value);
					this.SendPropertyChanging();
					this._LastChanged = value;
					this.SendPropertyChanged("LastChanged");
					this.OnLastChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortorder", DbType="Int")]
		public System.Nullable<int> sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="NVarChar(50)")]
		public string picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Theme_AreaObject")]
	public partial class Theme_AreaObject
	{
		
		private int _ID;
		
		private System.Nullable<int> _SiteID;
		
		private string _ObjectName;
		
		private string _HTMLContent;
		
		private System.Nullable<int> _AreaID;
		
		private System.Nullable<System.DateTime> _PublishFrom;
		
		private System.Nullable<System.DateTime> _PublishTo;
		
		private System.Nullable<bool> _Standard;
		
		private string _BackgroundColor;
		
		private bool _ScriptActive;
		
		public Theme_AreaObject()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectName", DbType="NVarChar(50)")]
		public string ObjectName
		{
			get
			{
				return this._ObjectName;
			}
			set
			{
				if ((this._ObjectName != value))
				{
					this._ObjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this._HTMLContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="Int")]
		public System.Nullable<int> AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					this._AreaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishFrom
		{
			get
			{
				return this._PublishFrom;
			}
			set
			{
				if ((this._PublishFrom != value))
				{
					this._PublishFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTo
		{
			get
			{
				return this._PublishTo;
			}
			set
			{
				if ((this._PublishTo != value))
				{
					this._PublishTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="Bit")]
		public System.Nullable<bool> Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this._Standard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundColor", DbType="NVarChar(7)")]
		public string BackgroundColor
		{
			get
			{
				return this._BackgroundColor;
			}
			set
			{
				if ((this._BackgroundColor != value))
				{
					this._BackgroundColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptActive", DbType="Bit NOT NULL")]
		public bool ScriptActive
		{
			get
			{
				return this._ScriptActive;
			}
			set
			{
				if ((this._ScriptActive != value))
				{
					this._ScriptActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Theme_Areas")]
	public partial class Theme_Area
	{
		
		private int _ID;
		
		private int _SiteID;
		
		private string _AreaName;
		
		public Theme_Area()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", DbType="NVarChar(250)")]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this._AreaName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tmp_crm_contact")]
	public partial class tmp_crm_contact
	{
		
		private int _ID;
		
		private System.Nullable<int> _CompanyID;
		
		private string _CompanyName;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		public tmp_crm_contact()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(200)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(200)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(200)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TreeStructure")]
	public partial class TreeStructure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectID;
		
		private System.Nullable<int> _ParentObjectID;
		
		private System.Nullable<int> _Sort;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnParentObjectIDChanging(System.Nullable<int> value);
    partial void OnParentObjectIDChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    #endregion
		
		public TreeStructure()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentObjectID", DbType="Int")]
		public System.Nullable<int> ParentObjectID
		{
			get
			{
				return this._ParentObjectID;
			}
			set
			{
				if ((this._ParentObjectID != value))
				{
					this.OnParentObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ParentObjectID = value;
					this.SendPropertyChanged("ParentObjectID");
					this.OnParentObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_TreeStructure", Storage="_Object", ThisKey="ObjectID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.TreeStructure = null;
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.TreeStructure = this;
						this._ObjectID = value.ObjectID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLog")]
	public partial class UserLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _Users_FK;
		
		private System.DateTime _Logindate;
		
		private int _Site_FK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsers_FKChanging(System.Guid value);
    partial void OnUsers_FKChanged();
    partial void OnLogindateChanging(System.DateTime value);
    partial void OnLogindateChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    #endregion
		
		public UserLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users_FK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Users_FK
		{
			get
			{
				return this._Users_FK;
			}
			set
			{
				if ((this._Users_FK != value))
				{
					this.OnUsers_FKChanging(value);
					this.SendPropertyChanging();
					this._Users_FK = value;
					this.SendPropertyChanged("Users_FK");
					this.OnUsers_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logindate", DbType="DateTime NOT NULL")]
		public System.DateTime Logindate
		{
			get
			{
				return this._Logindate;
			}
			set
			{
				if ((this._Logindate != value))
				{
					this.OnLogindateChanging(value);
					this.SendPropertyChanging();
					this._Logindate = value;
					this.SendPropertyChanged("Logindate");
					this.OnLogindateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonID;
		
		private string _Name;
		
		private int _Weight;
		
		private int _StepLength;
		
		private int _GroupID;
		
		private EntitySet<Step> _Steps;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIDChanging(int value);
    partial void OnPersonIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnStepLengthChanging(int value);
    partial void OnStepLengthChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    #endregion
		
		public User()
		{
			this._Steps = new EntitySet<Step>(new Action<Step>(this.attach_Steps), new Action<Step>(this.detach_Steps));
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepLength", DbType="Int NOT NULL")]
		public int StepLength
		{
			get
			{
				return this._StepLength;
			}
			set
			{
				if ((this._StepLength != value))
				{
					this.OnStepLengthChanging(value);
					this.SendPropertyChanging();
					this._StepLength = value;
					this.SendPropertyChanged("StepLength");
					this.OnStepLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Step", Storage="_Steps", ThisKey="PersonID", OtherKey="PersonID")]
		public EntitySet<Step> Steps
		{
			get
			{
				return this._Steps;
			}
			set
			{
				this._Steps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_User", Storage="_Group", ThisKey="GroupID", OtherKey="GroupID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._GroupID = value.GroupID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Steps(Step entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Steps(Step entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.AimDocs")]
	public partial class AimDoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ArtNr;
		
		private string _PDFFilename;
		
		private int _SiteID;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnArtNrChanging(string value);
    partial void OnArtNrChanged();
    partial void OnPDFFilenameChanging(string value);
    partial void OnPDFFilenameChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    #endregion
		
		public AimDoc()
		{
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(505)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtNr", DbType="NVarChar(500)")]
		public string ArtNr
		{
			get
			{
				return this._ArtNr;
			}
			set
			{
				if ((this._ArtNr != value))
				{
					this.OnArtNrChanging(value);
					this.SendPropertyChanging();
					this._ArtNr = value;
					this.SendPropertyChanged("ArtNr");
					this.OnArtNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFFilename", DbType="NVarChar(500)")]
		public string PDFFilename
		{
			get
			{
				return this._PDFFilename;
			}
			set
			{
				if ((this._PDFFilename != value))
				{
					this.OnPDFFilenameChanging(value);
					this.SendPropertyChanging();
					this._PDFFilename = value;
					this.SendPropertyChanged("PDFFilename");
					this.OnPDFFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_AimDoc", Storage="_Site", ThisKey="ID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.AimDoc = null;
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.AimDoc = this;
						this._ID = value.SiteID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

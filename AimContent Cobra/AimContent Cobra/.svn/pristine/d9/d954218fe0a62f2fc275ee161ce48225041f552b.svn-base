#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIM.Business.AimTags
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aimit_Aim")]
	public partial class DataObjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTagTypeProperty(TagTypeProperty instance);
    partial void UpdateTagTypeProperty(TagTypeProperty instance);
    partial void DeleteTagTypeProperty(TagTypeProperty instance);
    partial void InsertTagTypePropertyValue(TagTypePropertyValue instance);
    partial void UpdateTagTypePropertyValue(TagTypePropertyValue instance);
    partial void DeleteTagTypePropertyValue(TagTypePropertyValue instance);
    partial void InsertTagType(TagType instance);
    partial void UpdateTagType(TagType instance);
    partial void DeleteTagType(TagType instance);
    partial void InsertSite(Site instance);
    partial void UpdateSite(Site instance);
    partial void DeleteSite(Site instance);
    partial void InsertObject(Object instance);
    partial void UpdateObject(Object instance);
    partial void DeleteObject(Object instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertTagPropertyType(TagPropertyType instance);
    partial void UpdateTagPropertyType(TagPropertyType instance);
    partial void DeleteTagPropertyType(TagPropertyType instance);
    partial void InsertObject_X_Tag(Object_X_Tag instance);
    partial void UpdateObject_X_Tag(Object_X_Tag instance);
    partial void DeleteObject_X_Tag(Object_X_Tag instance);
    partial void InsertTags_X_Content(Tags_X_Content instance);
    partial void UpdateTags_X_Content(Tags_X_Content instance);
    partial void DeleteTags_X_Content(Tags_X_Content instance);
    partial void InsertContentType(ContentType instance);
    partial void UpdateContentType(ContentType instance);
    partial void DeleteContentType(ContentType instance);
    partial void InsertContent(Content instance);
    partial void UpdateContent(Content instance);
    partial void DeleteContent(Content instance);
    #endregion
		
		public DataObjectsDataContext() : 
				base(global::AIM.Business.Properties.Settings.Default.Aimit_AimConnectionString8, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TagTypeProperty> TagTypeProperties
		{
			get
			{
				return this.GetTable<TagTypeProperty>();
			}
		}
		
		public System.Data.Linq.Table<TagTypePropertyValue> TagTypePropertyValues
		{
			get
			{
				return this.GetTable<TagTypePropertyValue>();
			}
		}
		
		public System.Data.Linq.Table<TagType> TagTypes
		{
			get
			{
				return this.GetTable<TagType>();
			}
		}
		
		public System.Data.Linq.Table<Site> Sites
		{
			get
			{
				return this.GetTable<Site>();
			}
		}
		
		public System.Data.Linq.Table<Object> Objects
		{
			get
			{
				return this.GetTable<Object>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<TagPropertyType> TagPropertyTypes
		{
			get
			{
				return this.GetTable<TagPropertyType>();
			}
		}
		
		public System.Data.Linq.Table<Object_X_Tag> Object_X_Tags
		{
			get
			{
				return this.GetTable<Object_X_Tag>();
			}
		}
		
		public System.Data.Linq.Table<Tags_X_Content> Tags_X_Contents
		{
			get
			{
				return this.GetTable<Tags_X_Content>();
			}
		}
		
		public System.Data.Linq.Table<ContentType> ContentTypes
		{
			get
			{
				return this.GetTable<ContentType>();
			}
		}
		
		public System.Data.Linq.Table<Content> Contents
		{
			get
			{
				return this.GetTable<Content>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagTypeProperties")]
	public partial class TagTypeProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TagType_FK;
		
		private int _TagPropertyType_FK;
		
		private string _Name;
		
		private string _Slug;
		
		private string _Description;
		
		private int _Sort;
		
		private EntitySet<TagTypePropertyValue> _TagTypePropertyValues;
		
		private EntityRef<TagType> _TagType;
		
		private EntityRef<TagPropertyType> _TagPropertyType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTagType_FKChanging(int value);
    partial void OnTagType_FKChanged();
    partial void OnTagPropertyType_FKChanging(int value);
    partial void OnTagPropertyType_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    #endregion
		
		public TagTypeProperty()
		{
			this._TagTypePropertyValues = new EntitySet<TagTypePropertyValue>(new Action<TagTypePropertyValue>(this.attach_TagTypePropertyValues), new Action<TagTypePropertyValue>(this.detach_TagTypePropertyValues));
			this._TagType = default(EntityRef<TagType>);
			this._TagPropertyType = default(EntityRef<TagPropertyType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagType_FK", DbType="Int NOT NULL")]
		public int TagType_FK
		{
			get
			{
				return this._TagType_FK;
			}
			set
			{
				if ((this._TagType_FK != value))
				{
					if (this._TagType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagType_FKChanging(value);
					this.SendPropertyChanging();
					this._TagType_FK = value;
					this.SendPropertyChanged("TagType_FK");
					this.OnTagType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagPropertyType_FK", DbType="Int NOT NULL")]
		public int TagPropertyType_FK
		{
			get
			{
				return this._TagPropertyType_FK;
			}
			set
			{
				if ((this._TagPropertyType_FK != value))
				{
					if (this._TagPropertyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagPropertyType_FKChanging(value);
					this.SendPropertyChanging();
					this._TagPropertyType_FK = value;
					this.SendPropertyChanged("TagPropertyType_FK");
					this.OnTagPropertyType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int NOT NULL")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagTypeProperty_TagTypePropertyValue", Storage="_TagTypePropertyValues", ThisKey="ID", OtherKey="TagTypeProperty_FK")]
		public EntitySet<TagTypePropertyValue> TagTypePropertyValues
		{
			get
			{
				return this._TagTypePropertyValues;
			}
			set
			{
				this._TagTypePropertyValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagType_TagTypeProperty", Storage="_TagType", ThisKey="TagType_FK", OtherKey="ID", IsForeignKey=true)]
		public TagType TagType
		{
			get
			{
				return this._TagType.Entity;
			}
			set
			{
				TagType previousValue = this._TagType.Entity;
				if (((previousValue != value) 
							|| (this._TagType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagType.Entity = null;
						previousValue.TagTypeProperties.Remove(this);
					}
					this._TagType.Entity = value;
					if ((value != null))
					{
						value.TagTypeProperties.Add(this);
						this._TagType_FK = value.ID;
					}
					else
					{
						this._TagType_FK = default(int);
					}
					this.SendPropertyChanged("TagType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagPropertyType_TagTypeProperty", Storage="_TagPropertyType", ThisKey="TagPropertyType_FK", OtherKey="ID", IsForeignKey=true)]
		public TagPropertyType TagPropertyType
		{
			get
			{
				return this._TagPropertyType.Entity;
			}
			set
			{
				TagPropertyType previousValue = this._TagPropertyType.Entity;
				if (((previousValue != value) 
							|| (this._TagPropertyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagPropertyType.Entity = null;
						previousValue.TagTypeProperties.Remove(this);
					}
					this._TagPropertyType.Entity = value;
					if ((value != null))
					{
						value.TagTypeProperties.Add(this);
						this._TagPropertyType_FK = value.ID;
					}
					else
					{
						this._TagPropertyType_FK = default(int);
					}
					this.SendPropertyChanged("TagPropertyType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagTypePropertyValues(TagTypePropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.TagTypeProperty = this;
		}
		
		private void detach_TagTypePropertyValues(TagTypePropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.TagTypeProperty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagTypePropertyValues")]
	public partial class TagTypePropertyValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TagTypeProperty_FK;
		
		private int _Tag_FK;
		
		private string _Value;
		
		private EntityRef<TagTypeProperty> _TagTypeProperty;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTagTypeProperty_FKChanging(int value);
    partial void OnTagTypeProperty_FKChanged();
    partial void OnTag_FKChanging(int value);
    partial void OnTag_FKChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public TagTypePropertyValue()
		{
			this._TagTypeProperty = default(EntityRef<TagTypeProperty>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagTypeProperty_FK", DbType="Int NOT NULL")]
		public int TagTypeProperty_FK
		{
			get
			{
				return this._TagTypeProperty_FK;
			}
			set
			{
				if ((this._TagTypeProperty_FK != value))
				{
					if (this._TagTypeProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagTypeProperty_FKChanging(value);
					this.SendPropertyChanging();
					this._TagTypeProperty_FK = value;
					this.SendPropertyChanged("TagTypeProperty_FK");
					this.OnTagTypeProperty_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag_FK", DbType="Int NOT NULL")]
		public int Tag_FK
		{
			get
			{
				return this._Tag_FK;
			}
			set
			{
				if ((this._Tag_FK != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTag_FKChanging(value);
					this.SendPropertyChanging();
					this._Tag_FK = value;
					this.SendPropertyChanged("Tag_FK");
					this.OnTag_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagTypeProperty_TagTypePropertyValue", Storage="_TagTypeProperty", ThisKey="TagTypeProperty_FK", OtherKey="ID", IsForeignKey=true)]
		public TagTypeProperty TagTypeProperty
		{
			get
			{
				return this._TagTypeProperty.Entity;
			}
			set
			{
				TagTypeProperty previousValue = this._TagTypeProperty.Entity;
				if (((previousValue != value) 
							|| (this._TagTypeProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagTypeProperty.Entity = null;
						previousValue.TagTypePropertyValues.Remove(this);
					}
					this._TagTypeProperty.Entity = value;
					if ((value != null))
					{
						value.TagTypePropertyValues.Add(this);
						this._TagTypeProperty_FK = value.ID;
					}
					else
					{
						this._TagTypeProperty_FK = default(int);
					}
					this.SendPropertyChanged("TagTypeProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TagTypePropertyValue", Storage="_Tag", ThisKey="Tag_FK", OtherKey="ID", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.TagTypePropertyValues.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.TagTypePropertyValues.Add(this);
						this._Tag_FK = value.ID;
					}
					else
					{
						this._Tag_FK = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagTypes")]
	public partial class TagType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Slug;
		
		private int _Site_FK;
		
		private EntitySet<TagTypeProperty> _TagTypeProperties;
		
		private EntitySet<Tag> _Tags;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    #endregion
		
		public TagType()
		{
			this._TagTypeProperties = new EntitySet<TagTypeProperty>(new Action<TagTypeProperty>(this.attach_TagTypeProperties), new Action<TagTypeProperty>(this.detach_TagTypeProperties));
			this._Tags = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags), new Action<Tag>(this.detach_Tags));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagType_TagTypeProperty", Storage="_TagTypeProperties", ThisKey="ID", OtherKey="TagType_FK")]
		public EntitySet<TagTypeProperty> TagTypeProperties
		{
			get
			{
				return this._TagTypeProperties;
			}
			set
			{
				this._TagTypeProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagType_Tag", Storage="_Tags", ThisKey="ID", OtherKey="TagType_FK")]
		public EntitySet<Tag> Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				this._Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_TagType", Storage="_Site", ThisKey="Site_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.TagTypes.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.TagTypes.Add(this);
						this._Site_FK = value.SiteID;
					}
					else
					{
						this._Site_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagTypeProperties(TagTypeProperty entity)
		{
			this.SendPropertyChanging();
			entity.TagType = this;
		}
		
		private void detach_TagTypeProperties(TagTypeProperty entity)
		{
			this.SendPropertyChanging();
			entity.TagType = null;
		}
		
		private void attach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.TagType = this;
		}
		
		private void detach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.TagType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Site")]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteID;
		
		private string _SiteName;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _ConfigID;
		
		private EntitySet<TagType> _TagTypes;
		
		private EntitySet<Object> _Objects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnConfigIDChanging(System.Nullable<int> value);
    partial void OnConfigIDChanged();
    #endregion
		
		public Site()
		{
			this._TagTypes = new EntitySet<TagType>(new Action<TagType>(this.attach_TagTypes), new Action<TagType>(this.detach_TagTypes));
			this._Objects = new EntitySet<Object>(new Action<Object>(this.attach_Objects), new Action<Object>(this.detach_Objects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigID", DbType="Int")]
		public System.Nullable<int> ConfigID
		{
			get
			{
				return this._ConfigID;
			}
			set
			{
				if ((this._ConfigID != value))
				{
					this.OnConfigIDChanging(value);
					this.SendPropertyChanging();
					this._ConfigID = value;
					this.SendPropertyChanged("ConfigID");
					this.OnConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_TagType", Storage="_TagTypes", ThisKey="SiteID", OtherKey="Site_FK")]
		public EntitySet<TagType> TagTypes
		{
			get
			{
				return this._TagTypes;
			}
			set
			{
				this._TagTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Object", Storage="_Objects", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<Object> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagTypes(TagType entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_TagTypes(TagType entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object")]
	public partial class Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectID;
		
		private string _Structure;
		
		private string _Title;
		
		private string _Slug;
		
		private string _IntroText;
		
		private string _HTMLContent;
		
		private string _MetaTitle;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private System.Nullable<bool> _Active;
		
		private System.DateTime _LastChanged;
		
		private System.Nullable<int> _Sortorder;
		
		private string _Picture;
		
		private string _Alt;
		
		private System.Nullable<int> _ObjectTypeID;
		
		private System.Nullable<int> _SiteID;
		
		private int _LangID;
		
		private System.DateTime _Created;
		
		private string _StartDate;
		
		private string _ObjectKey;
		
		private System.Nullable<int> _ListID;
		
		private System.Nullable<System.DateTime> _PublishFrom;
		
		private System.Nullable<System.DateTime> _PublishTo;
		
		private string _LinkTarget;
		
		private System.Nullable<int> _Visits;
		
		private System.Nullable<int> _Category;
		
		private byte _SecureObject;
		
		private System.Nullable<System.DateTime> _TrashedDate;
		
		private string _UploadedImagePath;
		
		private bool _VisibleInMenu;
		
		private EntitySet<Object_X_Tag> _Object_X_Tags;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnStructureChanging(string value);
    partial void OnStructureChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnIntroTextChanging(string value);
    partial void OnIntroTextChanged();
    partial void OnHTMLContentChanging(string value);
    partial void OnHTMLContentChanged();
    partial void OnMetaTitleChanging(string value);
    partial void OnMetaTitleChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnLastChangedChanging(System.DateTime value);
    partial void OnLastChangedChanged();
    partial void OnSortorderChanging(System.Nullable<int> value);
    partial void OnSortorderChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnAltChanging(string value);
    partial void OnAltChanged();
    partial void OnObjectTypeIDChanging(System.Nullable<int> value);
    partial void OnObjectTypeIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnObjectKeyChanging(string value);
    partial void OnObjectKeyChanged();
    partial void OnListIDChanging(System.Nullable<int> value);
    partial void OnListIDChanged();
    partial void OnPublishFromChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishFromChanged();
    partial void OnPublishToChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishToChanged();
    partial void OnLinkTargetChanging(string value);
    partial void OnLinkTargetChanged();
    partial void OnVisitsChanging(System.Nullable<int> value);
    partial void OnVisitsChanged();
    partial void OnCategoryChanging(System.Nullable<int> value);
    partial void OnCategoryChanged();
    partial void OnSecureObjectChanging(byte value);
    partial void OnSecureObjectChanged();
    partial void OnTrashedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrashedDateChanged();
    partial void OnUploadedImagePathChanging(string value);
    partial void OnUploadedImagePathChanged();
    partial void OnVisibleInMenuChanging(bool value);
    partial void OnVisibleInMenuChanged();
    #endregion
		
		public Object()
		{
			this._Object_X_Tags = new EntitySet<Object_X_Tag>(new Action<Object_X_Tag>(this.attach_Object_X_Tags), new Action<Object_X_Tag>(this.detach_Object_X_Tags));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Structure", DbType="NVarChar(50)")]
		public string Structure
		{
			get
			{
				return this._Structure;
			}
			set
			{
				if ((this._Structure != value))
				{
					this.OnStructureChanging(value);
					this.SendPropertyChanging();
					this._Structure = value;
					this.SendPropertyChanged("Structure");
					this.OnStructureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(500)")]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroText", DbType="NVarChar(MAX)")]
		public string IntroText
		{
			get
			{
				return this._IntroText;
			}
			set
			{
				if ((this._IntroText != value))
				{
					this.OnIntroTextChanging(value);
					this.SendPropertyChanging();
					this._IntroText = value;
					this.SendPropertyChanged("IntroText");
					this.OnIntroTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this.OnHTMLContentChanging(value);
					this.SendPropertyChanging();
					this._HTMLContent = value;
					this.SendPropertyChanged("HTMLContent");
					this.OnHTMLContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(100)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this.OnMetaTitleChanging(value);
					this.SendPropertyChanging();
					this._MetaTitle = value;
					this.SendPropertyChanged("MetaTitle");
					this.OnMetaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(1000)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(1000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanged", DbType="DateTime NOT NULL")]
		public System.DateTime LastChanged
		{
			get
			{
				return this._LastChanged;
			}
			set
			{
				if ((this._LastChanged != value))
				{
					this.OnLastChangedChanging(value);
					this.SendPropertyChanging();
					this._LastChanged = value;
					this.SendPropertyChanged("LastChanged");
					this.OnLastChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sortorder", DbType="Int")]
		public System.Nullable<int> Sortorder
		{
			get
			{
				return this._Sortorder;
			}
			set
			{
				if ((this._Sortorder != value))
				{
					this.OnSortorderChanging(value);
					this.SendPropertyChanging();
					this._Sortorder = value;
					this.SendPropertyChanged("Sortorder");
					this.OnSortorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(100)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt", DbType="NVarChar(1000)")]
		public string Alt
		{
			get
			{
				return this._Alt;
			}
			set
			{
				if ((this._Alt != value))
				{
					this.OnAltChanging(value);
					this.SendPropertyChanging();
					this._Alt = value;
					this.SendPropertyChanged("Alt");
					this.OnAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int")]
		public System.Nullable<int> ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="NVarChar(10)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(15)")]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this.OnObjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ObjectKey = value;
					this.SendPropertyChanged("ObjectKey");
					this.OnObjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int")]
		public System.Nullable<int> ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishFrom
		{
			get
			{
				return this._PublishFrom;
			}
			set
			{
				if ((this._PublishFrom != value))
				{
					this.OnPublishFromChanging(value);
					this.SendPropertyChanging();
					this._PublishFrom = value;
					this.SendPropertyChanged("PublishFrom");
					this.OnPublishFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTo
		{
			get
			{
				return this._PublishTo;
			}
			set
			{
				if ((this._PublishTo != value))
				{
					this.OnPublishToChanging(value);
					this.SendPropertyChanging();
					this._PublishTo = value;
					this.SendPropertyChanged("PublishTo");
					this.OnPublishToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTarget", DbType="NVarChar(10)")]
		public string LinkTarget
		{
			get
			{
				return this._LinkTarget;
			}
			set
			{
				if ((this._LinkTarget != value))
				{
					this.OnLinkTargetChanging(value);
					this.SendPropertyChanging();
					this._LinkTarget = value;
					this.SendPropertyChanged("LinkTarget");
					this.OnLinkTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visits", DbType="Int")]
		public System.Nullable<int> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				if ((this._Visits != value))
				{
					this.OnVisitsChanging(value);
					this.SendPropertyChanging();
					this._Visits = value;
					this.SendPropertyChanged("Visits");
					this.OnVisitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int")]
		public System.Nullable<int> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecureObject", DbType="TinyInt NOT NULL")]
		public byte SecureObject
		{
			get
			{
				return this._SecureObject;
			}
			set
			{
				if ((this._SecureObject != value))
				{
					this.OnSecureObjectChanging(value);
					this.SendPropertyChanging();
					this._SecureObject = value;
					this.SendPropertyChanged("SecureObject");
					this.OnSecureObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrashedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrashedDate
		{
			get
			{
				return this._TrashedDate;
			}
			set
			{
				if ((this._TrashedDate != value))
				{
					this.OnTrashedDateChanging(value);
					this.SendPropertyChanging();
					this._TrashedDate = value;
					this.SendPropertyChanged("TrashedDate");
					this.OnTrashedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedImagePath", DbType="NVarChar(400)")]
		public string UploadedImagePath
		{
			get
			{
				return this._UploadedImagePath;
			}
			set
			{
				if ((this._UploadedImagePath != value))
				{
					this.OnUploadedImagePathChanging(value);
					this.SendPropertyChanging();
					this._UploadedImagePath = value;
					this.SendPropertyChanged("UploadedImagePath");
					this.OnUploadedImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisibleInMenu", DbType="Bit NOT NULL")]
		public bool VisibleInMenu
		{
			get
			{
				return this._VisibleInMenu;
			}
			set
			{
				if ((this._VisibleInMenu != value))
				{
					this.OnVisibleInMenuChanging(value);
					this.SendPropertyChanging();
					this._VisibleInMenu = value;
					this.SendPropertyChanged("VisibleInMenu");
					this.OnVisibleInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_X_Tag", Storage="_Object_X_Tags", ThisKey="ObjectID", OtherKey="Object_FK")]
		public EntitySet<Object_X_Tag> Object_X_Tags
		{
			get
			{
				return this._Object_X_Tags;
			}
			set
			{
				this._Object_X_Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Object", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Object_X_Tags(Object_X_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Object_X_Tags(Object_X_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tags")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Slug;
		
		private bool _Deleted;
		
		private int _TagType_FK;
		
		private EntitySet<TagTypePropertyValue> _TagTypePropertyValues;
		
		private EntitySet<Object_X_Tag> _Object_X_Tags;
		
		private EntitySet<Tags_X_Content> _Tags_X_Contents;
		
		private EntityRef<TagType> _TagType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnTagType_FKChanging(int value);
    partial void OnTagType_FKChanged();
    #endregion
		
		public Tag()
		{
			this._TagTypePropertyValues = new EntitySet<TagTypePropertyValue>(new Action<TagTypePropertyValue>(this.attach_TagTypePropertyValues), new Action<TagTypePropertyValue>(this.detach_TagTypePropertyValues));
			this._Object_X_Tags = new EntitySet<Object_X_Tag>(new Action<Object_X_Tag>(this.attach_Object_X_Tags), new Action<Object_X_Tag>(this.detach_Object_X_Tags));
			this._Tags_X_Contents = new EntitySet<Tags_X_Content>(new Action<Tags_X_Content>(this.attach_Tags_X_Contents), new Action<Tags_X_Content>(this.detach_Tags_X_Contents));
			this._TagType = default(EntityRef<TagType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagType_FK", DbType="Int NOT NULL")]
		public int TagType_FK
		{
			get
			{
				return this._TagType_FK;
			}
			set
			{
				if ((this._TagType_FK != value))
				{
					if (this._TagType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagType_FKChanging(value);
					this.SendPropertyChanging();
					this._TagType_FK = value;
					this.SendPropertyChanged("TagType_FK");
					this.OnTagType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TagTypePropertyValue", Storage="_TagTypePropertyValues", ThisKey="ID", OtherKey="Tag_FK")]
		public EntitySet<TagTypePropertyValue> TagTypePropertyValues
		{
			get
			{
				return this._TagTypePropertyValues;
			}
			set
			{
				this._TagTypePropertyValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Object_X_Tag", Storage="_Object_X_Tags", ThisKey="ID", OtherKey="Tag_FK")]
		public EntitySet<Object_X_Tag> Object_X_Tags
		{
			get
			{
				return this._Object_X_Tags;
			}
			set
			{
				this._Object_X_Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Tags_X_Content", Storage="_Tags_X_Contents", ThisKey="ID", OtherKey="Tag_FK")]
		public EntitySet<Tags_X_Content> Tags_X_Contents
		{
			get
			{
				return this._Tags_X_Contents;
			}
			set
			{
				this._Tags_X_Contents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagType_Tag", Storage="_TagType", ThisKey="TagType_FK", OtherKey="ID", IsForeignKey=true)]
		public TagType TagType
		{
			get
			{
				return this._TagType.Entity;
			}
			set
			{
				TagType previousValue = this._TagType.Entity;
				if (((previousValue != value) 
							|| (this._TagType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagType.Entity = null;
						previousValue.Tags.Remove(this);
					}
					this._TagType.Entity = value;
					if ((value != null))
					{
						value.Tags.Add(this);
						this._TagType_FK = value.ID;
					}
					else
					{
						this._TagType_FK = default(int);
					}
					this.SendPropertyChanged("TagType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagTypePropertyValues(TagTypePropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_TagTypePropertyValues(TagTypePropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
		
		private void attach_Object_X_Tags(Object_X_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_Object_X_Tags(Object_X_Tag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
		
		private void attach_Tags_X_Contents(Tags_X_Content entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_Tags_X_Contents(Tags_X_Content entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagPropertyType")]
	public partial class TagPropertyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Slug;
		
		private string _Description;
		
		private EntitySet<TagTypeProperty> _TagTypeProperties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TagPropertyType()
		{
			this._TagTypeProperties = new EntitySet<TagTypeProperty>(new Action<TagTypeProperty>(this.attach_TagTypeProperties), new Action<TagTypeProperty>(this.detach_TagTypeProperties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TagPropertyType_TagTypeProperty", Storage="_TagTypeProperties", ThisKey="ID", OtherKey="TagPropertyType_FK")]
		public EntitySet<TagTypeProperty> TagTypeProperties
		{
			get
			{
				return this._TagTypeProperties;
			}
			set
			{
				this._TagTypeProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagTypeProperties(TagTypeProperty entity)
		{
			this.SendPropertyChanging();
			entity.TagPropertyType = this;
		}
		
		private void detach_TagTypeProperties(TagTypeProperty entity)
		{
			this.SendPropertyChanging();
			entity.TagPropertyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object_X_Tags")]
	public partial class Object_X_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Tag_FK;
		
		private int _Object_FK;
		
		private EntityRef<Object> _Object;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTag_FKChanging(int value);
    partial void OnTag_FKChanged();
    partial void OnObject_FKChanging(int value);
    partial void OnObject_FKChanged();
    #endregion
		
		public Object_X_Tag()
		{
			this._Object = default(EntityRef<Object>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tag_FK
		{
			get
			{
				return this._Tag_FK;
			}
			set
			{
				if ((this._Tag_FK != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTag_FKChanging(value);
					this.SendPropertyChanging();
					this._Tag_FK = value;
					this.SendPropertyChanged("Tag_FK");
					this.OnTag_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Object_FK
		{
			get
			{
				return this._Object_FK;
			}
			set
			{
				if ((this._Object_FK != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObject_FKChanging(value);
					this.SendPropertyChanging();
					this._Object_FK = value;
					this.SendPropertyChanged("Object_FK");
					this.OnObject_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_X_Tag", Storage="_Object", ThisKey="Object_FK", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Object_X_Tags.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Object_X_Tags.Add(this);
						this._Object_FK = value.ObjectID;
					}
					else
					{
						this._Object_FK = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Object_X_Tag", Storage="_Tag", ThisKey="Tag_FK", OtherKey="ID", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.Object_X_Tags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.Object_X_Tags.Add(this);
						this._Tag_FK = value.ID;
					}
					else
					{
						this._Tag_FK = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tags_X_Content")]
	public partial class Tags_X_Content : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Tag_FK;
		
		private int _Content_FK;
		
		private EntityRef<Tag> _Tag;
		
		private EntityRef<Content> _Content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTag_FKChanging(int value);
    partial void OnTag_FKChanged();
    partial void OnContent_FKChanging(int value);
    partial void OnContent_FKChanged();
    #endregion
		
		public Tags_X_Content()
		{
			this._Tag = default(EntityRef<Tag>);
			this._Content = default(EntityRef<Content>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag_FK", DbType="Int NOT NULL")]
		public int Tag_FK
		{
			get
			{
				return this._Tag_FK;
			}
			set
			{
				if ((this._Tag_FK != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTag_FKChanging(value);
					this.SendPropertyChanging();
					this._Tag_FK = value;
					this.SendPropertyChanged("Tag_FK");
					this.OnTag_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content_FK", DbType="Int NOT NULL")]
		public int Content_FK
		{
			get
			{
				return this._Content_FK;
			}
			set
			{
				if ((this._Content_FK != value))
				{
					if (this._Content.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContent_FKChanging(value);
					this.SendPropertyChanging();
					this._Content_FK = value;
					this.SendPropertyChanged("Content_FK");
					this.OnContent_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Tags_X_Content", Storage="_Tag", ThisKey="Tag_FK", OtherKey="ID", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.Tags_X_Contents.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.Tags_X_Contents.Add(this);
						this._Tag_FK = value.ID;
					}
					else
					{
						this._Tag_FK = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Content_Tags_X_Content", Storage="_Content", ThisKey="Content_FK", OtherKey="ID", IsForeignKey=true)]
		public Content Content
		{
			get
			{
				return this._Content.Entity;
			}
			set
			{
				Content previousValue = this._Content.Entity;
				if (((previousValue != value) 
							|| (this._Content.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Content.Entity = null;
						previousValue.Tags_X_Contents.Remove(this);
					}
					this._Content.Entity = value;
					if ((value != null))
					{
						value.Tags_X_Contents.Add(this);
						this._Content_FK = value.ID;
					}
					else
					{
						this._Content_FK = default(int);
					}
					this.SendPropertyChanged("Content");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentTypes")]
	public partial class ContentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _HasFile;
		
		private int _SiteID;
		
		private EntitySet<Content> _Contents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasFileChanging(bool value);
    partial void OnHasFileChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    #endregion
		
		public ContentType()
		{
			this._Contents = new EntitySet<Content>(new Action<Content>(this.attach_Contents), new Action<Content>(this.detach_Contents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFile", DbType="Bit NOT NULL")]
		public bool HasFile
		{
			get
			{
				return this._HasFile;
			}
			set
			{
				if ((this._HasFile != value))
				{
					this.OnHasFileChanging(value);
					this.SendPropertyChanging();
					this._HasFile = value;
					this.SendPropertyChanged("HasFile");
					this.OnHasFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentType_Content", Storage="_Contents", ThisKey="ID", OtherKey="ContentType_FK")]
		public EntitySet<Content> Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				this._Contents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contents(Content entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = this;
		}
		
		private void detach_Contents(Content entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Content")]
	public partial class Content : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private string _HtmlContent;
		
		private string _FileName;
		
		private int _ContentType_FK;
		
		private int _SiteID;
		
		private System.DateTime _DateAdded;
		
		private string _SearchWords;
		
		private EntitySet<Tags_X_Content> _Tags_X_Contents;
		
		private EntityRef<ContentType> _ContentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHtmlContentChanging(string value);
    partial void OnHtmlContentChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnContentType_FKChanging(int value);
    partial void OnContentType_FKChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnSearchWordsChanging(string value);
    partial void OnSearchWordsChanged();
    #endregion
		
		public Content()
		{
			this._Tags_X_Contents = new EntitySet<Tags_X_Content>(new Action<Tags_X_Content>(this.attach_Tags_X_Contents), new Action<Tags_X_Content>(this.detach_Tags_X_Contents));
			this._ContentType = default(EntityRef<ContentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlContent", DbType="NVarChar(MAX)")]
		public string HtmlContent
		{
			get
			{
				return this._HtmlContent;
			}
			set
			{
				if ((this._HtmlContent != value))
				{
					this.OnHtmlContentChanging(value);
					this.SendPropertyChanging();
					this._HtmlContent = value;
					this.SendPropertyChanged("HtmlContent");
					this.OnHtmlContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType_FK", DbType="Int NOT NULL")]
		public int ContentType_FK
		{
			get
			{
				return this._ContentType_FK;
			}
			set
			{
				if ((this._ContentType_FK != value))
				{
					if (this._ContentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentType_FKChanging(value);
					this.SendPropertyChanging();
					this._ContentType_FK = value;
					this.SendPropertyChanged("ContentType_FK");
					this.OnContentType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWords", DbType="NVarChar(MAX)")]
		public string SearchWords
		{
			get
			{
				return this._SearchWords;
			}
			set
			{
				if ((this._SearchWords != value))
				{
					this.OnSearchWordsChanging(value);
					this.SendPropertyChanging();
					this._SearchWords = value;
					this.SendPropertyChanged("SearchWords");
					this.OnSearchWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Content_Tags_X_Content", Storage="_Tags_X_Contents", ThisKey="ID", OtherKey="Content_FK")]
		public EntitySet<Tags_X_Content> Tags_X_Contents
		{
			get
			{
				return this._Tags_X_Contents;
			}
			set
			{
				this._Tags_X_Contents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentType_Content", Storage="_ContentType", ThisKey="ContentType_FK", OtherKey="ID", IsForeignKey=true)]
		public ContentType ContentType
		{
			get
			{
				return this._ContentType.Entity;
			}
			set
			{
				ContentType previousValue = this._ContentType.Entity;
				if (((previousValue != value) 
							|| (this._ContentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentType.Entity = null;
						previousValue.Contents.Remove(this);
					}
					this._ContentType.Entity = value;
					if ((value != null))
					{
						value.Contents.Add(this);
						this._ContentType_FK = value.ID;
					}
					else
					{
						this._ContentType_FK = default(int);
					}
					this.SendPropertyChanged("ContentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tags_X_Contents(Tags_X_Content entity)
		{
			this.SendPropertyChanging();
			entity.Content = this;
		}
		
		private void detach_Tags_X_Contents(Tags_X_Content entity)
		{
			this.SendPropertyChanging();
			entity.Content = null;
		}
	}
}
#pragma warning restore 1591

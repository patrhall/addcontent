#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIM.Business.AimBusiness.Mekpoint.Website.Mekpoint
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Mekpoint")]
	public partial class DataObjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgency(Agency instance);
    partial void UpdateAgency(Agency instance);
    partial void DeleteAgency(Agency instance);
    partial void InsertMagazineArticleType(MagazineArticleType instance);
    partial void UpdateMagazineArticleType(MagazineArticleType instance);
    partial void DeleteMagazineArticleType(MagazineArticleType instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCompanyCategory(CompanyCategory instance);
    partial void UpdateCompanyCategory(CompanyCategory instance);
    partial void DeleteCompanyCategory(CompanyCategory instance);
    partial void InsertMagazineArticle(MagazineArticle instance);
    partial void UpdateMagazineArticle(MagazineArticle instance);
    partial void DeleteMagazineArticle(MagazineArticle instance);
    partial void InsertMagazine(Magazine instance);
    partial void UpdateMagazine(Magazine instance);
    partial void DeleteMagazine(Magazine instance);
    #endregion
		
		public DataObjectsDataContext() : 
				base(global::AIM.Business.Properties.Settings.Default.MekpointConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agency> Agencies
		{
			get
			{
				return this.GetTable<Agency>();
			}
		}
		
		public System.Data.Linq.Table<MagazineArticleType> MagazineArticleTypes
		{
			get
			{
				return this.GetTable<MagazineArticleType>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<CompanyCategory> CompanyCategories
		{
			get
			{
				return this.GetTable<CompanyCategory>();
			}
		}
		
		public System.Data.Linq.Table<MagazineArticle> MagazineArticles
		{
			get
			{
				return this.GetTable<MagazineArticle>();
			}
		}
		
		public System.Data.Linq.Table<Magazine> Magazines
		{
			get
			{
				return this.GetTable<Magazine>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agency")]
	public partial class Agency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Country;
		
		private string _Description;
		
		private string _UrlText;
		
		private string _Url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUrlTextChanging(string value);
    partial void OnUrlTextChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public Agency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(200)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlText", DbType="VarChar(200)")]
		public string UrlText
		{
			get
			{
				return this._UrlText;
			}
			set
			{
				if ((this._UrlText != value))
				{
					this.OnUrlTextChanging(value);
					this.SendPropertyChanging();
					this._UrlText = value;
					this.SendPropertyChanged("UrlText");
					this.OnUrlTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MagazineArticleType")]
	public partial class MagazineArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<MagazineArticle> _MagazineArticles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public MagazineArticleType()
		{
			this._MagazineArticles = new EntitySet<MagazineArticle>(new Action<MagazineArticle>(this.attach_MagazineArticles), new Action<MagazineArticle>(this.detach_MagazineArticles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineArticleType_MagazineArticle", Storage="_MagazineArticles", ThisKey="Id", OtherKey="MagazineArticleType_FK")]
		public EntitySet<MagazineArticle> MagazineArticles
		{
			get
			{
				return this._MagazineArticles;
			}
			set
			{
				this._MagazineArticles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MagazineArticles(MagazineArticle entity)
		{
			this.SendPropertyChanging();
			entity.MagazineArticleType = this;
		}
		
		private void detach_MagazineArticles(MagazineArticle entity)
		{
			this.SendPropertyChanging();
			entity.MagazineArticleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Url;
		
		private string _Description;
		
		private System.Nullable<int> _CompanyCategory_FK;
		
		private System.Nullable<int> _LK;
		
		private System.Nullable<int> _EP;
		
		private System.Nullable<int> _CC;
		
		private EntityRef<CompanyCategory> _CompanyCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCompanyCategory_FKChanging(System.Nullable<int> value);
    partial void OnCompanyCategory_FKChanged();
    partial void OnLKChanging(System.Nullable<int> value);
    partial void OnLKChanged();
    partial void OnEPChanging(System.Nullable<int> value);
    partial void OnEPChanged();
    partial void OnCCChanging(System.Nullable<int> value);
    partial void OnCCChanged();
    #endregion
		
		public Company()
		{
			this._CompanyCategory = default(EntityRef<CompanyCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(280)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(1000)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCategory_FK", DbType="Int")]
		public System.Nullable<int> CompanyCategory_FK
		{
			get
			{
				return this._CompanyCategory_FK;
			}
			set
			{
				if ((this._CompanyCategory_FK != value))
				{
					if (this._CompanyCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyCategory_FKChanging(value);
					this.SendPropertyChanging();
					this._CompanyCategory_FK = value;
					this.SendPropertyChanged("CompanyCategory_FK");
					this.OnCompanyCategory_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LK", DbType="Int")]
		public System.Nullable<int> LK
		{
			get
			{
				return this._LK;
			}
			set
			{
				if ((this._LK != value))
				{
					this.OnLKChanging(value);
					this.SendPropertyChanging();
					this._LK = value;
					this.SendPropertyChanged("LK");
					this.OnLKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EP", DbType="Int")]
		public System.Nullable<int> EP
		{
			get
			{
				return this._EP;
			}
			set
			{
				if ((this._EP != value))
				{
					this.OnEPChanging(value);
					this.SendPropertyChanging();
					this._EP = value;
					this.SendPropertyChanged("EP");
					this.OnEPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC", DbType="Int")]
		public System.Nullable<int> CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this.OnCCChanging(value);
					this.SendPropertyChanging();
					this._CC = value;
					this.SendPropertyChanged("CC");
					this.OnCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyCategory_Company", Storage="_CompanyCategory", ThisKey="CompanyCategory_FK", OtherKey="Id", IsForeignKey=true)]
		public CompanyCategory CompanyCategory
		{
			get
			{
				return this._CompanyCategory.Entity;
			}
			set
			{
				CompanyCategory previousValue = this._CompanyCategory.Entity;
				if (((previousValue != value) 
							|| (this._CompanyCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompanyCategory.Entity = null;
						previousValue.Companies.Remove(this);
					}
					this._CompanyCategory.Entity = value;
					if ((value != null))
					{
						value.Companies.Add(this);
						this._CompanyCategory_FK = value.Id;
					}
					else
					{
						this._CompanyCategory_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompanyCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyCategory")]
	public partial class CompanyCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Company> _Companies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CompanyCategory()
		{
			this._Companies = new EntitySet<Company>(new Action<Company>(this.attach_Companies), new Action<Company>(this.detach_Companies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyCategory_Company", Storage="_Companies", ThisKey="Id", OtherKey="CompanyCategory_FK")]
		public EntitySet<Company> Companies
		{
			get
			{
				return this._Companies;
			}
			set
			{
				this._Companies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCategory = this;
		}
		
		private void detach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MagazineArticle")]
	public partial class MagazineArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ObjectId;
		
		private int _Magazine_FK;
		
		private int _MagazineArticleType_FK;
		
		private EntityRef<MagazineArticleType> _MagazineArticleType;
		
		private EntityRef<Magazine> _Magazine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(int value);
    partial void OnObjectIdChanged();
    partial void OnMagazine_FKChanging(int value);
    partial void OnMagazine_FKChanged();
    partial void OnMagazineArticleType_FKChanging(int value);
    partial void OnMagazineArticleType_FKChanged();
    #endregion
		
		public MagazineArticle()
		{
			this._MagazineArticleType = default(EntityRef<MagazineArticleType>);
			this._Magazine = default(EntityRef<Magazine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int NOT NULL")]
		public int ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Magazine_FK", DbType="Int NOT NULL")]
		public int Magazine_FK
		{
			get
			{
				return this._Magazine_FK;
			}
			set
			{
				if ((this._Magazine_FK != value))
				{
					if (this._Magazine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMagazine_FKChanging(value);
					this.SendPropertyChanging();
					this._Magazine_FK = value;
					this.SendPropertyChanged("Magazine_FK");
					this.OnMagazine_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazineArticleType_FK", DbType="Int NOT NULL")]
		public int MagazineArticleType_FK
		{
			get
			{
				return this._MagazineArticleType_FK;
			}
			set
			{
				if ((this._MagazineArticleType_FK != value))
				{
					if (this._MagazineArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMagazineArticleType_FKChanging(value);
					this.SendPropertyChanging();
					this._MagazineArticleType_FK = value;
					this.SendPropertyChanged("MagazineArticleType_FK");
					this.OnMagazineArticleType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineArticleType_MagazineArticle", Storage="_MagazineArticleType", ThisKey="MagazineArticleType_FK", OtherKey="Id", IsForeignKey=true)]
		public MagazineArticleType MagazineArticleType
		{
			get
			{
				return this._MagazineArticleType.Entity;
			}
			set
			{
				MagazineArticleType previousValue = this._MagazineArticleType.Entity;
				if (((previousValue != value) 
							|| (this._MagazineArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MagazineArticleType.Entity = null;
						previousValue.MagazineArticles.Remove(this);
					}
					this._MagazineArticleType.Entity = value;
					if ((value != null))
					{
						value.MagazineArticles.Add(this);
						this._MagazineArticleType_FK = value.Id;
					}
					else
					{
						this._MagazineArticleType_FK = default(int);
					}
					this.SendPropertyChanged("MagazineArticleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magazine_MagazineArticle", Storage="_Magazine", ThisKey="Magazine_FK", OtherKey="Id", IsForeignKey=true)]
		public Magazine Magazine
		{
			get
			{
				return this._Magazine.Entity;
			}
			set
			{
				Magazine previousValue = this._Magazine.Entity;
				if (((previousValue != value) 
							|| (this._Magazine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Magazine.Entity = null;
						previousValue.MagazineArticles.Remove(this);
					}
					this._Magazine.Entity = value;
					if ((value != null))
					{
						value.MagazineArticles.Add(this);
						this._Magazine_FK = value.Id;
					}
					else
					{
						this._Magazine_FK = default(int);
					}
					this.SendPropertyChanged("Magazine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Magazine")]
	public partial class Magazine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Headline;
		
		private string _Description;
		
		private string _Image;
		
		private string _Pdf;
		
		private string _Pdf2;
		
		private string _Pdf3;
		
		private System.DateTime _Date;
		
		private string _Html;
		
		private EntitySet<MagazineArticle> _MagazineArticles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHeadlineChanging(string value);
    partial void OnHeadlineChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnPdfChanging(string value);
    partial void OnPdfChanged();
    partial void OnPdf2Changing(string value);
    partial void OnPdf2Changed();
    partial void OnPdf3Changing(string value);
    partial void OnPdf3Changed();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnHtmlChanging(string value);
    partial void OnHtmlChanged();
    #endregion
		
		public Magazine()
		{
			this._MagazineArticles = new EntitySet<MagazineArticle>(new Action<MagazineArticle>(this.attach_MagazineArticles), new Action<MagazineArticle>(this.detach_MagazineArticles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Headline", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Headline
		{
			get
			{
				return this._Headline;
			}
			set
			{
				if ((this._Headline != value))
				{
					this.OnHeadlineChanging(value);
					this.SendPropertyChanging();
					this._Headline = value;
					this.SendPropertyChanged("Headline");
					this.OnHeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdf", DbType="NVarChar(150)")]
		public string Pdf
		{
			get
			{
				return this._Pdf;
			}
			set
			{
				if ((this._Pdf != value))
				{
					this.OnPdfChanging(value);
					this.SendPropertyChanging();
					this._Pdf = value;
					this.SendPropertyChanged("Pdf");
					this.OnPdfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdf2", DbType="NVarChar(150)")]
		public string Pdf2
		{
			get
			{
				return this._Pdf2;
			}
			set
			{
				if ((this._Pdf2 != value))
				{
					this.OnPdf2Changing(value);
					this.SendPropertyChanging();
					this._Pdf2 = value;
					this.SendPropertyChanged("Pdf2");
					this.OnPdf2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdf3", DbType="NVarChar(150)")]
		public string Pdf3
		{
			get
			{
				return this._Pdf3;
			}
			set
			{
				if ((this._Pdf3 != value))
				{
					this.OnPdf3Changing(value);
					this.SendPropertyChanging();
					this._Pdf3 = value;
					this.SendPropertyChanged("Pdf3");
					this.OnPdf3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Html", DbType="NVarChar(150)")]
		public string Html
		{
			get
			{
				return this._Html;
			}
			set
			{
				if ((this._Html != value))
				{
					this.OnHtmlChanging(value);
					this.SendPropertyChanging();
					this._Html = value;
					this.SendPropertyChanged("Html");
					this.OnHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Magazine_MagazineArticle", Storage="_MagazineArticles", ThisKey="Id", OtherKey="Magazine_FK")]
		public EntitySet<MagazineArticle> MagazineArticles
		{
			get
			{
				return this._MagazineArticles;
			}
			set
			{
				this._MagazineArticles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MagazineArticles(MagazineArticle entity)
		{
			this.SendPropertyChanging();
			entity.Magazine = this;
		}
		
		private void detach_MagazineArticles(MagazineArticle entity)
		{
			this.SendPropertyChanging();
			entity.Magazine = null;
		}
	}
}
#pragma warning restore 1591

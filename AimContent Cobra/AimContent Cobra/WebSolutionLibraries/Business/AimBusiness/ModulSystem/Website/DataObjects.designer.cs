#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIM.Business.AimBusiness.ModulSystem.Website
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ModulSystem")]
	public partial class DataObjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertCarAxle(CarAxle instance);
    partial void UpdateCarAxle(CarAxle instance);
    partial void DeleteCarAxle(CarAxle instance);
    partial void InsertCarModel(CarModel instance);
    partial void UpdateCarModel(CarModel instance);
    partial void DeleteCarModel(CarModel instance);
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    partial void InsertInterior_X_Article(Interior_X_Article instance);
    partial void UpdateInterior_X_Article(Interior_X_Article instance);
    partial void DeleteInterior_X_Article(Interior_X_Article instance);
    partial void InsertInterior_X_CarAxle(Interior_X_CarAxle instance);
    partial void UpdateInterior_X_CarAxle(Interior_X_CarAxle instance);
    partial void DeleteInterior_X_CarAxle(Interior_X_CarAxle instance);
    partial void InsertInteriorArticleType(InteriorArticleType instance);
    partial void UpdateInteriorArticleType(InteriorArticleType instance);
    partial void DeleteInteriorArticleType(InteriorArticleType instance);
    partial void InsertInterior(Interior instance);
    partial void UpdateInterior(Interior instance);
    partial void DeleteInterior(Interior instance);
    partial void InsertDimension(Dimension instance);
    partial void UpdateDimension(Dimension instance);
    partial void DeleteDimension(Dimension instance);
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertArticle_X_LanguageExclude(Article_X_LanguageExclude instance);
    partial void UpdateArticle_X_LanguageExclude(Article_X_LanguageExclude instance);
    partial void DeleteArticle_X_LanguageExclude(Article_X_LanguageExclude instance);
    partial void InsertArticle_X_Language(Article_X_Language instance);
    partial void UpdateArticle_X_Language(Article_X_Language instance);
    partial void DeleteArticle_X_Language(Article_X_Language instance);
    partial void InsertArticleGroup_X_Language(ArticleGroup_X_Language instance);
    partial void UpdateArticleGroup_X_Language(ArticleGroup_X_Language instance);
    partial void DeleteArticleGroup_X_Language(ArticleGroup_X_Language instance);
    partial void InsertDimension_X_Language(Dimension_X_Language instance);
    partial void UpdateDimension_X_Language(Dimension_X_Language instance);
    partial void DeleteDimension_X_Language(Dimension_X_Language instance);
    partial void InsertArticleGroup(ArticleGroup instance);
    partial void UpdateArticleGroup(ArticleGroup instance);
    partial void DeleteArticleGroup(ArticleGroup instance);
    partial void InsertArticleRelation(ArticleRelation instance);
    partial void UpdateArticleRelation(ArticleRelation instance);
    partial void DeleteArticleRelation(ArticleRelation instance);
    #endregion
		
		public DataObjectsDataContext() : 
				base(global::AIM.Business.Properties.Settings.Default.ModulSystemConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<CarAxle> CarAxles
		{
			get
			{
				return this.GetTable<CarAxle>();
			}
		}
		
		public System.Data.Linq.Table<CarModel> CarModels
		{
			get
			{
				return this.GetTable<CarModel>();
			}
		}
		
		public System.Data.Linq.Table<Car> Cars
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
		
		public System.Data.Linq.Table<Interior_X_Article> Interior_X_Articles
		{
			get
			{
				return this.GetTable<Interior_X_Article>();
			}
		}
		
		public System.Data.Linq.Table<Interior_X_CarAxle> Interior_X_CarAxles
		{
			get
			{
				return this.GetTable<Interior_X_CarAxle>();
			}
		}
		
		public System.Data.Linq.Table<InteriorArticleType> InteriorArticleTypes
		{
			get
			{
				return this.GetTable<InteriorArticleType>();
			}
		}
		
		public System.Data.Linq.Table<Interior> Interiors
		{
			get
			{
				return this.GetTable<Interior>();
			}
		}
		
		public System.Data.Linq.Table<Dimension> Dimensions
		{
			get
			{
				return this.GetTable<Dimension>();
			}
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<Article_X_LanguageExclude> Article_X_LanguageExcludes
		{
			get
			{
				return this.GetTable<Article_X_LanguageExclude>();
			}
		}
		
		public System.Data.Linq.Table<Article_X_Language> Article_X_Languages
		{
			get
			{
				return this.GetTable<Article_X_Language>();
			}
		}
		
		public System.Data.Linq.Table<ArticleGroup_X_Language> ArticleGroup_X_Languages
		{
			get
			{
				return this.GetTable<ArticleGroup_X_Language>();
			}
		}
		
		public System.Data.Linq.Table<Dimension_X_Language> Dimension_X_Languages
		{
			get
			{
				return this.GetTable<Dimension_X_Language>();
			}
		}
		
		public System.Data.Linq.Table<ArticleGroup> ArticleGroups
		{
			get
			{
				return this.GetTable<ArticleGroup>();
			}
		}
		
		public System.Data.Linq.Table<ArticleRelation> ArticleRelations
		{
			get
			{
				return this.GetTable<ArticleRelation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Languages")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Language1;
		
		private bool _IsDefault;
		
		private int _AimContentLanguageId;
		
		private EntitySet<Car> _Cars;
		
		private EntitySet<Interior> _Interiors;
		
		private EntitySet<Dimension> _Dimensions;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<Article_X_LanguageExclude> _Article_X_LanguageExcludes;
		
		private EntitySet<Article_X_Language> _Article_X_Languages;
		
		private EntitySet<ArticleGroup_X_Language> _ArticleGroup_X_Languages;
		
		private EntitySet<Dimension_X_Language> _Dimension_X_Languages;
		
		private EntitySet<ArticleGroup> _ArticleGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguage1Changing(string value);
    partial void OnLanguage1Changed();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnAimContentLanguageIdChanging(int value);
    partial void OnAimContentLanguageIdChanged();
    #endregion
		
		public Language()
		{
			this._Cars = new EntitySet<Car>(new Action<Car>(this.attach_Cars), new Action<Car>(this.detach_Cars));
			this._Interiors = new EntitySet<Interior>(new Action<Interior>(this.attach_Interiors), new Action<Interior>(this.detach_Interiors));
			this._Dimensions = new EntitySet<Dimension>(new Action<Dimension>(this.attach_Dimensions), new Action<Dimension>(this.detach_Dimensions));
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._Article_X_LanguageExcludes = new EntitySet<Article_X_LanguageExclude>(new Action<Article_X_LanguageExclude>(this.attach_Article_X_LanguageExcludes), new Action<Article_X_LanguageExclude>(this.detach_Article_X_LanguageExcludes));
			this._Article_X_Languages = new EntitySet<Article_X_Language>(new Action<Article_X_Language>(this.attach_Article_X_Languages), new Action<Article_X_Language>(this.detach_Article_X_Languages));
			this._ArticleGroup_X_Languages = new EntitySet<ArticleGroup_X_Language>(new Action<ArticleGroup_X_Language>(this.attach_ArticleGroup_X_Languages), new Action<ArticleGroup_X_Language>(this.detach_ArticleGroup_X_Languages));
			this._Dimension_X_Languages = new EntitySet<Dimension_X_Language>(new Action<Dimension_X_Language>(this.attach_Dimension_X_Languages), new Action<Dimension_X_Language>(this.detach_Dimension_X_Languages));
			this._ArticleGroups = new EntitySet<ArticleGroup>(new Action<ArticleGroup>(this.attach_ArticleGroups), new Action<ArticleGroup>(this.detach_ArticleGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Language", Storage="_Language1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Language1
		{
			get
			{
				return this._Language1;
			}
			set
			{
				if ((this._Language1 != value))
				{
					this.OnLanguage1Changing(value);
					this.SendPropertyChanging();
					this._Language1 = value;
					this.SendPropertyChanged("Language1");
					this.OnLanguage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimContentLanguageId", DbType="Int NOT NULL")]
		public int AimContentLanguageId
		{
			get
			{
				return this._AimContentLanguageId;
			}
			set
			{
				if ((this._AimContentLanguageId != value))
				{
					this.OnAimContentLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._AimContentLanguageId = value;
					this.SendPropertyChanged("AimContentLanguageId");
					this.OnAimContentLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Car", Storage="_Cars", ThisKey="Id", OtherKey="Language_FK")]
		public EntitySet<Car> Cars
		{
			get
			{
				return this._Cars;
			}
			set
			{
				this._Cars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Interior", Storage="_Interiors", ThisKey="Id", OtherKey="Language_FK")]
		public EntitySet<Interior> Interiors
		{
			get
			{
				return this._Interiors;
			}
			set
			{
				this._Interiors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Dimension", Storage="_Dimensions", ThisKey="Id", OtherKey="Language_FK")]
		public EntitySet<Dimension> Dimensions
		{
			get
			{
				return this._Dimensions;
			}
			set
			{
				this._Dimensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Article", Storage="_Articles", ThisKey="Id", OtherKey="Language_FK")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Article_X_LanguageExclude", Storage="_Article_X_LanguageExcludes", ThisKey="Id", OtherKey="Language_FK")]
		public EntitySet<Article_X_LanguageExclude> Article_X_LanguageExcludes
		{
			get
			{
				return this._Article_X_LanguageExcludes;
			}
			set
			{
				this._Article_X_LanguageExcludes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Article_X_Language", Storage="_Article_X_Languages", ThisKey="Id", OtherKey="Language_FK")]
		public EntitySet<Article_X_Language> Article_X_Languages
		{
			get
			{
				return this._Article_X_Languages;
			}
			set
			{
				this._Article_X_Languages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ArticleGroup_X_Language", Storage="_ArticleGroup_X_Languages", ThisKey="Id", OtherKey="Language_FK")]
		public EntitySet<ArticleGroup_X_Language> ArticleGroup_X_Languages
		{
			get
			{
				return this._ArticleGroup_X_Languages;
			}
			set
			{
				this._ArticleGroup_X_Languages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Dimension_X_Language", Storage="_Dimension_X_Languages", ThisKey="Id", OtherKey="Language_FK")]
		public EntitySet<Dimension_X_Language> Dimension_X_Languages
		{
			get
			{
				return this._Dimension_X_Languages;
			}
			set
			{
				this._Dimension_X_Languages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ArticleGroup", Storage="_ArticleGroups", ThisKey="Id", OtherKey="Language_FK")]
		public EntitySet<ArticleGroup> ArticleGroups
		{
			get
			{
				return this._ArticleGroups;
			}
			set
			{
				this._ArticleGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cars(Car entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Cars(Car entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Interiors(Interior entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Interiors(Interior entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Dimensions(Dimension entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Dimensions(Dimension entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Article_X_LanguageExcludes(Article_X_LanguageExclude entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Article_X_LanguageExcludes(Article_X_LanguageExclude entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Article_X_Languages(Article_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Article_X_Languages(Article_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_ArticleGroup_X_Languages(ArticleGroup_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_ArticleGroup_X_Languages(ArticleGroup_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Dimension_X_Languages(Dimension_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Dimension_X_Languages(Dimension_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_ArticleGroups(ArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_ArticleGroups(ArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarAxles")]
	public partial class CarAxle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CarModel_FK;
		
		private string _Name;
		
		private EntitySet<Interior_X_Article> _Interior_X_Articles;
		
		private EntitySet<Interior_X_CarAxle> _Interior_X_CarAxles;
		
		private EntityRef<CarModel> _CarModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCarModel_FKChanging(int value);
    partial void OnCarModel_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CarAxle()
		{
			this._Interior_X_Articles = new EntitySet<Interior_X_Article>(new Action<Interior_X_Article>(this.attach_Interior_X_Articles), new Action<Interior_X_Article>(this.detach_Interior_X_Articles));
			this._Interior_X_CarAxles = new EntitySet<Interior_X_CarAxle>(new Action<Interior_X_CarAxle>(this.attach_Interior_X_CarAxles), new Action<Interior_X_CarAxle>(this.detach_Interior_X_CarAxles));
			this._CarModel = default(EntityRef<CarModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarModel_FK", DbType="Int NOT NULL")]
		public int CarModel_FK
		{
			get
			{
				return this._CarModel_FK;
			}
			set
			{
				if ((this._CarModel_FK != value))
				{
					if (this._CarModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarModel_FKChanging(value);
					this.SendPropertyChanging();
					this._CarModel_FK = value;
					this.SendPropertyChanged("CarModel_FK");
					this.OnCarModel_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarAxle_Interior_X_Article", Storage="_Interior_X_Articles", ThisKey="Id", OtherKey="CarAxle_FK")]
		public EntitySet<Interior_X_Article> Interior_X_Articles
		{
			get
			{
				return this._Interior_X_Articles;
			}
			set
			{
				this._Interior_X_Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarAxle_Interior_X_CarAxle", Storage="_Interior_X_CarAxles", ThisKey="Id", OtherKey="CarAxle_FK")]
		public EntitySet<Interior_X_CarAxle> Interior_X_CarAxles
		{
			get
			{
				return this._Interior_X_CarAxles;
			}
			set
			{
				this._Interior_X_CarAxles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarModel_CarAxle", Storage="_CarModel", ThisKey="CarModel_FK", OtherKey="Id", IsForeignKey=true)]
		public CarModel CarModel
		{
			get
			{
				return this._CarModel.Entity;
			}
			set
			{
				CarModel previousValue = this._CarModel.Entity;
				if (((previousValue != value) 
							|| (this._CarModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarModel.Entity = null;
						previousValue.CarAxles.Remove(this);
					}
					this._CarModel.Entity = value;
					if ((value != null))
					{
						value.CarAxles.Add(this);
						this._CarModel_FK = value.Id;
					}
					else
					{
						this._CarModel_FK = default(int);
					}
					this.SendPropertyChanged("CarModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interior_X_Articles(Interior_X_Article entity)
		{
			this.SendPropertyChanging();
			entity.CarAxle = this;
		}
		
		private void detach_Interior_X_Articles(Interior_X_Article entity)
		{
			this.SendPropertyChanging();
			entity.CarAxle = null;
		}
		
		private void attach_Interior_X_CarAxles(Interior_X_CarAxle entity)
		{
			this.SendPropertyChanging();
			entity.CarAxle = this;
		}
		
		private void detach_Interior_X_CarAxles(Interior_X_CarAxle entity)
		{
			this.SendPropertyChanging();
			entity.CarAxle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarModels")]
	public partial class CarModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Car_FK;
		
		private string _Name;
		
		private EntitySet<CarAxle> _CarAxles;
		
		private EntityRef<Car> _Car;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCar_FKChanging(int value);
    partial void OnCar_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CarModel()
		{
			this._CarAxles = new EntitySet<CarAxle>(new Action<CarAxle>(this.attach_CarAxles), new Action<CarAxle>(this.detach_CarAxles));
			this._Car = default(EntityRef<Car>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car_FK", DbType="Int NOT NULL")]
		public int Car_FK
		{
			get
			{
				return this._Car_FK;
			}
			set
			{
				if ((this._Car_FK != value))
				{
					if (this._Car.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCar_FKChanging(value);
					this.SendPropertyChanging();
					this._Car_FK = value;
					this.SendPropertyChanged("Car_FK");
					this.OnCar_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarModel_CarAxle", Storage="_CarAxles", ThisKey="Id", OtherKey="CarModel_FK")]
		public EntitySet<CarAxle> CarAxles
		{
			get
			{
				return this._CarAxles;
			}
			set
			{
				this._CarAxles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CarModel", Storage="_Car", ThisKey="Car_FK", OtherKey="Id", IsForeignKey=true)]
		public Car Car
		{
			get
			{
				return this._Car.Entity;
			}
			set
			{
				Car previousValue = this._Car.Entity;
				if (((previousValue != value) 
							|| (this._Car.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car.Entity = null;
						previousValue.CarModels.Remove(this);
					}
					this._Car.Entity = value;
					if ((value != null))
					{
						value.CarModels.Add(this);
						this._Car_FK = value.Id;
					}
					else
					{
						this._Car_FK = default(int);
					}
					this.SendPropertyChanged("Car");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarAxles(CarAxle entity)
		{
			this.SendPropertyChanging();
			entity.CarModel = this;
		}
		
		private void detach_CarAxles(CarAxle entity)
		{
			this.SendPropertyChanging();
			entity.CarModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cars")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Language_FK;
		
		private string _Name;
		
		private EntitySet<CarModel> _CarModels;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguage_FKChanging(int value);
    partial void OnLanguage_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Car()
		{
			this._CarModels = new EntitySet<CarModel>(new Action<CarModel>(this.attach_CarModels), new Action<CarModel>(this.detach_CarModels));
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int NOT NULL")]
		public int Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CarModel", Storage="_CarModels", ThisKey="Id", OtherKey="Car_FK")]
		public EntitySet<CarModel> CarModels
		{
			get
			{
				return this._CarModels;
			}
			set
			{
				this._CarModels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Car", Storage="_Language", ThisKey="Language_FK", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Cars.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Cars.Add(this);
						this._Language_FK = value.Id;
					}
					else
					{
						this._Language_FK = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarModels(CarModel entity)
		{
			this.SendPropertyChanging();
			entity.Car = this;
		}
		
		private void detach_CarModels(CarModel entity)
		{
			this.SendPropertyChanging();
			entity.Car = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Interior_X_Article")]
	public partial class Interior_X_Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Interior_FK;
		
		private System.Nullable<int> _CarAxle_FK;
		
		private int _InteriorArticleType_FK;
		
		private string _ArticleNumber;
		
		private int _NumberOfArticles;
		
		private EntityRef<CarAxle> _CarAxle;
		
		private EntityRef<InteriorArticleType> _InteriorArticleType;
		
		private EntityRef<Interior> _Interior;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInterior_FKChanging(System.Nullable<int> value);
    partial void OnInterior_FKChanged();
    partial void OnCarAxle_FKChanging(System.Nullable<int> value);
    partial void OnCarAxle_FKChanged();
    partial void OnInteriorArticleType_FKChanging(int value);
    partial void OnInteriorArticleType_FKChanged();
    partial void OnArticleNumberChanging(string value);
    partial void OnArticleNumberChanged();
    partial void OnNumberOfArticlesChanging(int value);
    partial void OnNumberOfArticlesChanged();
    #endregion
		
		public Interior_X_Article()
		{
			this._CarAxle = default(EntityRef<CarAxle>);
			this._InteriorArticleType = default(EntityRef<InteriorArticleType>);
			this._Interior = default(EntityRef<Interior>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interior_FK", DbType="Int")]
		public System.Nullable<int> Interior_FK
		{
			get
			{
				return this._Interior_FK;
			}
			set
			{
				if ((this._Interior_FK != value))
				{
					if (this._Interior.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterior_FKChanging(value);
					this.SendPropertyChanging();
					this._Interior_FK = value;
					this.SendPropertyChanged("Interior_FK");
					this.OnInterior_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarAxle_FK", DbType="Int")]
		public System.Nullable<int> CarAxle_FK
		{
			get
			{
				return this._CarAxle_FK;
			}
			set
			{
				if ((this._CarAxle_FK != value))
				{
					if (this._CarAxle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarAxle_FKChanging(value);
					this.SendPropertyChanging();
					this._CarAxle_FK = value;
					this.SendPropertyChanged("CarAxle_FK");
					this.OnCarAxle_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorArticleType_FK", DbType="Int NOT NULL")]
		public int InteriorArticleType_FK
		{
			get
			{
				return this._InteriorArticleType_FK;
			}
			set
			{
				if ((this._InteriorArticleType_FK != value))
				{
					if (this._InteriorArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInteriorArticleType_FKChanging(value);
					this.SendPropertyChanging();
					this._InteriorArticleType_FK = value;
					this.SendPropertyChanged("InteriorArticleType_FK");
					this.OnInteriorArticleType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ArticleNumber
		{
			get
			{
				return this._ArticleNumber;
			}
			set
			{
				if ((this._ArticleNumber != value))
				{
					this.OnArticleNumberChanging(value);
					this.SendPropertyChanging();
					this._ArticleNumber = value;
					this.SendPropertyChanged("ArticleNumber");
					this.OnArticleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfArticles", DbType="Int NOT NULL")]
		public int NumberOfArticles
		{
			get
			{
				return this._NumberOfArticles;
			}
			set
			{
				if ((this._NumberOfArticles != value))
				{
					this.OnNumberOfArticlesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfArticles = value;
					this.SendPropertyChanged("NumberOfArticles");
					this.OnNumberOfArticlesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarAxle_Interior_X_Article", Storage="_CarAxle", ThisKey="CarAxle_FK", OtherKey="Id", IsForeignKey=true)]
		public CarAxle CarAxle
		{
			get
			{
				return this._CarAxle.Entity;
			}
			set
			{
				CarAxle previousValue = this._CarAxle.Entity;
				if (((previousValue != value) 
							|| (this._CarAxle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarAxle.Entity = null;
						previousValue.Interior_X_Articles.Remove(this);
					}
					this._CarAxle.Entity = value;
					if ((value != null))
					{
						value.Interior_X_Articles.Add(this);
						this._CarAxle_FK = value.Id;
					}
					else
					{
						this._CarAxle_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("CarAxle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InteriorArticleType_Interior_X_Article", Storage="_InteriorArticleType", ThisKey="InteriorArticleType_FK", OtherKey="Id", IsForeignKey=true)]
		public InteriorArticleType InteriorArticleType
		{
			get
			{
				return this._InteriorArticleType.Entity;
			}
			set
			{
				InteriorArticleType previousValue = this._InteriorArticleType.Entity;
				if (((previousValue != value) 
							|| (this._InteriorArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InteriorArticleType.Entity = null;
						previousValue.Interior_X_Articles.Remove(this);
					}
					this._InteriorArticleType.Entity = value;
					if ((value != null))
					{
						value.Interior_X_Articles.Add(this);
						this._InteriorArticleType_FK = value.Id;
					}
					else
					{
						this._InteriorArticleType_FK = default(int);
					}
					this.SendPropertyChanged("InteriorArticleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Interior_Interior_X_Article", Storage="_Interior", ThisKey="Interior_FK", OtherKey="Id", IsForeignKey=true)]
		public Interior Interior
		{
			get
			{
				return this._Interior.Entity;
			}
			set
			{
				Interior previousValue = this._Interior.Entity;
				if (((previousValue != value) 
							|| (this._Interior.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Interior.Entity = null;
						previousValue.Interior_X_Articles.Remove(this);
					}
					this._Interior.Entity = value;
					if ((value != null))
					{
						value.Interior_X_Articles.Add(this);
						this._Interior_FK = value.Id;
					}
					else
					{
						this._Interior_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Interior");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Interior_X_CarAxle")]
	public partial class Interior_X_CarAxle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Interior_FK;
		
		private int _CarAxle_FK;
		
		private System.Nullable<int> _Sort;
		
		private EntityRef<CarAxle> _CarAxle;
		
		private EntityRef<Interior> _Interior;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInterior_FKChanging(int value);
    partial void OnInterior_FKChanged();
    partial void OnCarAxle_FKChanging(int value);
    partial void OnCarAxle_FKChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    #endregion
		
		public Interior_X_CarAxle()
		{
			this._CarAxle = default(EntityRef<CarAxle>);
			this._Interior = default(EntityRef<Interior>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interior_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Interior_FK
		{
			get
			{
				return this._Interior_FK;
			}
			set
			{
				if ((this._Interior_FK != value))
				{
					if (this._Interior.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterior_FKChanging(value);
					this.SendPropertyChanging();
					this._Interior_FK = value;
					this.SendPropertyChanged("Interior_FK");
					this.OnInterior_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarAxle_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CarAxle_FK
		{
			get
			{
				return this._CarAxle_FK;
			}
			set
			{
				if ((this._CarAxle_FK != value))
				{
					if (this._CarAxle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarAxle_FKChanging(value);
					this.SendPropertyChanging();
					this._CarAxle_FK = value;
					this.SendPropertyChanged("CarAxle_FK");
					this.OnCarAxle_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarAxle_Interior_X_CarAxle", Storage="_CarAxle", ThisKey="CarAxle_FK", OtherKey="Id", IsForeignKey=true)]
		public CarAxle CarAxle
		{
			get
			{
				return this._CarAxle.Entity;
			}
			set
			{
				CarAxle previousValue = this._CarAxle.Entity;
				if (((previousValue != value) 
							|| (this._CarAxle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarAxle.Entity = null;
						previousValue.Interior_X_CarAxles.Remove(this);
					}
					this._CarAxle.Entity = value;
					if ((value != null))
					{
						value.Interior_X_CarAxles.Add(this);
						this._CarAxle_FK = value.Id;
					}
					else
					{
						this._CarAxle_FK = default(int);
					}
					this.SendPropertyChanged("CarAxle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Interior_Interior_X_CarAxle", Storage="_Interior", ThisKey="Interior_FK", OtherKey="Id", IsForeignKey=true)]
		public Interior Interior
		{
			get
			{
				return this._Interior.Entity;
			}
			set
			{
				Interior previousValue = this._Interior.Entity;
				if (((previousValue != value) 
							|| (this._Interior.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Interior.Entity = null;
						previousValue.Interior_X_CarAxles.Remove(this);
					}
					this._Interior.Entity = value;
					if ((value != null))
					{
						value.Interior_X_CarAxles.Add(this);
						this._Interior_FK = value.Id;
					}
					else
					{
						this._Interior_FK = default(int);
					}
					this.SendPropertyChanged("Interior");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InteriorArticleTypes")]
	public partial class InteriorArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ShortName;
		
		private EntitySet<Interior_X_Article> _Interior_X_Articles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public InteriorArticleType()
		{
			this._Interior_X_Articles = new EntitySet<Interior_X_Article>(new Action<Interior_X_Article>(this.attach_Interior_X_Articles), new Action<Interior_X_Article>(this.detach_Interior_X_Articles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InteriorArticleType_Interior_X_Article", Storage="_Interior_X_Articles", ThisKey="Id", OtherKey="InteriorArticleType_FK")]
		public EntitySet<Interior_X_Article> Interior_X_Articles
		{
			get
			{
				return this._Interior_X_Articles;
			}
			set
			{
				this._Interior_X_Articles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interior_X_Articles(Interior_X_Article entity)
		{
			this.SendPropertyChanging();
			entity.InteriorArticleType = this;
		}
		
		private void detach_Interior_X_Articles(Interior_X_Article entity)
		{
			this.SendPropertyChanging();
			entity.InteriorArticleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Interiors")]
	public partial class Interior : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Language_FK;
		
		private string _InteriorNumber;
		
		private string _Name;
		
		private string _Description;
		
		private string _Width;
		
		private string _Height;
		
		private string _Depth;
		
		private string _Weight;
		
		private string _FittingInstructions;
		
		private string _Image;
		
		private int _SortOrder;
		
		private EntitySet<Interior_X_Article> _Interior_X_Articles;
		
		private EntitySet<Interior_X_CarAxle> _Interior_X_CarAxles;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguage_FKChanging(int value);
    partial void OnLanguage_FKChanged();
    partial void OnInteriorNumberChanging(string value);
    partial void OnInteriorNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWidthChanging(string value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(string value);
    partial void OnHeightChanged();
    partial void OnDepthChanging(string value);
    partial void OnDepthChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnFittingInstructionsChanging(string value);
    partial void OnFittingInstructionsChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Interior()
		{
			this._Interior_X_Articles = new EntitySet<Interior_X_Article>(new Action<Interior_X_Article>(this.attach_Interior_X_Articles), new Action<Interior_X_Article>(this.detach_Interior_X_Articles));
			this._Interior_X_CarAxles = new EntitySet<Interior_X_CarAxle>(new Action<Interior_X_CarAxle>(this.attach_Interior_X_CarAxles), new Action<Interior_X_CarAxle>(this.detach_Interior_X_CarAxles));
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int NOT NULL")]
		public int Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorNumber", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string InteriorNumber
		{
			get
			{
				return this._InteriorNumber;
			}
			set
			{
				if ((this._InteriorNumber != value))
				{
					this.OnInteriorNumberChanging(value);
					this.SendPropertyChanging();
					this._InteriorNumber = value;
					this.SendPropertyChanged("InteriorNumber");
					this.OnInteriorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="NVarChar(50)")]
		public string Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="NVarChar(50)")]
		public string Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depth", DbType="NVarChar(50)")]
		public string Depth
		{
			get
			{
				return this._Depth;
			}
			set
			{
				if ((this._Depth != value))
				{
					this.OnDepthChanging(value);
					this.SendPropertyChanging();
					this._Depth = value;
					this.SendPropertyChanged("Depth");
					this.OnDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FittingInstructions", DbType="NVarChar(300)")]
		public string FittingInstructions
		{
			get
			{
				return this._FittingInstructions;
			}
			set
			{
				if ((this._FittingInstructions != value))
				{
					this.OnFittingInstructionsChanging(value);
					this.SendPropertyChanging();
					this._FittingInstructions = value;
					this.SendPropertyChanged("FittingInstructions");
					this.OnFittingInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(300)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Interior_Interior_X_Article", Storage="_Interior_X_Articles", ThisKey="Id", OtherKey="Interior_FK")]
		public EntitySet<Interior_X_Article> Interior_X_Articles
		{
			get
			{
				return this._Interior_X_Articles;
			}
			set
			{
				this._Interior_X_Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Interior_Interior_X_CarAxle", Storage="_Interior_X_CarAxles", ThisKey="Id", OtherKey="Interior_FK")]
		public EntitySet<Interior_X_CarAxle> Interior_X_CarAxles
		{
			get
			{
				return this._Interior_X_CarAxles;
			}
			set
			{
				this._Interior_X_CarAxles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Interior", Storage="_Language", ThisKey="Language_FK", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Interiors.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Interiors.Add(this);
						this._Language_FK = value.Id;
					}
					else
					{
						this._Language_FK = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interior_X_Articles(Interior_X_Article entity)
		{
			this.SendPropertyChanging();
			entity.Interior = this;
		}
		
		private void detach_Interior_X_Articles(Interior_X_Article entity)
		{
			this.SendPropertyChanging();
			entity.Interior = null;
		}
		
		private void attach_Interior_X_CarAxles(Interior_X_CarAxle entity)
		{
			this.SendPropertyChanging();
			entity.Interior = this;
		}
		
		private void detach_Interior_X_CarAxles(Interior_X_CarAxle entity)
		{
			this.SendPropertyChanging();
			entity.Interior = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dimensions")]
	public partial class Dimension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Language_FK;
		
		private string _Name;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<Dimension_X_Language> _Dimension_X_Languages;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguage_FKChanging(int value);
    partial void OnLanguage_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Dimension()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._Dimension_X_Languages = new EntitySet<Dimension_X_Language>(new Action<Dimension_X_Language>(this.attach_Dimension_X_Languages), new Action<Dimension_X_Language>(this.detach_Dimension_X_Languages));
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int NOT NULL")]
		public int Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_Article", Storage="_Articles", ThisKey="Id", OtherKey="Dimension_FK")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_Dimension_X_Language", Storage="_Dimension_X_Languages", ThisKey="Id", OtherKey="Dimension_FK")]
		public EntitySet<Dimension_X_Language> Dimension_X_Languages
		{
			get
			{
				return this._Dimension_X_Languages;
			}
			set
			{
				this._Dimension_X_Languages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Dimension", Storage="_Language", ThisKey="Language_FK", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Dimensions.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Dimensions.Add(this);
						this._Language_FK = value.Id;
					}
					else
					{
						this._Language_FK = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Dimension = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Dimension = null;
		}
		
		private void attach_Dimension_X_Languages(Dimension_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Dimension = this;
		}
		
		private void detach_Dimension_X_Languages(Dimension_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Dimension = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Language_FK;
		
		private int _ArticleGroup_FK;
		
		private int _Dimension_FK;
		
		private string _ArticleNumber;
		
		private string _ImageName;
		
		private string _Width;
		
		private string _Depth;
		
		private string _Height;
		
		private string _Weight;
		
		private bool _IsPublic;
		
		private int _SortOrder;
		
		private string _InstallationInstructionName;
		
		private string _PreviewImageName;
		
		private string _ArticleName;
		
		private string _ArticleDescription;
		
		private EntitySet<Article_X_LanguageExclude> _Article_X_LanguageExcludes;
		
		private EntitySet<Article_X_Language> _Article_X_Languages;
		
		private EntitySet<ArticleRelation> _ArticleRelations;
		
		private EntityRef<Dimension> _Dimension;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<ArticleGroup> _ArticleGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguage_FKChanging(int value);
    partial void OnLanguage_FKChanged();
    partial void OnArticleGroup_FKChanging(int value);
    partial void OnArticleGroup_FKChanged();
    partial void OnDimension_FKChanging(int value);
    partial void OnDimension_FKChanged();
    partial void OnArticleNumberChanging(string value);
    partial void OnArticleNumberChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnWidthChanging(string value);
    partial void OnWidthChanged();
    partial void OnDepthChanging(string value);
    partial void OnDepthChanged();
    partial void OnHeightChanging(string value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnInstallationInstructionNameChanging(string value);
    partial void OnInstallationInstructionNameChanged();
    partial void OnPreviewImageNameChanging(string value);
    partial void OnPreviewImageNameChanged();
    partial void OnArticleNameChanging(string value);
    partial void OnArticleNameChanged();
    partial void OnArticleDescriptionChanging(string value);
    partial void OnArticleDescriptionChanged();
    #endregion
		
		public Article()
		{
			this._Article_X_LanguageExcludes = new EntitySet<Article_X_LanguageExclude>(new Action<Article_X_LanguageExclude>(this.attach_Article_X_LanguageExcludes), new Action<Article_X_LanguageExclude>(this.detach_Article_X_LanguageExcludes));
			this._Article_X_Languages = new EntitySet<Article_X_Language>(new Action<Article_X_Language>(this.attach_Article_X_Languages), new Action<Article_X_Language>(this.detach_Article_X_Languages));
			this._ArticleRelations = new EntitySet<ArticleRelation>(new Action<ArticleRelation>(this.attach_ArticleRelations), new Action<ArticleRelation>(this.detach_ArticleRelations));
			this._Dimension = default(EntityRef<Dimension>);
			this._Language = default(EntityRef<Language>);
			this._ArticleGroup = default(EntityRef<ArticleGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int NOT NULL")]
		public int Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroup_FK", DbType="Int NOT NULL")]
		public int ArticleGroup_FK
		{
			get
			{
				return this._ArticleGroup_FK;
			}
			set
			{
				if ((this._ArticleGroup_FK != value))
				{
					if (this._ArticleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleGroup_FKChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroup_FK = value;
					this.SendPropertyChanged("ArticleGroup_FK");
					this.OnArticleGroup_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimension_FK", DbType="Int NOT NULL")]
		public int Dimension_FK
		{
			get
			{
				return this._Dimension_FK;
			}
			set
			{
				if ((this._Dimension_FK != value))
				{
					if (this._Dimension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDimension_FKChanging(value);
					this.SendPropertyChanging();
					this._Dimension_FK = value;
					this.SendPropertyChanged("Dimension_FK");
					this.OnDimension_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ArticleNumber
		{
			get
			{
				return this._ArticleNumber;
			}
			set
			{
				if ((this._ArticleNumber != value))
				{
					this.OnArticleNumberChanging(value);
					this.SendPropertyChanging();
					this._ArticleNumber = value;
					this.SendPropertyChanged("ArticleNumber");
					this.OnArticleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(100)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depth", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Depth
		{
			get
			{
				return this._Depth;
			}
			set
			{
				if ((this._Depth != value))
				{
					this.OnDepthChanging(value);
					this.SendPropertyChanging();
					this._Depth = value;
					this.SendPropertyChanged("Depth");
					this.OnDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationInstructionName", DbType="NVarChar(400)")]
		public string InstallationInstructionName
		{
			get
			{
				return this._InstallationInstructionName;
			}
			set
			{
				if ((this._InstallationInstructionName != value))
				{
					this.OnInstallationInstructionNameChanging(value);
					this.SendPropertyChanging();
					this._InstallationInstructionName = value;
					this.SendPropertyChanged("InstallationInstructionName");
					this.OnInstallationInstructionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviewImageName", DbType="NVarChar(100)")]
		public string PreviewImageName
		{
			get
			{
				return this._PreviewImageName;
			}
			set
			{
				if ((this._PreviewImageName != value))
				{
					this.OnPreviewImageNameChanging(value);
					this.SendPropertyChanging();
					this._PreviewImageName = value;
					this.SendPropertyChanged("PreviewImageName");
					this.OnPreviewImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleName", DbType="NVarChar(200)")]
		public string ArticleName
		{
			get
			{
				return this._ArticleName;
			}
			set
			{
				if ((this._ArticleName != value))
				{
					this.OnArticleNameChanging(value);
					this.SendPropertyChanging();
					this._ArticleName = value;
					this.SendPropertyChanged("ArticleName");
					this.OnArticleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleDescription", DbType="NVarChar(MAX)")]
		public string ArticleDescription
		{
			get
			{
				return this._ArticleDescription;
			}
			set
			{
				if ((this._ArticleDescription != value))
				{
					this.OnArticleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ArticleDescription = value;
					this.SendPropertyChanged("ArticleDescription");
					this.OnArticleDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article_X_LanguageExclude", Storage="_Article_X_LanguageExcludes", ThisKey="Id", OtherKey="Article_FK")]
		public EntitySet<Article_X_LanguageExclude> Article_X_LanguageExcludes
		{
			get
			{
				return this._Article_X_LanguageExcludes;
			}
			set
			{
				this._Article_X_LanguageExcludes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article_X_Language", Storage="_Article_X_Languages", ThisKey="Id", OtherKey="Article_FK")]
		public EntitySet<Article_X_Language> Article_X_Languages
		{
			get
			{
				return this._Article_X_Languages;
			}
			set
			{
				this._Article_X_Languages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleRelation", Storage="_ArticleRelations", ThisKey="Id", OtherKey="Article_FK")]
		public EntitySet<ArticleRelation> ArticleRelations
		{
			get
			{
				return this._ArticleRelations;
			}
			set
			{
				this._ArticleRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_Article", Storage="_Dimension", ThisKey="Dimension_FK", OtherKey="Id", IsForeignKey=true)]
		public Dimension Dimension
		{
			get
			{
				return this._Dimension.Entity;
			}
			set
			{
				Dimension previousValue = this._Dimension.Entity;
				if (((previousValue != value) 
							|| (this._Dimension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dimension.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._Dimension.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._Dimension_FK = value.Id;
					}
					else
					{
						this._Dimension_FK = default(int);
					}
					this.SendPropertyChanged("Dimension");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Article", Storage="_Language", ThisKey="Language_FK", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._Language_FK = value.Id;
					}
					else
					{
						this._Language_FK = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleGroup_Article", Storage="_ArticleGroup", ThisKey="ArticleGroup_FK", OtherKey="Id", IsForeignKey=true)]
		public ArticleGroup ArticleGroup
		{
			get
			{
				return this._ArticleGroup.Entity;
			}
			set
			{
				ArticleGroup previousValue = this._ArticleGroup.Entity;
				if (((previousValue != value) 
							|| (this._ArticleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleGroup.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._ArticleGroup.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._ArticleGroup_FK = value.Id;
					}
					else
					{
						this._ArticleGroup_FK = default(int);
					}
					this.SendPropertyChanged("ArticleGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Article_X_LanguageExcludes(Article_X_LanguageExclude entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_Article_X_LanguageExcludes(Article_X_LanguageExclude entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_Article_X_Languages(Article_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_Article_X_Languages(Article_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_ArticleRelations(ArticleRelation entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_ArticleRelations(ArticleRelation entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article_X_LanguageExcludes")]
	public partial class Article_X_LanguageExclude : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Article_FK;
		
		private int _Language_FK;
		
		private EntityRef<Article> _Article;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticle_FKChanging(int value);
    partial void OnArticle_FKChanged();
    partial void OnLanguage_FKChanging(int value);
    partial void OnLanguage_FKChanged();
    #endregion
		
		public Article_X_LanguageExclude()
		{
			this._Article = default(EntityRef<Article>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Article_FK
		{
			get
			{
				return this._Article_FK;
			}
			set
			{
				if ((this._Article_FK != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticle_FKChanging(value);
					this.SendPropertyChanging();
					this._Article_FK = value;
					this.SendPropertyChanged("Article_FK");
					this.OnArticle_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article_X_LanguageExclude", Storage="_Article", ThisKey="Article_FK", OtherKey="Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.Article_X_LanguageExcludes.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.Article_X_LanguageExcludes.Add(this);
						this._Article_FK = value.Id;
					}
					else
					{
						this._Article_FK = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Article_X_LanguageExclude", Storage="_Language", ThisKey="Language_FK", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Article_X_LanguageExcludes.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Article_X_LanguageExcludes.Add(this);
						this._Language_FK = value.Id;
					}
					else
					{
						this._Language_FK = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article_X_Languages")]
	public partial class Article_X_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Article_FK;
		
		private int _Language_FK;
		
		private string _ArticleName;
		
		private string _ArticleDescription;
		
		private EntityRef<Article> _Article;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticle_FKChanging(int value);
    partial void OnArticle_FKChanged();
    partial void OnLanguage_FKChanging(int value);
    partial void OnLanguage_FKChanged();
    partial void OnArticleNameChanging(string value);
    partial void OnArticleNameChanged();
    partial void OnArticleDescriptionChanging(string value);
    partial void OnArticleDescriptionChanged();
    #endregion
		
		public Article_X_Language()
		{
			this._Article = default(EntityRef<Article>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Article_FK
		{
			get
			{
				return this._Article_FK;
			}
			set
			{
				if ((this._Article_FK != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticle_FKChanging(value);
					this.SendPropertyChanging();
					this._Article_FK = value;
					this.SendPropertyChanged("Article_FK");
					this.OnArticle_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleName", DbType="NVarChar(200)")]
		public string ArticleName
		{
			get
			{
				return this._ArticleName;
			}
			set
			{
				if ((this._ArticleName != value))
				{
					this.OnArticleNameChanging(value);
					this.SendPropertyChanging();
					this._ArticleName = value;
					this.SendPropertyChanged("ArticleName");
					this.OnArticleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleDescription", DbType="NVarChar(MAX)")]
		public string ArticleDescription
		{
			get
			{
				return this._ArticleDescription;
			}
			set
			{
				if ((this._ArticleDescription != value))
				{
					this.OnArticleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ArticleDescription = value;
					this.SendPropertyChanged("ArticleDescription");
					this.OnArticleDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Article_X_Language", Storage="_Article", ThisKey="Article_FK", OtherKey="Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.Article_X_Languages.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.Article_X_Languages.Add(this);
						this._Article_FK = value.Id;
					}
					else
					{
						this._Article_FK = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Article_X_Language", Storage="_Language", ThisKey="Language_FK", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Article_X_Languages.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Article_X_Languages.Add(this);
						this._Language_FK = value.Id;
					}
					else
					{
						this._Language_FK = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleGroup_X_Languages")]
	public partial class ArticleGroup_X_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Language_FK;
		
		private int _ArticleGroup_FK;
		
		private string _GroupName;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<ArticleGroup> _ArticleGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguage_FKChanging(int value);
    partial void OnLanguage_FKChanged();
    partial void OnArticleGroup_FKChanging(int value);
    partial void OnArticleGroup_FKChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public ArticleGroup_X_Language()
		{
			this._Language = default(EntityRef<Language>);
			this._ArticleGroup = default(EntityRef<ArticleGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroup_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ArticleGroup_FK
		{
			get
			{
				return this._ArticleGroup_FK;
			}
			set
			{
				if ((this._ArticleGroup_FK != value))
				{
					if (this._ArticleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleGroup_FKChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroup_FK = value;
					this.SendPropertyChanged("ArticleGroup_FK");
					this.OnArticleGroup_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ArticleGroup_X_Language", Storage="_Language", ThisKey="Language_FK", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.ArticleGroup_X_Languages.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.ArticleGroup_X_Languages.Add(this);
						this._Language_FK = value.Id;
					}
					else
					{
						this._Language_FK = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleGroup_ArticleGroup_X_Language", Storage="_ArticleGroup", ThisKey="ArticleGroup_FK", OtherKey="Id", IsForeignKey=true)]
		public ArticleGroup ArticleGroup
		{
			get
			{
				return this._ArticleGroup.Entity;
			}
			set
			{
				ArticleGroup previousValue = this._ArticleGroup.Entity;
				if (((previousValue != value) 
							|| (this._ArticleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleGroup.Entity = null;
						previousValue.ArticleGroup_X_Languages.Remove(this);
					}
					this._ArticleGroup.Entity = value;
					if ((value != null))
					{
						value.ArticleGroup_X_Languages.Add(this);
						this._ArticleGroup_FK = value.Id;
					}
					else
					{
						this._ArticleGroup_FK = default(int);
					}
					this.SendPropertyChanged("ArticleGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dimension_X_Language")]
	public partial class Dimension_X_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Language_FK;
		
		private int _Dimension_FK;
		
		private string _Name;
		
		private EntityRef<Dimension> _Dimension;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguage_FKChanging(int value);
    partial void OnLanguage_FKChanged();
    partial void OnDimension_FKChanging(int value);
    partial void OnDimension_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Dimension_X_Language()
		{
			this._Dimension = default(EntityRef<Dimension>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimension_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Dimension_FK
		{
			get
			{
				return this._Dimension_FK;
			}
			set
			{
				if ((this._Dimension_FK != value))
				{
					if (this._Dimension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDimension_FKChanging(value);
					this.SendPropertyChanging();
					this._Dimension_FK = value;
					this.SendPropertyChanged("Dimension_FK");
					this.OnDimension_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_Dimension_X_Language", Storage="_Dimension", ThisKey="Dimension_FK", OtherKey="Id", IsForeignKey=true)]
		public Dimension Dimension
		{
			get
			{
				return this._Dimension.Entity;
			}
			set
			{
				Dimension previousValue = this._Dimension.Entity;
				if (((previousValue != value) 
							|| (this._Dimension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dimension.Entity = null;
						previousValue.Dimension_X_Languages.Remove(this);
					}
					this._Dimension.Entity = value;
					if ((value != null))
					{
						value.Dimension_X_Languages.Add(this);
						this._Dimension_FK = value.Id;
					}
					else
					{
						this._Dimension_FK = default(int);
					}
					this.SendPropertyChanged("Dimension");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Dimension_X_Language", Storage="_Language", ThisKey="Language_FK", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Dimension_X_Languages.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Dimension_X_Languages.Add(this);
						this._Language_FK = value.Id;
					}
					else
					{
						this._Language_FK = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleGroups")]
	public partial class ArticleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Language_FK;
		
		private string _Url;
		
		private System.Nullable<int> _ArticleGroup_FK;
		
		private string _GroupName;
		
		private EntitySet<Article> _Articles;
		
		private EntitySet<ArticleGroup_X_Language> _ArticleGroup_X_Languages;
		
		private EntityRef<ArticleGroup> _ArticleGroup2;
		
		private EntityRef<ArticleGroup> _ArticleGroup1;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguage_FKChanging(System.Nullable<int> value);
    partial void OnLanguage_FKChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnArticleGroup_FKChanging(System.Nullable<int> value);
    partial void OnArticleGroup_FKChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public ArticleGroup()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._ArticleGroup_X_Languages = new EntitySet<ArticleGroup_X_Language>(new Action<ArticleGroup_X_Language>(this.attach_ArticleGroup_X_Languages), new Action<ArticleGroup_X_Language>(this.detach_ArticleGroup_X_Languages));
			this._ArticleGroup2 = default(EntityRef<ArticleGroup>);
			this._ArticleGroup1 = default(EntityRef<ArticleGroup>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._ArticleGroup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int")]
		public System.Nullable<int> Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroup_FK", DbType="Int")]
		public System.Nullable<int> ArticleGroup_FK
		{
			get
			{
				return this._ArticleGroup_FK;
			}
			set
			{
				if ((this._ArticleGroup_FK != value))
				{
					this.OnArticleGroup_FKChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroup_FK = value;
					this.SendPropertyChanged("ArticleGroup_FK");
					this.OnArticleGroup_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleGroup_Article", Storage="_Articles", ThisKey="Id", OtherKey="ArticleGroup_FK")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleGroup_ArticleGroup_X_Language", Storage="_ArticleGroup_X_Languages", ThisKey="Id", OtherKey="ArticleGroup_FK")]
		public EntitySet<ArticleGroup_X_Language> ArticleGroup_X_Languages
		{
			get
			{
				return this._ArticleGroup_X_Languages;
			}
			set
			{
				this._ArticleGroup_X_Languages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleGroup_ArticleGroup", Storage="_ArticleGroup2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public ArticleGroup ArticleGroup2
		{
			get
			{
				return this._ArticleGroup2.Entity;
			}
			set
			{
				ArticleGroup previousValue = this._ArticleGroup2.Entity;
				if (((previousValue != value) 
							|| (this._ArticleGroup2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleGroup2.Entity = null;
						previousValue.ArticleGroup1 = null;
					}
					this._ArticleGroup2.Entity = value;
					if ((value != null))
					{
						value.ArticleGroup1 = this;
					}
					this.SendPropertyChanged("ArticleGroup2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleGroup_ArticleGroup", Storage="_ArticleGroup1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public ArticleGroup ArticleGroup1
		{
			get
			{
				return this._ArticleGroup1.Entity;
			}
			set
			{
				ArticleGroup previousValue = this._ArticleGroup1.Entity;
				if (((previousValue != value) 
							|| (this._ArticleGroup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleGroup1.Entity = null;
						previousValue.ArticleGroup2 = null;
					}
					this._ArticleGroup1.Entity = value;
					if ((value != null))
					{
						value.ArticleGroup2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("ArticleGroup1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_ArticleGroup", Storage="_Language", ThisKey="Language_FK", OtherKey="Id", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.ArticleGroups.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.ArticleGroups.Add(this);
						this._Language_FK = value.Id;
					}
					else
					{
						this._Language_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleGroup = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleGroup = null;
		}
		
		private void attach_ArticleGroup_X_Languages(ArticleGroup_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.ArticleGroup = this;
		}
		
		private void detach_ArticleGroup_X_Languages(ArticleGroup_X_Language entity)
		{
			this.SendPropertyChanging();
			entity.ArticleGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleRelations")]
	public partial class ArticleRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Language_FK;
		
		private int _ParentArticle_FK;
		
		private bool _IsRelation;
		
		private int _PlaceHolderId;
		
		private System.Nullable<int> _Article_FK;
		
		private string _Text;
		
		private EntityRef<Article> _Article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguage_FKChanging(int value);
    partial void OnLanguage_FKChanged();
    partial void OnParentArticle_FKChanging(int value);
    partial void OnParentArticle_FKChanged();
    partial void OnIsRelationChanging(bool value);
    partial void OnIsRelationChanged();
    partial void OnPlaceHolderIdChanging(int value);
    partial void OnPlaceHolderIdChanged();
    partial void OnArticle_FKChanging(System.Nullable<int> value);
    partial void OnArticle_FKChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public ArticleRelation()
		{
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_FK", DbType="Int NOT NULL")]
		public int Language_FK
		{
			get
			{
				return this._Language_FK;
			}
			set
			{
				if ((this._Language_FK != value))
				{
					this.OnLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._Language_FK = value;
					this.SendPropertyChanged("Language_FK");
					this.OnLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentArticle_FK", DbType="Int NOT NULL")]
		public int ParentArticle_FK
		{
			get
			{
				return this._ParentArticle_FK;
			}
			set
			{
				if ((this._ParentArticle_FK != value))
				{
					this.OnParentArticle_FKChanging(value);
					this.SendPropertyChanging();
					this._ParentArticle_FK = value;
					this.SendPropertyChanged("ParentArticle_FK");
					this.OnParentArticle_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelation", DbType="Bit NOT NULL")]
		public bool IsRelation
		{
			get
			{
				return this._IsRelation;
			}
			set
			{
				if ((this._IsRelation != value))
				{
					this.OnIsRelationChanging(value);
					this.SendPropertyChanging();
					this._IsRelation = value;
					this.SendPropertyChanged("IsRelation");
					this.OnIsRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceHolderId", DbType="Int NOT NULL")]
		public int PlaceHolderId
		{
			get
			{
				return this._PlaceHolderId;
			}
			set
			{
				if ((this._PlaceHolderId != value))
				{
					this.OnPlaceHolderIdChanging(value);
					this.SendPropertyChanging();
					this._PlaceHolderId = value;
					this.SendPropertyChanged("PlaceHolderId");
					this.OnPlaceHolderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_FK", DbType="Int")]
		public System.Nullable<int> Article_FK
		{
			get
			{
				return this._Article_FK;
			}
			set
			{
				if ((this._Article_FK != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticle_FKChanging(value);
					this.SendPropertyChanging();
					this._Article_FK = value;
					this.SendPropertyChanged("Article_FK");
					this.OnArticle_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(30)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleRelation", Storage="_Article", ThisKey="Article_FK", OtherKey="Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.ArticleRelations.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.ArticleRelations.Add(this);
						this._Article_FK = value.Id;
					}
					else
					{
						this._Article_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIM.Business.AimCalendar
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aimit_OIS")]
	public partial class DataObjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCalendar(Calendar instance);
    partial void UpdateCalendar(Calendar instance);
    partial void DeleteCalendar(Calendar instance);
    partial void InsertCalendarGroup(CalendarGroup instance);
    partial void UpdateCalendarGroup(CalendarGroup instance);
    partial void DeleteCalendarGroup(CalendarGroup instance);
    partial void InsertCalendarTroopConnection(CalendarTroopConnection instance);
    partial void UpdateCalendarTroopConnection(CalendarTroopConnection instance);
    partial void DeleteCalendarTroopConnection(CalendarTroopConnection instance);
    partial void InsertOis_Troop(Ois_Troop instance);
    partial void UpdateOis_Troop(Ois_Troop instance);
    partial void DeleteOis_Troop(Ois_Troop instance);
    #endregion
		
		public DataObjectsDataContext() : 
				base(global::AIM.Business.Properties.Settings.Default.Aimit_OISConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Calendar> Calendars
		{
			get
			{
				return this.GetTable<Calendar>();
			}
		}
		
		public System.Data.Linq.Table<CalendarGroup> CalendarGroups
		{
			get
			{
				return this.GetTable<CalendarGroup>();
			}
		}
		
		public System.Data.Linq.Table<CalendarTroopConnection> CalendarTroopConnections
		{
			get
			{
				return this.GetTable<CalendarTroopConnection>();
			}
		}
		
		public System.Data.Linq.Table<Ois_Troop> Ois_Troops
		{
			get
			{
				return this.GetTable<Ois_Troop>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calendar")]
	public partial class Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CalendarID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Titel;
		
		private string _Description;
		
		private System.Nullable<int> _CalendarGroupID_FK;
		
		private bool _Show;
		
		private bool _isMarked;
		
		private string _Color;
		
		private EntitySet<CalendarTroopConnection> _CalendarTroopConnections;
		
		private EntityRef<CalendarGroup> _CalendarGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalendarIDChanging(int value);
    partial void OnCalendarIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTitelChanging(string value);
    partial void OnTitelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCalendarGroupID_FKChanging(System.Nullable<int> value);
    partial void OnCalendarGroupID_FKChanged();
    partial void OnShowChanging(bool value);
    partial void OnShowChanged();
    partial void OnisMarkedChanging(bool value);
    partial void OnisMarkedChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    #endregion
		
		public Calendar()
		{
			this._CalendarTroopConnections = new EntitySet<CalendarTroopConnection>(new Action<CalendarTroopConnection>(this.attach_CalendarTroopConnections), new Action<CalendarTroopConnection>(this.detach_CalendarTroopConnections));
			this._CalendarGroup = default(EntityRef<CalendarGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CalendarID
		{
			get
			{
				return this._CalendarID;
			}
			set
			{
				if ((this._CalendarID != value))
				{
					this.OnCalendarIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarID = value;
					this.SendPropertyChanged("CalendarID");
					this.OnCalendarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titel", DbType="NVarChar(100)")]
		public string Titel
		{
			get
			{
				return this._Titel;
			}
			set
			{
				if ((this._Titel != value))
				{
					this.OnTitelChanging(value);
					this.SendPropertyChanging();
					this._Titel = value;
					this.SendPropertyChanged("Titel");
					this.OnTitelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(300)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarGroupID_FK", DbType="Int")]
		public System.Nullable<int> CalendarGroupID_FK
		{
			get
			{
				return this._CalendarGroupID_FK;
			}
			set
			{
				if ((this._CalendarGroupID_FK != value))
				{
					if (this._CalendarGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalendarGroupID_FKChanging(value);
					this.SendPropertyChanging();
					this._CalendarGroupID_FK = value;
					this.SendPropertyChanged("CalendarGroupID_FK");
					this.OnCalendarGroupID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
		public bool Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMarked", DbType="Bit NOT NULL")]
		public bool isMarked
		{
			get
			{
				return this._isMarked;
			}
			set
			{
				if ((this._isMarked != value))
				{
					this.OnisMarkedChanging(value);
					this.SendPropertyChanging();
					this._isMarked = value;
					this.SendPropertyChanged("isMarked");
					this.OnisMarkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(15)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calendar_CalendarTroopConnection", Storage="_CalendarTroopConnections", ThisKey="CalendarID", OtherKey="CalendarID_FK")]
		public EntitySet<CalendarTroopConnection> CalendarTroopConnections
		{
			get
			{
				return this._CalendarTroopConnections;
			}
			set
			{
				this._CalendarTroopConnections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CalendarGroup_Calendar", Storage="_CalendarGroup", ThisKey="CalendarGroupID_FK", OtherKey="CalendarGroupID", IsForeignKey=true)]
		public CalendarGroup CalendarGroup
		{
			get
			{
				return this._CalendarGroup.Entity;
			}
			set
			{
				CalendarGroup previousValue = this._CalendarGroup.Entity;
				if (((previousValue != value) 
							|| (this._CalendarGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CalendarGroup.Entity = null;
						previousValue.Calendars.Remove(this);
					}
					this._CalendarGroup.Entity = value;
					if ((value != null))
					{
						value.Calendars.Add(this);
						this._CalendarGroupID_FK = value.CalendarGroupID;
					}
					else
					{
						this._CalendarGroupID_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("CalendarGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CalendarTroopConnections(CalendarTroopConnection entity)
		{
			this.SendPropertyChanging();
			entity.Calendar = this;
		}
		
		private void detach_CalendarTroopConnections(CalendarTroopConnection entity)
		{
			this.SendPropertyChanging();
			entity.Calendar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalendarGroups")]
	public partial class CalendarGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CalendarGroupID;
		
		private System.Nullable<int> _SiteID_FK;
		
		private string _Name;
		
		private EntitySet<Calendar> _Calendars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalendarGroupIDChanging(int value);
    partial void OnCalendarGroupIDChanged();
    partial void OnSiteID_FKChanging(System.Nullable<int> value);
    partial void OnSiteID_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CalendarGroup()
		{
			this._Calendars = new EntitySet<Calendar>(new Action<Calendar>(this.attach_Calendars), new Action<Calendar>(this.detach_Calendars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CalendarGroupID
		{
			get
			{
				return this._CalendarGroupID;
			}
			set
			{
				if ((this._CalendarGroupID != value))
				{
					this.OnCalendarGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarGroupID = value;
					this.SendPropertyChanged("CalendarGroupID");
					this.OnCalendarGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID_FK", DbType="Int")]
		public System.Nullable<int> SiteID_FK
		{
			get
			{
				return this._SiteID_FK;
			}
			set
			{
				if ((this._SiteID_FK != value))
				{
					this.OnSiteID_FKChanging(value);
					this.SendPropertyChanging();
					this._SiteID_FK = value;
					this.SendPropertyChanged("SiteID_FK");
					this.OnSiteID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CalendarGroup_Calendar", Storage="_Calendars", ThisKey="CalendarGroupID", OtherKey="CalendarGroupID_FK")]
		public EntitySet<Calendar> Calendars
		{
			get
			{
				return this._Calendars;
			}
			set
			{
				this._Calendars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Calendars(Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CalendarGroup = this;
		}
		
		private void detach_Calendars(Calendar entity)
		{
			this.SendPropertyChanging();
			entity.CalendarGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalendarTroopConnection")]
	public partial class CalendarTroopConnection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CalendarID_FK;
		
		private int _TroopID_FK;
		
		private EntityRef<Calendar> _Calendar;
		
		private EntityRef<Ois_Troop> _Ois_Troop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCalendarID_FKChanging(int value);
    partial void OnCalendarID_FKChanged();
    partial void OnTroopID_FKChanging(int value);
    partial void OnTroopID_FKChanged();
    #endregion
		
		public CalendarTroopConnection()
		{
			this._Calendar = default(EntityRef<Calendar>);
			this._Ois_Troop = default(EntityRef<Ois_Troop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarID_FK", DbType="Int NOT NULL")]
		public int CalendarID_FK
		{
			get
			{
				return this._CalendarID_FK;
			}
			set
			{
				if ((this._CalendarID_FK != value))
				{
					if (this._Calendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalendarID_FKChanging(value);
					this.SendPropertyChanging();
					this._CalendarID_FK = value;
					this.SendPropertyChanged("CalendarID_FK");
					this.OnCalendarID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroopID_FK", DbType="Int NOT NULL")]
		public int TroopID_FK
		{
			get
			{
				return this._TroopID_FK;
			}
			set
			{
				if ((this._TroopID_FK != value))
				{
					if (this._Ois_Troop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTroopID_FKChanging(value);
					this.SendPropertyChanging();
					this._TroopID_FK = value;
					this.SendPropertyChanged("TroopID_FK");
					this.OnTroopID_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calendar_CalendarTroopConnection", Storage="_Calendar", ThisKey="CalendarID_FK", OtherKey="CalendarID", IsForeignKey=true)]
		public Calendar Calendar
		{
			get
			{
				return this._Calendar.Entity;
			}
			set
			{
				Calendar previousValue = this._Calendar.Entity;
				if (((previousValue != value) 
							|| (this._Calendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Calendar.Entity = null;
						previousValue.CalendarTroopConnections.Remove(this);
					}
					this._Calendar.Entity = value;
					if ((value != null))
					{
						value.CalendarTroopConnections.Add(this);
						this._CalendarID_FK = value.CalendarID;
					}
					else
					{
						this._CalendarID_FK = default(int);
					}
					this.SendPropertyChanged("Calendar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ois_Troop_CalendarTroopConnection", Storage="_Ois_Troop", ThisKey="TroopID_FK", OtherKey="TroopID", IsForeignKey=true)]
		public Ois_Troop Ois_Troop
		{
			get
			{
				return this._Ois_Troop.Entity;
			}
			set
			{
				Ois_Troop previousValue = this._Ois_Troop.Entity;
				if (((previousValue != value) 
							|| (this._Ois_Troop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ois_Troop.Entity = null;
						previousValue.CalendarTroopConnections.Remove(this);
					}
					this._Ois_Troop.Entity = value;
					if ((value != null))
					{
						value.CalendarTroopConnections.Add(this);
						this._TroopID_FK = value.TroopID;
					}
					else
					{
						this._TroopID_FK = default(int);
					}
					this.SendPropertyChanged("Ois_Troop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ois_Troop")]
	public partial class Ois_Troop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TroopID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<CalendarTroopConnection> _CalendarTroopConnections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTroopIDChanging(int value);
    partial void OnTroopIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Ois_Troop()
		{
			this._CalendarTroopConnections = new EntitySet<CalendarTroopConnection>(new Action<CalendarTroopConnection>(this.attach_CalendarTroopConnections), new Action<CalendarTroopConnection>(this.detach_CalendarTroopConnections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroopID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TroopID
		{
			get
			{
				return this._TroopID;
			}
			set
			{
				if ((this._TroopID != value))
				{
					this.OnTroopIDChanging(value);
					this.SendPropertyChanging();
					this._TroopID = value;
					this.SendPropertyChanged("TroopID");
					this.OnTroopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ois_Troop_CalendarTroopConnection", Storage="_CalendarTroopConnections", ThisKey="TroopID", OtherKey="TroopID_FK")]
		public EntitySet<CalendarTroopConnection> CalendarTroopConnections
		{
			get
			{
				return this._CalendarTroopConnections;
			}
			set
			{
				this._CalendarTroopConnections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CalendarTroopConnections(CalendarTroopConnection entity)
		{
			this.SendPropertyChanging();
			entity.Ois_Troop = this;
		}
		
		private void detach_CalendarTroopConnections(CalendarTroopConnection entity)
		{
			this.SendPropertyChanging();
			entity.Ois_Troop = null;
		}
	}
}
#pragma warning restore 1591

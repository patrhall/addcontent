#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIM.Business.AimEdit
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aimit_Aim")]
	public partial class DataObjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSiteLanguage(SiteLanguage instance);
    partial void UpdateSiteLanguage(SiteLanguage instance);
    partial void DeleteSiteLanguage(SiteLanguage instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertObjectType(ObjectType instance);
    partial void UpdateObjectType(ObjectType instance);
    partial void DeleteObjectType(ObjectType instance);
    partial void InsertObjectWidgetPlaceHolder(ObjectWidgetPlaceHolder instance);
    partial void UpdateObjectWidgetPlaceHolder(ObjectWidgetPlaceHolder instance);
    partial void DeleteObjectWidgetPlaceHolder(ObjectWidgetPlaceHolder instance);
    partial void InsertObjectWidgetProperty(ObjectWidgetProperty instance);
    partial void UpdateObjectWidgetProperty(ObjectWidgetProperty instance);
    partial void DeleteObjectWidgetProperty(ObjectWidgetProperty instance);
    partial void InsertObjectWidgetPropertyType(ObjectWidgetPropertyType instance);
    partial void UpdateObjectWidgetPropertyType(ObjectWidgetPropertyType instance);
    partial void DeleteObjectWidgetPropertyType(ObjectWidgetPropertyType instance);
    partial void InsertObjectWidgetPropertyValue(ObjectWidgetPropertyValue instance);
    partial void UpdateObjectWidgetPropertyValue(ObjectWidgetPropertyValue instance);
    partial void DeleteObjectWidgetPropertyValue(ObjectWidgetPropertyValue instance);
    partial void InsertObjectWidget(ObjectWidget instance);
    partial void UpdateObjectWidget(ObjectWidget instance);
    partial void DeleteObjectWidget(ObjectWidget instance);
    partial void InsertObject_X_ObjectWidget(Object_X_ObjectWidget instance);
    partial void UpdateObject_X_ObjectWidget(Object_X_ObjectWidget instance);
    partial void DeleteObject_X_ObjectWidget(Object_X_ObjectWidget instance);
    partial void InsertObject(Object instance);
    partial void UpdateObject(Object instance);
    partial void DeleteObject(Object instance);
    partial void InsertPuff(Puff instance);
    partial void UpdatePuff(Puff instance);
    partial void DeletePuff(Puff instance);
    partial void InsertSite(Site instance);
    partial void UpdateSite(Site instance);
    partial void DeleteSite(Site instance);
    partial void InsertSiteObjectType(SiteObjectType instance);
    partial void UpdateSiteObjectType(SiteObjectType instance);
    partial void DeleteSiteObjectType(SiteObjectType instance);
    partial void InsertObjectsInRole(ObjectsInRole instance);
    partial void UpdateObjectsInRole(ObjectsInRole instance);
    partial void DeleteObjectsInRole(ObjectsInRole instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertAdminRole(AdminRole instance);
    partial void UpdateAdminRole(AdminRole instance);
    partial void DeleteAdminRole(AdminRole instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertTreeStructure(TreeStructure instance);
    partial void UpdateTreeStructure(TreeStructure instance);
    partial void DeleteTreeStructure(TreeStructure instance);
    #endregion
		
		public DataObjectsDataContext() : 
				base(global::AIM.Business.Properties.Settings.Default.Aimit_AimConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataObjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SiteLanguage> SiteLanguages
		{
			get
			{
				return this.GetTable<SiteLanguage>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<ObjectType> ObjectTypes
		{
			get
			{
				return this.GetTable<ObjectType>();
			}
		}
		
		public System.Data.Linq.Table<ObjectWidgetPlaceHolder> ObjectWidgetPlaceHolders
		{
			get
			{
				return this.GetTable<ObjectWidgetPlaceHolder>();
			}
		}
		
		public System.Data.Linq.Table<ObjectWidgetProperty> ObjectWidgetProperties
		{
			get
			{
				return this.GetTable<ObjectWidgetProperty>();
			}
		}
		
		public System.Data.Linq.Table<ObjectWidgetPropertyType> ObjectWidgetPropertyTypes
		{
			get
			{
				return this.GetTable<ObjectWidgetPropertyType>();
			}
		}
		
		public System.Data.Linq.Table<ObjectWidgetPropertyValue> ObjectWidgetPropertyValues
		{
			get
			{
				return this.GetTable<ObjectWidgetPropertyValue>();
			}
		}
		
		public System.Data.Linq.Table<ObjectWidget> ObjectWidgets
		{
			get
			{
				return this.GetTable<ObjectWidget>();
			}
		}
		
		public System.Data.Linq.Table<Object_X_ObjectWidget> Object_X_ObjectWidgets
		{
			get
			{
				return this.GetTable<Object_X_ObjectWidget>();
			}
		}
		
		public System.Data.Linq.Table<Object> Objects
		{
			get
			{
				return this.GetTable<Object>();
			}
		}
		
		public System.Data.Linq.Table<Puff> Puffs
		{
			get
			{
				return this.GetTable<Puff>();
			}
		}
		
		public System.Data.Linq.Table<Site> Sites
		{
			get
			{
				return this.GetTable<Site>();
			}
		}
		
		public System.Data.Linq.Table<SiteObjectType> SiteObjectTypes
		{
			get
			{
				return this.GetTable<SiteObjectType>();
			}
		}
		
		public System.Data.Linq.Table<ObjectsInRole> ObjectsInRoles
		{
			get
			{
				return this.GetTable<ObjectsInRole>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<AdminRole> AdminRoles
		{
			get
			{
				return this.GetTable<AdminRole>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<TreeStructure> TreeStructures
		{
			get
			{
				return this.GetTable<TreeStructure>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetTreeMenu")]
		public ISingleResult<usp_GetTreeMenuResult> usp_GetTreeMenu([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteID", DbType="Int")] System.Nullable<int> siteID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangID", DbType="Int")] System.Nullable<int> langID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckPublish", DbType="Int")] System.Nullable<int> checkPublish)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteID, langID, checkPublish);
			return ((ISingleResult<usp_GetTreeMenuResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetObject")]
		public ISingleResult<usp_GetObjectResult> usp_GetObject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteID", DbType="Int")] System.Nullable<int> siteID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteID, objectID);
			return ((ISingleResult<usp_GetObjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetObjectRoles")]
		public ISingleResult<usp_GetObjectRolesResult> usp_GetObjectRoles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID);
			return ((ISingleResult<usp_GetObjectRolesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetTrashedObjects")]
		public ISingleResult<usp_GetTrashedObjectsResult> usp_GetTrashedObjects([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteID", DbType="Int")] System.Nullable<int> siteID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteID);
			return ((ISingleResult<usp_GetTrashedObjectsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_EditTree")]
		public ISingleResult<usp_EditTreeResult> usp_EditTree([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentID", DbType="Int")] System.Nullable<int> parentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sort", DbType="Int")] System.Nullable<int> sort)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID, parentID, sort);
			return ((ISingleResult<usp_EditTreeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_ObjectTrash_Set")]
		public int usp_ObjectTrash_Set([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> isTrash)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID, isTrash);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_ObjectTrash_purge")]
		public int usp_ObjectTrash_purge()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeleteAllMessages")]
		public int usp_DeleteAllMessages([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Forum_DeleteAllThreads")]
		public int usp_Forum_DeleteAllThreads([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Forum_DeleteAllMessages")]
		public int usp_Forum_DeleteAllMessages([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ThreadID", DbType="Int")] System.Nullable<int> threadID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), threadID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Forum_GetAllThreads")]
		public ISingleResult<usp_Forum_GetAllThreadsResult> usp_Forum_GetAllThreads([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID);
			return ((ISingleResult<usp_Forum_GetAllThreadsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Calendar_getAllEventCategories")]
		public ISingleResult<usp_Calendar_getAllEventCategoriesResult> usp_Calendar_getAllEventCategories([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID);
			return ((ISingleResult<usp_Calendar_getAllEventCategoriesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Calendar_DeleteAllEvents")]
		public int usp_Calendar_DeleteAllEvents([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeleteObject")]
		public int usp_DeleteObject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_EditObjectPosition")]
		public int usp_EditObjectPosition([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortOrder", DbType="Int")] System.Nullable<int> sortOrder)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID, sortOrder);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SaveObjectInTree")]
		public ISingleResult<usp_SaveObjectInTreeResult> usp_SaveObjectInTree([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(200)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NText")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Created", DbType="DateTime")] System.Nullable<System.DateTime> created, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectTypeID", DbType="Int")] System.Nullable<int> objectTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Active", DbType="Int")] System.Nullable<int> active, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteID", DbType="Int")] System.Nullable<int> siteID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangID", DbType="Int")] System.Nullable<int> langID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentID", DbType="Int")] System.Nullable<int> parentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewID", DbType="Int")] System.Nullable<int> newID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectKey", DbType="NVarChar(15)")] string objectKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, text, created, iD, objectTypeID, active, siteID, langID, parentID, newID, objectKey);
			return ((ISingleResult<usp_SaveObjectInTreeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeleteObjectRoles")]
		public int usp_DeleteObjectRoles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetSiteObjectType")]
		public ISingleResult<usp_GetSiteObjectTypeResult> usp_GetSiteObjectType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteID", DbType="Int")] System.Nullable<int> siteID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteID);
			return ((ISingleResult<usp_GetSiteObjectTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SaveObjectType")]
		public int usp_SaveObjectType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectTypeID", DbType="Int")] System.Nullable<int> objectTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectTypeID, objectID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_SaveObject")]
		public ISingleResult<usp_SaveObjectResult> usp_SaveObject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Topic", DbType="NVarChar(200)")] string topic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NText")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Created", DbType="DateTime")] System.Nullable<System.DateTime> created, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectTypeID", DbType="Int")] System.Nullable<int> objectTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Active", DbType="Int")] System.Nullable<int> active, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteID", DbType="Int")] System.Nullable<int> siteID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangID", DbType="Int")] System.Nullable<int> langID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectKey", DbType="NVarChar(15)")] string objectKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkTarget", DbType="NVarChar(10)")] string linkTarget, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecureObject", DbType="TinyInt")] System.Nullable<byte> secureObject, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UploadedImagePath", DbType="NVarChar(400)")] string uploadedImagePath)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), topic, text, created, iD, objectTypeID, active, siteID, langID, objectKey, linkTarget, secureObject, uploadedImagePath);
			return ((ISingleResult<usp_SaveObjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_Object_SaveTemplate")]
		public int usp_Object_SaveTemplate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectID", DbType="Int")] System.Nullable<int> objectID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemplateID", DbType="Int")] System.Nullable<int> templateID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectID, templateID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetLanguages")]
		public ISingleResult<usp_GetLanguagesResult> usp_GetLanguages([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteID", DbType="Int")] System.Nullable<int> siteID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangID", DbType="Int")] System.Nullable<int> langID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteID, langID);
			return ((ISingleResult<usp_GetLanguagesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteLanguage")]
	public partial class SiteLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LangID;
		
		private int _SiteID;
		
		private System.Nullable<int> _RootID;
		
		private System.Nullable<int> _StartPageID;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnRootIDChanging(System.Nullable<int> value);
    partial void OnRootIDChanged();
    partial void OnStartPageIDChanging(System.Nullable<int> value);
    partial void OnStartPageIDChanged();
    #endregion
		
		public SiteLanguage()
		{
			this._Language = default(EntityRef<Language>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootID", DbType="Int")]
		public System.Nullable<int> RootID
		{
			get
			{
				return this._RootID;
			}
			set
			{
				if ((this._RootID != value))
				{
					this.OnRootIDChanging(value);
					this.SendPropertyChanging();
					this._RootID = value;
					this.SendPropertyChanged("RootID");
					this.OnRootIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartPageID", DbType="Int")]
		public System.Nullable<int> StartPageID
		{
			get
			{
				return this._StartPageID;
			}
			set
			{
				if ((this._StartPageID != value))
				{
					this.OnStartPageIDChanging(value);
					this.SendPropertyChanging();
					this._StartPageID = value;
					this.SendPropertyChanged("StartPageID");
					this.OnStartPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_SiteLanguage", Storage="_Language", ThisKey="LangID", OtherKey="LangID", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.SiteLanguages.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.SiteLanguages.Add(this);
						this._LangID = value.LangID;
					}
					else
					{
						this._LangID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteLanguage", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.SiteLanguages.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.SiteLanguages.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Language")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LangID;
		
		private string _Language1;
		
		private string _flagimage;
		
		private EntitySet<SiteLanguage> _SiteLanguages;
		
		private EntitySet<Object> _Objects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnLanguage1Changing(string value);
    partial void OnLanguage1Changed();
    partial void OnflagimageChanging(string value);
    partial void OnflagimageChanged();
    #endregion
		
		public Language()
		{
			this._SiteLanguages = new EntitySet<SiteLanguage>(new Action<SiteLanguage>(this.attach_SiteLanguages), new Action<SiteLanguage>(this.detach_SiteLanguages));
			this._Objects = new EntitySet<Object>(new Action<Object>(this.attach_Objects), new Action<Object>(this.detach_Objects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Language", Storage="_Language1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Language1
		{
			get
			{
				return this._Language1;
			}
			set
			{
				if ((this._Language1 != value))
				{
					this.OnLanguage1Changing(value);
					this.SendPropertyChanging();
					this._Language1 = value;
					this.SendPropertyChanged("Language1");
					this.OnLanguage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flagimage", DbType="NVarChar(50)")]
		public string flagimage
		{
			get
			{
				return this._flagimage;
			}
			set
			{
				if ((this._flagimage != value))
				{
					this.OnflagimageChanging(value);
					this.SendPropertyChanging();
					this._flagimage = value;
					this.SendPropertyChanged("flagimage");
					this.OnflagimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_SiteLanguage", Storage="_SiteLanguages", ThisKey="LangID", OtherKey="LangID")]
		public EntitySet<SiteLanguage> SiteLanguages
		{
			get
			{
				return this._SiteLanguages;
			}
			set
			{
				this._SiteLanguages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Object", Storage="_Objects", ThisKey="LangID", OtherKey="LangID")]
		public EntitySet<Object> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SiteLanguages(SiteLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_SiteLanguages(SiteLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectType")]
	public partial class ObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectTypeID;
		
		private string _ObjectType1;
		
		private byte _VisibleInList;
		
		private string _AimContentURL;
		
		private string _commentsAboutOT;
		
		private EntitySet<Object> _Objects;
		
		private EntitySet<SiteObjectType> _SiteObjectTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnObjectType1Changing(string value);
    partial void OnObjectType1Changed();
    partial void OnVisibleInListChanging(byte value);
    partial void OnVisibleInListChanged();
    partial void OnAimContentURLChanging(string value);
    partial void OnAimContentURLChanged();
    partial void OncommentsAboutOTChanging(string value);
    partial void OncommentsAboutOTChanged();
    #endregion
		
		public ObjectType()
		{
			this._Objects = new EntitySet<Object>(new Action<Object>(this.attach_Objects), new Action<Object>(this.detach_Objects));
			this._SiteObjectTypes = new EntitySet<SiteObjectType>(new Action<SiteObjectType>(this.attach_SiteObjectTypes), new Action<SiteObjectType>(this.detach_SiteObjectTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ObjectType", Storage="_ObjectType1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ObjectType1
		{
			get
			{
				return this._ObjectType1;
			}
			set
			{
				if ((this._ObjectType1 != value))
				{
					this.OnObjectType1Changing(value);
					this.SendPropertyChanging();
					this._ObjectType1 = value;
					this.SendPropertyChanged("ObjectType1");
					this.OnObjectType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisibleInList", DbType="TinyInt NOT NULL")]
		public byte VisibleInList
		{
			get
			{
				return this._VisibleInList;
			}
			set
			{
				if ((this._VisibleInList != value))
				{
					this.OnVisibleInListChanging(value);
					this.SendPropertyChanging();
					this._VisibleInList = value;
					this.SendPropertyChanged("VisibleInList");
					this.OnVisibleInListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AimContentURL", DbType="NVarChar(100)")]
		public string AimContentURL
		{
			get
			{
				return this._AimContentURL;
			}
			set
			{
				if ((this._AimContentURL != value))
				{
					this.OnAimContentURLChanging(value);
					this.SendPropertyChanging();
					this._AimContentURL = value;
					this.SendPropertyChanged("AimContentURL");
					this.OnAimContentURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentsAboutOT", DbType="NVarChar(100)")]
		public string commentsAboutOT
		{
			get
			{
				return this._commentsAboutOT;
			}
			set
			{
				if ((this._commentsAboutOT != value))
				{
					this.OncommentsAboutOTChanging(value);
					this.SendPropertyChanging();
					this._commentsAboutOT = value;
					this.SendPropertyChanged("commentsAboutOT");
					this.OncommentsAboutOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectType_Object", Storage="_Objects", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<Object> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectType_SiteObjectType", Storage="_SiteObjectTypes", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<SiteObjectType> SiteObjectTypes
		{
			get
			{
				return this._SiteObjectTypes;
			}
			set
			{
				this._SiteObjectTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.ObjectType = this;
		}
		
		private void detach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.ObjectType = null;
		}
		
		private void attach_SiteObjectTypes(SiteObjectType entity)
		{
			this.SendPropertyChanging();
			entity.ObjectType = this;
		}
		
		private void detach_SiteObjectTypes(SiteObjectType entity)
		{
			this.SendPropertyChanging();
			entity.ObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectWidgetPlaceHolders")]
	public partial class ObjectWidgetPlaceHolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Site_FK;
		
		private string _ShortName;
		
		private string _Name;
		
		private EntitySet<Object_X_ObjectWidget> _Object_X_ObjectWidgets;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ObjectWidgetPlaceHolder()
		{
			this._Object_X_ObjectWidgets = new EntitySet<Object_X_ObjectWidget>(new Action<Object_X_ObjectWidget>(this.attach_Object_X_ObjectWidgets), new Action<Object_X_ObjectWidget>(this.detach_Object_X_ObjectWidgets));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidgetPlaceHolder_Object_X_ObjectWidget", Storage="_Object_X_ObjectWidgets", ThisKey="ID", OtherKey="ObjectWidgetPlaceHolder_FK")]
		public EntitySet<Object_X_ObjectWidget> Object_X_ObjectWidgets
		{
			get
			{
				return this._Object_X_ObjectWidgets;
			}
			set
			{
				this._Object_X_ObjectWidgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_ObjectWidgetPlaceHolder", Storage="_Site", ThisKey="Site_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.ObjectWidgetPlaceHolders.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.ObjectWidgetPlaceHolders.Add(this);
						this._Site_FK = value.SiteID;
					}
					else
					{
						this._Site_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Object_X_ObjectWidgets(Object_X_ObjectWidget entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidgetPlaceHolder = this;
		}
		
		private void detach_Object_X_ObjectWidgets(Object_X_ObjectWidget entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidgetPlaceHolder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectWidgetProperties")]
	public partial class ObjectWidgetProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Widget_FK;
		
		private int _Sort;
		
		private int _ObjectWidgetPropertyType_FK;
		
		private string _PropertyName;
		
		private string _PropertyShortName;
		
		private EntitySet<ObjectWidgetPropertyValue> _ObjectWidgetPropertyValues;
		
		private EntityRef<ObjectWidgetPropertyType> _ObjectWidgetPropertyType;
		
		private EntityRef<ObjectWidget> _ObjectWidget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWidget_FKChanging(int value);
    partial void OnWidget_FKChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    partial void OnObjectWidgetPropertyType_FKChanging(int value);
    partial void OnObjectWidgetPropertyType_FKChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnPropertyShortNameChanging(string value);
    partial void OnPropertyShortNameChanged();
    #endregion
		
		public ObjectWidgetProperty()
		{
			this._ObjectWidgetPropertyValues = new EntitySet<ObjectWidgetPropertyValue>(new Action<ObjectWidgetPropertyValue>(this.attach_ObjectWidgetPropertyValues), new Action<ObjectWidgetPropertyValue>(this.detach_ObjectWidgetPropertyValues));
			this._ObjectWidgetPropertyType = default(EntityRef<ObjectWidgetPropertyType>);
			this._ObjectWidget = default(EntityRef<ObjectWidget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Widget_FK", DbType="Int NOT NULL")]
		public int Widget_FK
		{
			get
			{
				return this._Widget_FK;
			}
			set
			{
				if ((this._Widget_FK != value))
				{
					if (this._ObjectWidget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWidget_FKChanging(value);
					this.SendPropertyChanging();
					this._Widget_FK = value;
					this.SendPropertyChanged("Widget_FK");
					this.OnWidget_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int NOT NULL")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectWidgetPropertyType_FK", DbType="Int NOT NULL")]
		public int ObjectWidgetPropertyType_FK
		{
			get
			{
				return this._ObjectWidgetPropertyType_FK;
			}
			set
			{
				if ((this._ObjectWidgetPropertyType_FK != value))
				{
					if (this._ObjectWidgetPropertyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectWidgetPropertyType_FKChanging(value);
					this.SendPropertyChanging();
					this._ObjectWidgetPropertyType_FK = value;
					this.SendPropertyChanged("ObjectWidgetPropertyType_FK");
					this.OnObjectWidgetPropertyType_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyShortName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyShortName
		{
			get
			{
				return this._PropertyShortName;
			}
			set
			{
				if ((this._PropertyShortName != value))
				{
					this.OnPropertyShortNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyShortName = value;
					this.SendPropertyChanged("PropertyShortName");
					this.OnPropertyShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidgetProperty_ObjectWidgetPropertyValue", Storage="_ObjectWidgetPropertyValues", ThisKey="ID", OtherKey="Property_FK")]
		public EntitySet<ObjectWidgetPropertyValue> ObjectWidgetPropertyValues
		{
			get
			{
				return this._ObjectWidgetPropertyValues;
			}
			set
			{
				this._ObjectWidgetPropertyValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidgetPropertyType_ObjectWidgetProperty", Storage="_ObjectWidgetPropertyType", ThisKey="ObjectWidgetPropertyType_FK", OtherKey="ID", IsForeignKey=true)]
		public ObjectWidgetPropertyType ObjectWidgetPropertyType
		{
			get
			{
				return this._ObjectWidgetPropertyType.Entity;
			}
			set
			{
				ObjectWidgetPropertyType previousValue = this._ObjectWidgetPropertyType.Entity;
				if (((previousValue != value) 
							|| (this._ObjectWidgetPropertyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectWidgetPropertyType.Entity = null;
						previousValue.ObjectWidgetProperties.Remove(this);
					}
					this._ObjectWidgetPropertyType.Entity = value;
					if ((value != null))
					{
						value.ObjectWidgetProperties.Add(this);
						this._ObjectWidgetPropertyType_FK = value.ID;
					}
					else
					{
						this._ObjectWidgetPropertyType_FK = default(int);
					}
					this.SendPropertyChanged("ObjectWidgetPropertyType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidget_ObjectWidgetProperty", Storage="_ObjectWidget", ThisKey="Widget_FK", OtherKey="ID", IsForeignKey=true)]
		public ObjectWidget ObjectWidget
		{
			get
			{
				return this._ObjectWidget.Entity;
			}
			set
			{
				ObjectWidget previousValue = this._ObjectWidget.Entity;
				if (((previousValue != value) 
							|| (this._ObjectWidget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectWidget.Entity = null;
						previousValue.ObjectWidgetProperties.Remove(this);
					}
					this._ObjectWidget.Entity = value;
					if ((value != null))
					{
						value.ObjectWidgetProperties.Add(this);
						this._Widget_FK = value.ID;
					}
					else
					{
						this._Widget_FK = default(int);
					}
					this.SendPropertyChanged("ObjectWidget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ObjectWidgetPropertyValues(ObjectWidgetPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidgetProperty = this;
		}
		
		private void detach_ObjectWidgetPropertyValues(ObjectWidgetPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidgetProperty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectWidgetPropertyTypes")]
	public partial class ObjectWidgetPropertyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TypeName;
		
		private string _ShortName;
		
		private string _Description;
		
		private EntitySet<ObjectWidgetProperty> _ObjectWidgetProperties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ObjectWidgetPropertyType()
		{
			this._ObjectWidgetProperties = new EntitySet<ObjectWidgetProperty>(new Action<ObjectWidgetProperty>(this.attach_ObjectWidgetProperties), new Action<ObjectWidgetProperty>(this.detach_ObjectWidgetProperties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidgetPropertyType_ObjectWidgetProperty", Storage="_ObjectWidgetProperties", ThisKey="ID", OtherKey="ObjectWidgetPropertyType_FK")]
		public EntitySet<ObjectWidgetProperty> ObjectWidgetProperties
		{
			get
			{
				return this._ObjectWidgetProperties;
			}
			set
			{
				this._ObjectWidgetProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ObjectWidgetProperties(ObjectWidgetProperty entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidgetPropertyType = this;
		}
		
		private void detach_ObjectWidgetProperties(ObjectWidgetProperty entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidgetPropertyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectWidgetPropertyValues")]
	public partial class ObjectWidgetPropertyValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Property_FK;
		
		private int _ObjectXObjectWidget_FK;
		
		private string _Value;
		
		private EntityRef<ObjectWidgetProperty> _ObjectWidgetProperty;
		
		private EntityRef<Object_X_ObjectWidget> _Object_X_ObjectWidget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProperty_FKChanging(int value);
    partial void OnProperty_FKChanged();
    partial void OnObjectXObjectWidget_FKChanging(int value);
    partial void OnObjectXObjectWidget_FKChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ObjectWidgetPropertyValue()
		{
			this._ObjectWidgetProperty = default(EntityRef<ObjectWidgetProperty>);
			this._Object_X_ObjectWidget = default(EntityRef<Object_X_ObjectWidget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Property_FK", DbType="Int NOT NULL")]
		public int Property_FK
		{
			get
			{
				return this._Property_FK;
			}
			set
			{
				if ((this._Property_FK != value))
				{
					if (this._ObjectWidgetProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProperty_FKChanging(value);
					this.SendPropertyChanging();
					this._Property_FK = value;
					this.SendPropertyChanged("Property_FK");
					this.OnProperty_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectXObjectWidget_FK", DbType="Int NOT NULL")]
		public int ObjectXObjectWidget_FK
		{
			get
			{
				return this._ObjectXObjectWidget_FK;
			}
			set
			{
				if ((this._ObjectXObjectWidget_FK != value))
				{
					if (this._Object_X_ObjectWidget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectXObjectWidget_FKChanging(value);
					this.SendPropertyChanging();
					this._ObjectXObjectWidget_FK = value;
					this.SendPropertyChanged("ObjectXObjectWidget_FK");
					this.OnObjectXObjectWidget_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidgetProperty_ObjectWidgetPropertyValue", Storage="_ObjectWidgetProperty", ThisKey="Property_FK", OtherKey="ID", IsForeignKey=true)]
		public ObjectWidgetProperty ObjectWidgetProperty
		{
			get
			{
				return this._ObjectWidgetProperty.Entity;
			}
			set
			{
				ObjectWidgetProperty previousValue = this._ObjectWidgetProperty.Entity;
				if (((previousValue != value) 
							|| (this._ObjectWidgetProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectWidgetProperty.Entity = null;
						previousValue.ObjectWidgetPropertyValues.Remove(this);
					}
					this._ObjectWidgetProperty.Entity = value;
					if ((value != null))
					{
						value.ObjectWidgetPropertyValues.Add(this);
						this._Property_FK = value.ID;
					}
					else
					{
						this._Property_FK = default(int);
					}
					this.SendPropertyChanged("ObjectWidgetProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_X_ObjectWidget_ObjectWidgetPropertyValue", Storage="_Object_X_ObjectWidget", ThisKey="ObjectXObjectWidget_FK", OtherKey="ID", IsForeignKey=true)]
		public Object_X_ObjectWidget Object_X_ObjectWidget
		{
			get
			{
				return this._Object_X_ObjectWidget.Entity;
			}
			set
			{
				Object_X_ObjectWidget previousValue = this._Object_X_ObjectWidget.Entity;
				if (((previousValue != value) 
							|| (this._Object_X_ObjectWidget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object_X_ObjectWidget.Entity = null;
						previousValue.ObjectWidgetPropertyValues.Remove(this);
					}
					this._Object_X_ObjectWidget.Entity = value;
					if ((value != null))
					{
						value.ObjectWidgetPropertyValues.Add(this);
						this._ObjectXObjectWidget_FK = value.ID;
					}
					else
					{
						this._ObjectXObjectWidget_FK = default(int);
					}
					this.SendPropertyChanged("Object_X_ObjectWidget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectWidgets")]
	public partial class ObjectWidget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Site_FK;
		
		private string _ShortName;
		
		private string _Name;
		
		private EntitySet<ObjectWidgetProperty> _ObjectWidgetProperties;
		
		private EntitySet<Object_X_ObjectWidget> _Object_X_ObjectWidgets;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSite_FKChanging(int value);
    partial void OnSite_FKChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ObjectWidget()
		{
			this._ObjectWidgetProperties = new EntitySet<ObjectWidgetProperty>(new Action<ObjectWidgetProperty>(this.attach_ObjectWidgetProperties), new Action<ObjectWidgetProperty>(this.detach_ObjectWidgetProperties));
			this._Object_X_ObjectWidgets = new EntitySet<Object_X_ObjectWidget>(new Action<Object_X_ObjectWidget>(this.attach_Object_X_ObjectWidgets), new Action<Object_X_ObjectWidget>(this.detach_Object_X_ObjectWidgets));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_FK", DbType="Int NOT NULL")]
		public int Site_FK
		{
			get
			{
				return this._Site_FK;
			}
			set
			{
				if ((this._Site_FK != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_FKChanging(value);
					this.SendPropertyChanging();
					this._Site_FK = value;
					this.SendPropertyChanged("Site_FK");
					this.OnSite_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidget_ObjectWidgetProperty", Storage="_ObjectWidgetProperties", ThisKey="ID", OtherKey="Widget_FK")]
		public EntitySet<ObjectWidgetProperty> ObjectWidgetProperties
		{
			get
			{
				return this._ObjectWidgetProperties;
			}
			set
			{
				this._ObjectWidgetProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidget_Object_X_ObjectWidget", Storage="_Object_X_ObjectWidgets", ThisKey="ID", OtherKey="ObjectWidget_FK")]
		public EntitySet<Object_X_ObjectWidget> Object_X_ObjectWidgets
		{
			get
			{
				return this._Object_X_ObjectWidgets;
			}
			set
			{
				this._Object_X_ObjectWidgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_ObjectWidget", Storage="_Site", ThisKey="Site_FK", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.ObjectWidgets.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.ObjectWidgets.Add(this);
						this._Site_FK = value.SiteID;
					}
					else
					{
						this._Site_FK = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ObjectWidgetProperties(ObjectWidgetProperty entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidget = this;
		}
		
		private void detach_ObjectWidgetProperties(ObjectWidgetProperty entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidget = null;
		}
		
		private void attach_Object_X_ObjectWidgets(Object_X_ObjectWidget entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidget = this;
		}
		
		private void detach_Object_X_ObjectWidgets(Object_X_ObjectWidget entity)
		{
			this.SendPropertyChanging();
			entity.ObjectWidget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object_X_ObjectWidget")]
	public partial class Object_X_ObjectWidget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Object_FK;
		
		private int _ObjectWidget_FK;
		
		private int _ObjectWidgetPlaceHolder_FK;
		
		private string _Name;
		
		private int _SortOrder;
		
		private bool _Published;
		
		private bool _Deleted;
		
		private EntitySet<ObjectWidgetPropertyValue> _ObjectWidgetPropertyValues;
		
		private EntityRef<ObjectWidgetPlaceHolder> _ObjectWidgetPlaceHolder;
		
		private EntityRef<ObjectWidget> _ObjectWidget;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnObject_FKChanging(System.Nullable<int> value);
    partial void OnObject_FKChanged();
    partial void OnObjectWidget_FKChanging(int value);
    partial void OnObjectWidget_FKChanged();
    partial void OnObjectWidgetPlaceHolder_FKChanging(int value);
    partial void OnObjectWidgetPlaceHolder_FKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnPublishedChanging(bool value);
    partial void OnPublishedChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Object_X_ObjectWidget()
		{
			this._ObjectWidgetPropertyValues = new EntitySet<ObjectWidgetPropertyValue>(new Action<ObjectWidgetPropertyValue>(this.attach_ObjectWidgetPropertyValues), new Action<ObjectWidgetPropertyValue>(this.detach_ObjectWidgetPropertyValues));
			this._ObjectWidgetPlaceHolder = default(EntityRef<ObjectWidgetPlaceHolder>);
			this._ObjectWidget = default(EntityRef<ObjectWidget>);
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_FK", DbType="Int")]
		public System.Nullable<int> Object_FK
		{
			get
			{
				return this._Object_FK;
			}
			set
			{
				if ((this._Object_FK != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObject_FKChanging(value);
					this.SendPropertyChanging();
					this._Object_FK = value;
					this.SendPropertyChanged("Object_FK");
					this.OnObject_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectWidget_FK", DbType="Int NOT NULL")]
		public int ObjectWidget_FK
		{
			get
			{
				return this._ObjectWidget_FK;
			}
			set
			{
				if ((this._ObjectWidget_FK != value))
				{
					if (this._ObjectWidget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectWidget_FKChanging(value);
					this.SendPropertyChanging();
					this._ObjectWidget_FK = value;
					this.SendPropertyChanged("ObjectWidget_FK");
					this.OnObjectWidget_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectWidgetPlaceHolder_FK", DbType="Int NOT NULL")]
		public int ObjectWidgetPlaceHolder_FK
		{
			get
			{
				return this._ObjectWidgetPlaceHolder_FK;
			}
			set
			{
				if ((this._ObjectWidgetPlaceHolder_FK != value))
				{
					if (this._ObjectWidgetPlaceHolder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectWidgetPlaceHolder_FKChanging(value);
					this.SendPropertyChanging();
					this._ObjectWidgetPlaceHolder_FK = value;
					this.SendPropertyChanged("ObjectWidgetPlaceHolder_FK");
					this.OnObjectWidgetPlaceHolder_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="Bit NOT NULL")]
		public bool Published
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnPublishedChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("Published");
					this.OnPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_X_ObjectWidget_ObjectWidgetPropertyValue", Storage="_ObjectWidgetPropertyValues", ThisKey="ID", OtherKey="ObjectXObjectWidget_FK")]
		public EntitySet<ObjectWidgetPropertyValue> ObjectWidgetPropertyValues
		{
			get
			{
				return this._ObjectWidgetPropertyValues;
			}
			set
			{
				this._ObjectWidgetPropertyValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidgetPlaceHolder_Object_X_ObjectWidget", Storage="_ObjectWidgetPlaceHolder", ThisKey="ObjectWidgetPlaceHolder_FK", OtherKey="ID", IsForeignKey=true)]
		public ObjectWidgetPlaceHolder ObjectWidgetPlaceHolder
		{
			get
			{
				return this._ObjectWidgetPlaceHolder.Entity;
			}
			set
			{
				ObjectWidgetPlaceHolder previousValue = this._ObjectWidgetPlaceHolder.Entity;
				if (((previousValue != value) 
							|| (this._ObjectWidgetPlaceHolder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectWidgetPlaceHolder.Entity = null;
						previousValue.Object_X_ObjectWidgets.Remove(this);
					}
					this._ObjectWidgetPlaceHolder.Entity = value;
					if ((value != null))
					{
						value.Object_X_ObjectWidgets.Add(this);
						this._ObjectWidgetPlaceHolder_FK = value.ID;
					}
					else
					{
						this._ObjectWidgetPlaceHolder_FK = default(int);
					}
					this.SendPropertyChanged("ObjectWidgetPlaceHolder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectWidget_Object_X_ObjectWidget", Storage="_ObjectWidget", ThisKey="ObjectWidget_FK", OtherKey="ID", IsForeignKey=true)]
		public ObjectWidget ObjectWidget
		{
			get
			{
				return this._ObjectWidget.Entity;
			}
			set
			{
				ObjectWidget previousValue = this._ObjectWidget.Entity;
				if (((previousValue != value) 
							|| (this._ObjectWidget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectWidget.Entity = null;
						previousValue.Object_X_ObjectWidgets.Remove(this);
					}
					this._ObjectWidget.Entity = value;
					if ((value != null))
					{
						value.Object_X_ObjectWidgets.Add(this);
						this._ObjectWidget_FK = value.ID;
					}
					else
					{
						this._ObjectWidget_FK = default(int);
					}
					this.SendPropertyChanged("ObjectWidget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_X_ObjectWidget", Storage="_Object", ThisKey="Object_FK", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Object_X_ObjectWidgets.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Object_X_ObjectWidgets.Add(this);
						this._Object_FK = value.ObjectID;
					}
					else
					{
						this._Object_FK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ObjectWidgetPropertyValues(ObjectWidgetPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.Object_X_ObjectWidget = this;
		}
		
		private void detach_ObjectWidgetPropertyValues(ObjectWidgetPropertyValue entity)
		{
			this.SendPropertyChanging();
			entity.Object_X_ObjectWidget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object")]
	public partial class Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectID;
		
		private string _Structure;
		
		private string _Title;
		
		private string _Slug;
		
		private string _IntroText;
		
		private string _HTMLContent;
		
		private string _MetaTitle;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private System.Nullable<bool> _Active;
		
		private System.DateTime _LastChanged;
		
		private System.Nullable<int> _Sortorder;
		
		private string _Picture;
		
		private string _Alt;
		
		private System.Nullable<int> _ObjectTypeID;
		
		private System.Nullable<int> _SiteID;
		
		private int _LangID;
		
		private System.DateTime _Created;
		
		private string _StartDate;
		
		private string _ObjectKey;
		
		private System.Nullable<int> _ListID;
		
		private System.Nullable<System.DateTime> _PublishFrom;
		
		private System.Nullable<System.DateTime> _PublishTo;
		
		private string _LinkTarget;
		
		private System.Nullable<int> _Visits;
		
		private System.Nullable<int> _Category;
		
		private byte _SecureObject;
		
		private System.Nullable<System.DateTime> _TrashedDate;
		
		private string _UploadedImagePath;
		
		private bool _VisibleInMenu;
		
		private EntitySet<Object_X_ObjectWidget> _Object_X_ObjectWidgets;
		
		private EntityRef<Puff> _Puff;
		
		private EntitySet<ObjectsInRole> _ObjectsInRoles;
		
		private EntityRef<TreeStructure> _TreeStructure;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<ObjectType> _ObjectType;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnStructureChanging(string value);
    partial void OnStructureChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnIntroTextChanging(string value);
    partial void OnIntroTextChanged();
    partial void OnHTMLContentChanging(string value);
    partial void OnHTMLContentChanged();
    partial void OnMetaTitleChanging(string value);
    partial void OnMetaTitleChanged();
    partial void OnMetaKeywordsChanging(string value);
    partial void OnMetaKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnLastChangedChanging(System.DateTime value);
    partial void OnLastChangedChanged();
    partial void OnSortorderChanging(System.Nullable<int> value);
    partial void OnSortorderChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnAltChanging(string value);
    partial void OnAltChanged();
    partial void OnObjectTypeIDChanging(System.Nullable<int> value);
    partial void OnObjectTypeIDChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnObjectKeyChanging(string value);
    partial void OnObjectKeyChanged();
    partial void OnListIDChanging(System.Nullable<int> value);
    partial void OnListIDChanged();
    partial void OnPublishFromChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishFromChanged();
    partial void OnPublishToChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishToChanged();
    partial void OnLinkTargetChanging(string value);
    partial void OnLinkTargetChanged();
    partial void OnVisitsChanging(System.Nullable<int> value);
    partial void OnVisitsChanged();
    partial void OnCategoryChanging(System.Nullable<int> value);
    partial void OnCategoryChanged();
    partial void OnSecureObjectChanging(byte value);
    partial void OnSecureObjectChanged();
    partial void OnTrashedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrashedDateChanged();
    partial void OnUploadedImagePathChanging(string value);
    partial void OnUploadedImagePathChanged();
    partial void OnVisibleInMenuChanging(bool value);
    partial void OnVisibleInMenuChanged();
    #endregion
		
		public Object()
		{
			this._Object_X_ObjectWidgets = new EntitySet<Object_X_ObjectWidget>(new Action<Object_X_ObjectWidget>(this.attach_Object_X_ObjectWidgets), new Action<Object_X_ObjectWidget>(this.detach_Object_X_ObjectWidgets));
			this._Puff = default(EntityRef<Puff>);
			this._ObjectsInRoles = new EntitySet<ObjectsInRole>(new Action<ObjectsInRole>(this.attach_ObjectsInRoles), new Action<ObjectsInRole>(this.detach_ObjectsInRoles));
			this._TreeStructure = default(EntityRef<TreeStructure>);
			this._Language = default(EntityRef<Language>);
			this._ObjectType = default(EntityRef<ObjectType>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Structure", DbType="NVarChar(50)")]
		public string Structure
		{
			get
			{
				return this._Structure;
			}
			set
			{
				if ((this._Structure != value))
				{
					this.OnStructureChanging(value);
					this.SendPropertyChanging();
					this._Structure = value;
					this.SendPropertyChanged("Structure");
					this.OnStructureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(500)")]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroText", DbType="NVarChar(2000)")]
		public string IntroText
		{
			get
			{
				return this._IntroText;
			}
			set
			{
				if ((this._IntroText != value))
				{
					this.OnIntroTextChanging(value);
					this.SendPropertyChanging();
					this._IntroText = value;
					this.SendPropertyChanged("IntroText");
					this.OnIntroTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this.OnHTMLContentChanging(value);
					this.SendPropertyChanging();
					this._HTMLContent = value;
					this.SendPropertyChanged("HTMLContent");
					this.OnHTMLContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(100)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this.OnMetaTitleChanging(value);
					this.SendPropertyChanging();
					this._MetaTitle = value;
					this.SendPropertyChanged("MetaTitle");
					this.OnMetaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(1000)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this.OnMetaKeywordsChanging(value);
					this.SendPropertyChanging();
					this._MetaKeywords = value;
					this.SendPropertyChanged("MetaKeywords");
					this.OnMetaKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(1000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanged", DbType="DateTime NOT NULL")]
		public System.DateTime LastChanged
		{
			get
			{
				return this._LastChanged;
			}
			set
			{
				if ((this._LastChanged != value))
				{
					this.OnLastChangedChanging(value);
					this.SendPropertyChanging();
					this._LastChanged = value;
					this.SendPropertyChanged("LastChanged");
					this.OnLastChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sortorder", DbType="Int")]
		public System.Nullable<int> Sortorder
		{
			get
			{
				return this._Sortorder;
			}
			set
			{
				if ((this._Sortorder != value))
				{
					this.OnSortorderChanging(value);
					this.SendPropertyChanging();
					this._Sortorder = value;
					this.SendPropertyChanged("Sortorder");
					this.OnSortorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(100)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt", DbType="NVarChar(1000)")]
		public string Alt
		{
			get
			{
				return this._Alt;
			}
			set
			{
				if ((this._Alt != value))
				{
					this.OnAltChanging(value);
					this.SendPropertyChanging();
					this._Alt = value;
					this.SendPropertyChanged("Alt");
					this.OnAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int")]
		public System.Nullable<int> ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="NVarChar(10)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(15)")]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this.OnObjectKeyChanging(value);
					this.SendPropertyChanging();
					this._ObjectKey = value;
					this.SendPropertyChanged("ObjectKey");
					this.OnObjectKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int")]
		public System.Nullable<int> ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishFrom
		{
			get
			{
				return this._PublishFrom;
			}
			set
			{
				if ((this._PublishFrom != value))
				{
					this.OnPublishFromChanging(value);
					this.SendPropertyChanging();
					this._PublishFrom = value;
					this.SendPropertyChanged("PublishFrom");
					this.OnPublishFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTo
		{
			get
			{
				return this._PublishTo;
			}
			set
			{
				if ((this._PublishTo != value))
				{
					this.OnPublishToChanging(value);
					this.SendPropertyChanging();
					this._PublishTo = value;
					this.SendPropertyChanged("PublishTo");
					this.OnPublishToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTarget", DbType="NVarChar(10)")]
		public string LinkTarget
		{
			get
			{
				return this._LinkTarget;
			}
			set
			{
				if ((this._LinkTarget != value))
				{
					this.OnLinkTargetChanging(value);
					this.SendPropertyChanging();
					this._LinkTarget = value;
					this.SendPropertyChanged("LinkTarget");
					this.OnLinkTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visits", DbType="Int")]
		public System.Nullable<int> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				if ((this._Visits != value))
				{
					this.OnVisitsChanging(value);
					this.SendPropertyChanging();
					this._Visits = value;
					this.SendPropertyChanged("Visits");
					this.OnVisitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int")]
		public System.Nullable<int> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecureObject", DbType="TinyInt NOT NULL")]
		public byte SecureObject
		{
			get
			{
				return this._SecureObject;
			}
			set
			{
				if ((this._SecureObject != value))
				{
					this.OnSecureObjectChanging(value);
					this.SendPropertyChanging();
					this._SecureObject = value;
					this.SendPropertyChanged("SecureObject");
					this.OnSecureObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrashedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrashedDate
		{
			get
			{
				return this._TrashedDate;
			}
			set
			{
				if ((this._TrashedDate != value))
				{
					this.OnTrashedDateChanging(value);
					this.SendPropertyChanging();
					this._TrashedDate = value;
					this.SendPropertyChanged("TrashedDate");
					this.OnTrashedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedImagePath", DbType="NVarChar(400)")]
		public string UploadedImagePath
		{
			get
			{
				return this._UploadedImagePath;
			}
			set
			{
				if ((this._UploadedImagePath != value))
				{
					this.OnUploadedImagePathChanging(value);
					this.SendPropertyChanging();
					this._UploadedImagePath = value;
					this.SendPropertyChanged("UploadedImagePath");
					this.OnUploadedImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisibleInMenu", DbType="Bit NOT NULL")]
		public bool VisibleInMenu
		{
			get
			{
				return this._VisibleInMenu;
			}
			set
			{
				if ((this._VisibleInMenu != value))
				{
					this.OnVisibleInMenuChanging(value);
					this.SendPropertyChanging();
					this._VisibleInMenu = value;
					this.SendPropertyChanged("VisibleInMenu");
					this.OnVisibleInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_X_ObjectWidget", Storage="_Object_X_ObjectWidgets", ThisKey="ObjectID", OtherKey="Object_FK")]
		public EntitySet<Object_X_ObjectWidget> Object_X_ObjectWidgets
		{
			get
			{
				return this._Object_X_ObjectWidgets;
			}
			set
			{
				this._Object_X_ObjectWidgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Puff", Storage="_Puff", ThisKey="ObjectID", OtherKey="Object_FK", IsUnique=true, IsForeignKey=false)]
		public Puff Puff
		{
			get
			{
				return this._Puff.Entity;
			}
			set
			{
				Puff previousValue = this._Puff.Entity;
				if (((previousValue != value) 
							|| (this._Puff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Puff.Entity = null;
						previousValue.Object = null;
					}
					this._Puff.Entity = value;
					if ((value != null))
					{
						value.Object = this;
					}
					this.SendPropertyChanged("Puff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_ObjectsInRole", Storage="_ObjectsInRoles", ThisKey="ObjectID", OtherKey="ObjectID")]
		public EntitySet<ObjectsInRole> ObjectsInRoles
		{
			get
			{
				return this._ObjectsInRoles;
			}
			set
			{
				this._ObjectsInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_TreeStructure", Storage="_TreeStructure", ThisKey="ObjectID", OtherKey="ObjectID", IsUnique=true, IsForeignKey=false)]
		public TreeStructure TreeStructure
		{
			get
			{
				return this._TreeStructure.Entity;
			}
			set
			{
				TreeStructure previousValue = this._TreeStructure.Entity;
				if (((previousValue != value) 
							|| (this._TreeStructure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TreeStructure.Entity = null;
						previousValue.Object = null;
					}
					this._TreeStructure.Entity = value;
					if ((value != null))
					{
						value.Object = this;
					}
					this.SendPropertyChanged("TreeStructure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_Object", Storage="_Language", ThisKey="LangID", OtherKey="LangID", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._LangID = value.LangID;
					}
					else
					{
						this._LangID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectType_Object", Storage="_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public ObjectType ObjectType
		{
			get
			{
				return this._ObjectType.Entity;
			}
			set
			{
				ObjectType previousValue = this._ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectType.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._ObjectType.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Object", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Object_X_ObjectWidgets(Object_X_ObjectWidget entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Object_X_ObjectWidgets(Object_X_ObjectWidget entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_ObjectsInRoles(ObjectsInRole entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_ObjectsInRoles(ObjectsInRole entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Puffs")]
	public partial class Puff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Object_FK;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObject_FKChanging(int value);
    partial void OnObject_FKChanged();
    #endregion
		
		public Puff()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_FK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Object_FK
		{
			get
			{
				return this._Object_FK;
			}
			set
			{
				if ((this._Object_FK != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObject_FKChanging(value);
					this.SendPropertyChanging();
					this._Object_FK = value;
					this.SendPropertyChanged("Object_FK");
					this.OnObject_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Puff", Storage="_Object", ThisKey="Object_FK", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Puff = null;
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Puff = this;
						this._Object_FK = value.ObjectID;
					}
					else
					{
						this._Object_FK = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Site")]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteID;
		
		private string _SiteName;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _ConfigID;
		
		private EntitySet<SiteLanguage> _SiteLanguages;
		
		private EntitySet<ObjectWidgetPlaceHolder> _ObjectWidgetPlaceHolders;
		
		private EntitySet<ObjectWidget> _ObjectWidgets;
		
		private EntitySet<Object> _Objects;
		
		private EntitySet<SiteObjectType> _SiteObjectTypes;
		
		private EntitySet<Admin> _Admins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnConfigIDChanging(System.Nullable<int> value);
    partial void OnConfigIDChanged();
    #endregion
		
		public Site()
		{
			this._SiteLanguages = new EntitySet<SiteLanguage>(new Action<SiteLanguage>(this.attach_SiteLanguages), new Action<SiteLanguage>(this.detach_SiteLanguages));
			this._ObjectWidgetPlaceHolders = new EntitySet<ObjectWidgetPlaceHolder>(new Action<ObjectWidgetPlaceHolder>(this.attach_ObjectWidgetPlaceHolders), new Action<ObjectWidgetPlaceHolder>(this.detach_ObjectWidgetPlaceHolders));
			this._ObjectWidgets = new EntitySet<ObjectWidget>(new Action<ObjectWidget>(this.attach_ObjectWidgets), new Action<ObjectWidget>(this.detach_ObjectWidgets));
			this._Objects = new EntitySet<Object>(new Action<Object>(this.attach_Objects), new Action<Object>(this.detach_Objects));
			this._SiteObjectTypes = new EntitySet<SiteObjectType>(new Action<SiteObjectType>(this.attach_SiteObjectTypes), new Action<SiteObjectType>(this.detach_SiteObjectTypes));
			this._Admins = new EntitySet<Admin>(new Action<Admin>(this.attach_Admins), new Action<Admin>(this.detach_Admins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigID", DbType="Int")]
		public System.Nullable<int> ConfigID
		{
			get
			{
				return this._ConfigID;
			}
			set
			{
				if ((this._ConfigID != value))
				{
					this.OnConfigIDChanging(value);
					this.SendPropertyChanging();
					this._ConfigID = value;
					this.SendPropertyChanged("ConfigID");
					this.OnConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteLanguage", Storage="_SiteLanguages", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<SiteLanguage> SiteLanguages
		{
			get
			{
				return this._SiteLanguages;
			}
			set
			{
				this._SiteLanguages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_ObjectWidgetPlaceHolder", Storage="_ObjectWidgetPlaceHolders", ThisKey="SiteID", OtherKey="Site_FK")]
		public EntitySet<ObjectWidgetPlaceHolder> ObjectWidgetPlaceHolders
		{
			get
			{
				return this._ObjectWidgetPlaceHolders;
			}
			set
			{
				this._ObjectWidgetPlaceHolders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_ObjectWidget", Storage="_ObjectWidgets", ThisKey="SiteID", OtherKey="Site_FK")]
		public EntitySet<ObjectWidget> ObjectWidgets
		{
			get
			{
				return this._ObjectWidgets;
			}
			set
			{
				this._ObjectWidgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Object", Storage="_Objects", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<Object> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteObjectType", Storage="_SiteObjectTypes", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<SiteObjectType> SiteObjectTypes
		{
			get
			{
				return this._SiteObjectTypes;
			}
			set
			{
				this._SiteObjectTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Admin", Storage="_Admins", ThisKey="SiteID", OtherKey="siteID")]
		public EntitySet<Admin> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SiteLanguages(SiteLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_SiteLanguages(SiteLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_ObjectWidgetPlaceHolders(ObjectWidgetPlaceHolder entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_ObjectWidgetPlaceHolders(ObjectWidgetPlaceHolder entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_ObjectWidgets(ObjectWidget entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_ObjectWidgets(ObjectWidget entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_SiteObjectTypes(SiteObjectType entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_SiteObjectTypes(SiteObjectType entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteObjectType")]
	public partial class SiteObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteID;
		
		private int _ObjectTypeID;
		
		private string _ObjectTypeURL;
		
		private bool _UseLongURL;
		
		private EntityRef<ObjectType> _ObjectType;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnObjectTypeURLChanging(string value);
    partial void OnObjectTypeURLChanged();
    partial void OnUseLongURLChanging(bool value);
    partial void OnUseLongURLChanged();
    #endregion
		
		public SiteObjectType()
		{
			this._ObjectType = default(EntityRef<ObjectType>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeURL", DbType="NVarChar(255)")]
		public string ObjectTypeURL
		{
			get
			{
				return this._ObjectTypeURL;
			}
			set
			{
				if ((this._ObjectTypeURL != value))
				{
					this.OnObjectTypeURLChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeURL = value;
					this.SendPropertyChanged("ObjectTypeURL");
					this.OnObjectTypeURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLongURL", DbType="Bit NOT NULL")]
		public bool UseLongURL
		{
			get
			{
				return this._UseLongURL;
			}
			set
			{
				if ((this._UseLongURL != value))
				{
					this.OnUseLongURLChanging(value);
					this.SendPropertyChanging();
					this._UseLongURL = value;
					this.SendPropertyChanged("UseLongURL");
					this.OnUseLongURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectType_SiteObjectType", Storage="_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public ObjectType ObjectType
		{
			get
			{
				return this._ObjectType.Entity;
			}
			set
			{
				ObjectType previousValue = this._ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectType.Entity = null;
						previousValue.SiteObjectTypes.Remove(this);
					}
					this._ObjectType.Entity = value;
					if ((value != null))
					{
						value.SiteObjectTypes.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(int);
					}
					this.SendPropertyChanged("ObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteObjectType", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.SiteObjectTypes.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.SiteObjectTypes.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(int);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectsInRoles")]
	public partial class ObjectsInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectID;
		
		private System.Guid _RoleID;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnRoleIDChanging(System.Guid value);
    partial void OnRoleIDChanged();
    #endregion
		
		public ObjectsInRole()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_ObjectsInRole", Storage="_Object", ThisKey="ObjectID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.ObjectsInRoles.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.ObjectsInRoles.Add(this);
						this._ObjectID = value.ObjectID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RoleName;
		
		private System.Nullable<int> _SiteID;
		
		private EntitySet<AdminRole> _AdminRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnSiteIDChanging(System.Nullable<int> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Role()
		{
			this._AdminRoles = new EntitySet<AdminRole>(new Action<AdminRole>(this.attach_AdminRoles), new Action<AdminRole>(this.detach_AdminRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_AdminRole", Storage="_AdminRoles", ThisKey="ID", OtherKey="RoleID")]
		public EntitySet<AdminRole> AdminRoles
		{
			get
			{
				return this._AdminRoles;
			}
			set
			{
				this._AdminRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminRoles(AdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_AdminRoles(AdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminRoles")]
	public partial class AdminRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private int _AdminID;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    #endregion
		
		public AdminRole()
		{
			this._Role = default(EntityRef<Role>);
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_AdminRole", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.AdminRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.AdminRoles.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_AdminRole", Storage="_Admin", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.AdminRoles.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.AdminRoles.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _email;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<int> _siteID;
		
		private int _AdminLanguage_FK;
		
		private System.Nullable<int> _mailNotifications;
		
		private EntitySet<AdminRole> _AdminRoles;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnsiteIDChanging(System.Nullable<int> value);
    partial void OnsiteIDChanged();
    partial void OnAdminLanguage_FKChanging(int value);
    partial void OnAdminLanguage_FKChanged();
    partial void OnmailNotificationsChanging(System.Nullable<int> value);
    partial void OnmailNotificationsChanged();
    #endregion
		
		public Admin()
		{
			this._AdminRoles = new EntitySet<AdminRole>(new Action<AdminRole>(this.attach_AdminRoles), new Action<AdminRole>(this.detach_AdminRoles));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteID", DbType="Int")]
		public System.Nullable<int> siteID
		{
			get
			{
				return this._siteID;
			}
			set
			{
				if ((this._siteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsiteIDChanging(value);
					this.SendPropertyChanging();
					this._siteID = value;
					this.SendPropertyChanged("siteID");
					this.OnsiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminLanguage_FK", DbType="Int NOT NULL")]
		public int AdminLanguage_FK
		{
			get
			{
				return this._AdminLanguage_FK;
			}
			set
			{
				if ((this._AdminLanguage_FK != value))
				{
					this.OnAdminLanguage_FKChanging(value);
					this.SendPropertyChanging();
					this._AdminLanguage_FK = value;
					this.SendPropertyChanged("AdminLanguage_FK");
					this.OnAdminLanguage_FKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailNotifications", DbType="Int")]
		public System.Nullable<int> mailNotifications
		{
			get
			{
				return this._mailNotifications;
			}
			set
			{
				if ((this._mailNotifications != value))
				{
					this.OnmailNotificationsChanging(value);
					this.SendPropertyChanging();
					this._mailNotifications = value;
					this.SendPropertyChanged("mailNotifications");
					this.OnmailNotificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_AdminRole", Storage="_AdminRoles", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<AdminRole> AdminRoles
		{
			get
			{
				return this._AdminRoles;
			}
			set
			{
				this._AdminRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Admin", Storage="_Site", ThisKey="siteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._siteID = value.SiteID;
					}
					else
					{
						this._siteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminRoles(AdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_AdminRoles(AdminRole entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TreeStructure")]
	public partial class TreeStructure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectID;
		
		private System.Nullable<int> _ParentObjectID;
		
		private System.Nullable<int> _Sort;
		
		private EntityRef<Object> _Object;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnParentObjectIDChanging(System.Nullable<int> value);
    partial void OnParentObjectIDChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    #endregion
		
		public TreeStructure()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentObjectID", DbType="Int")]
		public System.Nullable<int> ParentObjectID
		{
			get
			{
				return this._ParentObjectID;
			}
			set
			{
				if ((this._ParentObjectID != value))
				{
					this.OnParentObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ParentObjectID = value;
					this.SendPropertyChanged("ParentObjectID");
					this.OnParentObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_TreeStructure", Storage="_Object", ThisKey="ObjectID", OtherKey="ObjectID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.TreeStructure = null;
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.TreeStructure = this;
						this._ObjectID = value.ObjectID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class usp_GetTreeMenuResult
	{
		
		private int _ObjectID;
		
		private string _Structure;
		
		private string _Title;
		
		private string _HTMLContent;
		
		private string _MetaTitle;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private System.Nullable<bool> _Active;
		
		private System.DateTime _LastChanged;
		
		private System.Nullable<int> _Sortorder;
		
		private string _Picture;
		
		private string _Alt;
		
		private System.Nullable<int> _ObjectTypeID;
		
		private System.Nullable<int> _SiteID;
		
		private int _LangID;
		
		private System.DateTime _Created;
		
		private string _StartDate;
		
		private string _ObjectKey;
		
		private System.Nullable<int> _ListID;
		
		private System.Nullable<System.DateTime> _PublishFrom;
		
		private System.Nullable<System.DateTime> _PublishTo;
		
		private string _LinkTarget;
		
		private System.Nullable<int> _Visits;
		
		private System.Nullable<int> _Category;
		
		private byte _SecureObject;
		
		private System.Nullable<System.DateTime> _TrashedDate;
		
		private string _UploadedImagePath;
		
		private int _ObjectID1;
		
		private System.Nullable<int> _ParentObjectID;
		
		private System.Nullable<int> _Sort;
		
		public usp_GetTreeMenuResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Structure", DbType="NVarChar(50)")]
		public string Structure
		{
			get
			{
				return this._Structure;
			}
			set
			{
				if ((this._Structure != value))
				{
					this._Structure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this._HTMLContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(100)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this._MetaTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(1000)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this._MetaKeywords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(1000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this._MetaDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanged", DbType="DateTime NOT NULL")]
		public System.DateTime LastChanged
		{
			get
			{
				return this._LastChanged;
			}
			set
			{
				if ((this._LastChanged != value))
				{
					this._LastChanged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sortorder", DbType="Int")]
		public System.Nullable<int> Sortorder
		{
			get
			{
				return this._Sortorder;
			}
			set
			{
				if ((this._Sortorder != value))
				{
					this._Sortorder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(100)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this._Picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt", DbType="NVarChar(1000)")]
		public string Alt
		{
			get
			{
				return this._Alt;
			}
			set
			{
				if ((this._Alt != value))
				{
					this._Alt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int")]
		public System.Nullable<int> ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					this._ObjectTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					this._LangID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="NVarChar(10)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(15)")]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this._ObjectKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int")]
		public System.Nullable<int> ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this._ListID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishFrom
		{
			get
			{
				return this._PublishFrom;
			}
			set
			{
				if ((this._PublishFrom != value))
				{
					this._PublishFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTo
		{
			get
			{
				return this._PublishTo;
			}
			set
			{
				if ((this._PublishTo != value))
				{
					this._PublishTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTarget", DbType="NVarChar(10)")]
		public string LinkTarget
		{
			get
			{
				return this._LinkTarget;
			}
			set
			{
				if ((this._LinkTarget != value))
				{
					this._LinkTarget = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visits", DbType="Int")]
		public System.Nullable<int> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				if ((this._Visits != value))
				{
					this._Visits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int")]
		public System.Nullable<int> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecureObject", DbType="TinyInt NOT NULL")]
		public byte SecureObject
		{
			get
			{
				return this._SecureObject;
			}
			set
			{
				if ((this._SecureObject != value))
				{
					this._SecureObject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrashedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrashedDate
		{
			get
			{
				return this._TrashedDate;
			}
			set
			{
				if ((this._TrashedDate != value))
				{
					this._TrashedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedImagePath", DbType="NVarChar(400)")]
		public string UploadedImagePath
		{
			get
			{
				return this._UploadedImagePath;
			}
			set
			{
				if ((this._UploadedImagePath != value))
				{
					this._UploadedImagePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID1", DbType="Int NOT NULL")]
		public int ObjectID1
		{
			get
			{
				return this._ObjectID1;
			}
			set
			{
				if ((this._ObjectID1 != value))
				{
					this._ObjectID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentObjectID", DbType="Int")]
		public System.Nullable<int> ParentObjectID
		{
			get
			{
				return this._ParentObjectID;
			}
			set
			{
				if ((this._ParentObjectID != value))
				{
					this._ParentObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this._Sort = value;
				}
			}
		}
	}
	
	public partial class usp_GetObjectResult
	{
		
		private int _ObjectID;
		
		private string _Structure;
		
		private string _Title;
		
		private string _HTMLContent;
		
		private string _MetaTitle;
		
		private string _MetaKeywords;
		
		private string _MetaDescription;
		
		private System.Nullable<bool> _Active;
		
		private System.DateTime _LastChanged;
		
		private System.Nullable<int> _Sortorder;
		
		private string _Picture;
		
		private string _Alt;
		
		private System.Nullable<int> _ObjectTypeID;
		
		private System.Nullable<int> _SiteID;
		
		private int _LangID;
		
		private System.DateTime _Created;
		
		private string _StartDate;
		
		private string _ObjectKey;
		
		private System.Nullable<int> _ListID;
		
		private System.Nullable<System.DateTime> _PublishFrom;
		
		private System.Nullable<System.DateTime> _PublishTo;
		
		private string _LinkTarget;
		
		private System.Nullable<int> _Visits;
		
		private System.Nullable<int> _Category;
		
		private byte _SecureObject;
		
		private System.Nullable<System.DateTime> _TrashedDate;
		
		private string _UploadedImagePath;
		
		public usp_GetObjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Structure", DbType="NVarChar(50)")]
		public string Structure
		{
			get
			{
				return this._Structure;
			}
			set
			{
				if ((this._Structure != value))
				{
					this._Structure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HTMLContent
		{
			get
			{
				return this._HTMLContent;
			}
			set
			{
				if ((this._HTMLContent != value))
				{
					this._HTMLContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(100)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this._MetaTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeywords", DbType="NVarChar(1000)")]
		public string MetaKeywords
		{
			get
			{
				return this._MetaKeywords;
			}
			set
			{
				if ((this._MetaKeywords != value))
				{
					this._MetaKeywords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(1000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this._MetaDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChanged", DbType="DateTime NOT NULL")]
		public System.DateTime LastChanged
		{
			get
			{
				return this._LastChanged;
			}
			set
			{
				if ((this._LastChanged != value))
				{
					this._LastChanged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sortorder", DbType="Int")]
		public System.Nullable<int> Sortorder
		{
			get
			{
				return this._Sortorder;
			}
			set
			{
				if ((this._Sortorder != value))
				{
					this._Sortorder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(100)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this._Picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt", DbType="NVarChar(1000)")]
		public string Alt
		{
			get
			{
				return this._Alt;
			}
			set
			{
				if ((this._Alt != value))
				{
					this._Alt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int")]
		public System.Nullable<int> ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					this._ObjectTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					this._LangID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="NVarChar(10)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectKey", DbType="NVarChar(15)")]
		public string ObjectKey
		{
			get
			{
				return this._ObjectKey;
			}
			set
			{
				if ((this._ObjectKey != value))
				{
					this._ObjectKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="Int")]
		public System.Nullable<int> ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this._ListID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishFrom
		{
			get
			{
				return this._PublishFrom;
			}
			set
			{
				if ((this._PublishFrom != value))
				{
					this._PublishFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTo
		{
			get
			{
				return this._PublishTo;
			}
			set
			{
				if ((this._PublishTo != value))
				{
					this._PublishTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTarget", DbType="NVarChar(10)")]
		public string LinkTarget
		{
			get
			{
				return this._LinkTarget;
			}
			set
			{
				if ((this._LinkTarget != value))
				{
					this._LinkTarget = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visits", DbType="Int")]
		public System.Nullable<int> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				if ((this._Visits != value))
				{
					this._Visits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int")]
		public System.Nullable<int> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecureObject", DbType="TinyInt NOT NULL")]
		public byte SecureObject
		{
			get
			{
				return this._SecureObject;
			}
			set
			{
				if ((this._SecureObject != value))
				{
					this._SecureObject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrashedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrashedDate
		{
			get
			{
				return this._TrashedDate;
			}
			set
			{
				if ((this._TrashedDate != value))
				{
					this._TrashedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedImagePath", DbType="NVarChar(400)")]
		public string UploadedImagePath
		{
			get
			{
				return this._UploadedImagePath;
			}
			set
			{
				if ((this._UploadedImagePath != value))
				{
					this._UploadedImagePath = value;
				}
			}
		}
	}
	
	public partial class usp_GetObjectRolesResult
	{
		
		private string _RoleName;
		
		public usp_GetObjectRolesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
	}
	
	public partial class usp_GetTrashedObjectsResult
	{
		
		private int _ObjectID;
		
		private System.Nullable<System.DateTime> _TrashedDate;
		
		private string _Title;
		
		private string _ObjectType;
		
		public usp_GetTrashedObjectsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrashedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrashedDate
		{
			get
			{
				return this._TrashedDate;
			}
			set
			{
				if ((this._TrashedDate != value))
				{
					this._TrashedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this._ObjectType = value;
				}
			}
		}
	}
	
	public partial class usp_EditTreeResult
	{
		
		private System.Nullable<int> _Column1;
		
		public usp_EditTreeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class usp_Forum_GetAllThreadsResult
	{
		
		private int _ThreadID;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _Date;
		
		public usp_Forum_GetAllThreadsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadID", DbType="Int NOT NULL")]
		public int ThreadID
		{
			get
			{
				return this._ThreadID;
			}
			set
			{
				if ((this._ThreadID != value))
				{
					this._ThreadID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	public partial class usp_Calendar_getAllEventCategoriesResult
	{
		
		private int _ID;
		
		private System.Nullable<int> _ObjectID;
		
		private System.Nullable<int> _SiteID;
		
		private string _Title;
		
		private System.Nullable<byte> _PublicEdit;
		
		public usp_Calendar_getAllEventCategoriesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int")]
		public System.Nullable<int> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicEdit", DbType="TinyInt")]
		public System.Nullable<byte> PublicEdit
		{
			get
			{
				return this._PublicEdit;
			}
			set
			{
				if ((this._PublicEdit != value))
				{
					this._PublicEdit = value;
				}
			}
		}
	}
	
	public partial class usp_SaveObjectInTreeResult
	{
		
		private System.Nullable<int> _Column1;
		
		public usp_SaveObjectInTreeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class usp_GetSiteObjectTypeResult
	{
		
		private int _SiteID;
		
		private int _ObjectTypeID;
		
		private string _ObjectTypeURL;
		
		private bool _UseLongURL;
		
		private int _ObjectTypeID1;
		
		private string _ObjectType;
		
		private byte _VisibleInList;
		
		private string _commentsAboutOT;
		
		public usp_GetSiteObjectTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL")]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					this._ObjectTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeURL", DbType="NVarChar(255)")]
		public string ObjectTypeURL
		{
			get
			{
				return this._ObjectTypeURL;
			}
			set
			{
				if ((this._ObjectTypeURL != value))
				{
					this._ObjectTypeURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLongURL", DbType="Bit NOT NULL")]
		public bool UseLongURL
		{
			get
			{
				return this._UseLongURL;
			}
			set
			{
				if ((this._UseLongURL != value))
				{
					this._UseLongURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID1", DbType="Int NOT NULL")]
		public int ObjectTypeID1
		{
			get
			{
				return this._ObjectTypeID1;
			}
			set
			{
				if ((this._ObjectTypeID1 != value))
				{
					this._ObjectTypeID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this._ObjectType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisibleInList", DbType="TinyInt NOT NULL")]
		public byte VisibleInList
		{
			get
			{
				return this._VisibleInList;
			}
			set
			{
				if ((this._VisibleInList != value))
				{
					this._VisibleInList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentsAboutOT", DbType="NVarChar(100)")]
		public string commentsAboutOT
		{
			get
			{
				return this._commentsAboutOT;
			}
			set
			{
				if ((this._commentsAboutOT != value))
				{
					this._commentsAboutOT = value;
				}
			}
		}
	}
	
	public partial class usp_SaveObjectResult
	{
		
		private System.Nullable<int> _Column1;
		
		public usp_SaveObjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class usp_GetLanguagesResult
	{
		
		private int _LangID;
		
		private string _Language;
		
		private string _flagimage;
		
		private int _LangID1;
		
		private int _SiteID;
		
		private System.Nullable<int> _RootID;
		
		private System.Nullable<int> _StartPageID;
		
		public usp_GetLanguagesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					this._LangID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this._Language = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flagimage", DbType="NVarChar(50)")]
		public string flagimage
		{
			get
			{
				return this._flagimage;
			}
			set
			{
				if ((this._flagimage != value))
				{
					this._flagimage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID1", DbType="Int NOT NULL")]
		public int LangID1
		{
			get
			{
				return this._LangID1;
			}
			set
			{
				if ((this._LangID1 != value))
				{
					this._LangID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
		public int SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootID", DbType="Int")]
		public System.Nullable<int> RootID
		{
			get
			{
				return this._RootID;
			}
			set
			{
				if ((this._RootID != value))
				{
					this._RootID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartPageID", DbType="Int")]
		public System.Nullable<int> StartPageID
		{
			get
			{
				return this._StartPageID;
			}
			set
			{
				if ((this._StartPageID != value))
				{
					this._StartPageID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
